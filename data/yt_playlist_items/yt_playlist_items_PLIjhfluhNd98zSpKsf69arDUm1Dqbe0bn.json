{
  "_id": "PLIjhfluhNd98zSpKsf69arDUm1Dqbe0bn",
  "as_of": "2021-12-10 00:21:53.524753",
  "items": [
    {
      "kind": "youtube#playlistItem",
      "etag": "KbPRBJRrV-pe08F5htFoR1WXh8k",
      "id": "UExJamhmbHVoTmQ5OHpTcEtzZjY5YXJEVW0xRHFiZTBibi42NEZDNTU0RTRENDUzRjMz",
      "snippet": {
        "publishedAt": "2021-12-01T12:21:10Z",
        "channelId": "UCqsUJL5xIWuidR7sIrPLhAw",
        "title": "The NEAT Algorithm is Neat",
        "description": "Code samples: https://github.com/Sentdex/NEAT-samples\nNeat-Python: https://neat-python.readthedocs.io/en/latest/\n\nChannel membership: https://www.youtube.com/channel/UCfzlCWGWYyIQ0aLC5w48gBQ/join\nDiscord: https://discord.gg/sentdex\nSupport the content: https://pythonprogramming.net/support-donate/\nTwitter: https://twitter.com/sentdex\nInstagram: https://instagram.com/sentdex\nFacebook: https://www.facebook.com/pythonprogramming.net/\nTwitch: https://www.twitch.tv/sentdex",
        "thumbnails": {
          "default": {
            "url": "https://i.ytimg.com/vi/ZC0gMhYhwW0/default.jpg",
            "width": 120,
            "height": 90
          },
          "medium": {
            "url": "https://i.ytimg.com/vi/ZC0gMhYhwW0/mqdefault.jpg",
            "width": 320,
            "height": 180
          },
          "high": {
            "url": "https://i.ytimg.com/vi/ZC0gMhYhwW0/hqdefault.jpg",
            "width": 480,
            "height": 360
          },
          "standard": {
            "url": "https://i.ytimg.com/vi/ZC0gMhYhwW0/sddefault.jpg",
            "width": 640,
            "height": 480
          },
          "maxres": {
            "url": "https://i.ytimg.com/vi/ZC0gMhYhwW0/maxresdefault.jpg",
            "width": 1280,
            "height": 720
          }
        },
        "channelTitle": "Donald Thompson",
        "playlistId": "PLIjhfluhNd98zSpKsf69arDUm1Dqbe0bn",
        "position": 0,
        "resourceId": {
          "kind": "youtube#video",
          "videoId": "ZC0gMhYhwW0"
        },
        "videoOwnerChannelTitle": "sentdex",
        "videoOwnerChannelId": "UCfzlCWGWYyIQ0aLC5w48gBQ"
      },
      "contentDetails": {
        "videoId": "ZC0gMhYhwW0",
        "videoPublishedAt": "2021-01-07T18:06:13Z"
      }
    },
    {
      "kind": "youtube#playlistItem",
      "etag": "T2xrwDBDNiV2m-uL4G_1zKipIGw",
      "id": "UExJamhmbHVoTmQ5OHpTcEtzZjY5YXJEVW0xRHFiZTBibi5ENEEyOTIwNkY4NzFGMkQ2",
      "snippet": {
        "publishedAt": "2021-12-01T10:23:33Z",
        "channelId": "UCqsUJL5xIWuidR7sIrPLhAw",
        "title": "Python NASA CLI App #2 - Fetching Images and Saving to Filesystem",
        "description": "In this video, we will create a Typer command to fetch images for a given date from the NASA APOD API. Users can pass in the date they want to fetch images for, or else the command will default to the current date.\n\nAPI requests will be made with the Python requests library.\n\nWe will fetch the image from NASA's API and show the image on the user's desktop, using the Pillow library.\n\nWe will also configure a command-line flag that allows users to save the image to a directory on their local filesystem\n\n\ud83d\udccc \ud835\uddd6\ud835\uddf5\ud835\uddee\ud835\uddfd\ud835\ude01\ud835\uddf2\ud835\uddff\ud835\ude00:\n00:00 Intro\n00:24 NASA API Key & Fields\n03:07 Fetching NASA Images\n08:38 Saving Images to Filesystem\n\n\u2615\ufe0f \ud835\uddd5\ud835\ude02\ud835\ude06 \ud835\uddfa\ud835\uddf2 \ud835\uddee \ud835\uddf0\ud835\uddfc\ud835\uddf3\ud835\uddf3\ud835\uddf2\ud835\uddf2:\nTo support the channel and encourage new videos, please consider buying me a coffee here:\nhttps://ko-fi.com/bugbytes\n\n\ud835\udde6\ud835\uddfc\ud835\uddf0\ud835\uddf6\ud835\uddee\ud835\uddf9 \ud835\udde0\ud835\uddf2\ud835\uddf1\ud835\uddf6\ud835\uddee:\n\ud83d\udcd6 Blog: https://www.bugbytes.io/posts/nasa-command-line-application-with-typer-and-python-fetching-images/\n\ud83d\udc7e Github: https://github.com/bugbytes-io/nasa-cli-app/tree/typer2\n\ud83d\udc26 Twitter: https://twitter.com/bugbytesio\n\n\ud83d\udcda \ud835\uddd9\ud835\ude02\ud835\uddff\ud835\ude01\ud835\uddf5\ud835\uddf2\ud835\uddff \ud835\uddff\ud835\uddf2\ud835\uddee\ud835\uddf1\ud835\uddf6\ud835\uddfb\ud835\uddf4 \ud835\uddee\ud835\uddfb\ud835\uddf1 \ud835\uddf6\ud835\uddfb\ud835\uddf3\ud835\uddfc\ud835\uddff\ud835\uddfa\ud835\uddee\ud835\ude01\ud835\uddf6\ud835\uddfc\ud835\uddfb:\nTyper: https://typer.tiangolo.com/\nNASA API: https://api.nasa.gov/\nSample API response: https://api.nasa.gov/planetary/apod?api_key=DEMO_KEY\n\n#typer #python #cli #requests",
        "thumbnails": {
          "default": {
            "url": "https://i.ytimg.com/vi/aOEZ449Ufz8/default.jpg",
            "width": 120,
            "height": 90
          },
          "medium": {
            "url": "https://i.ytimg.com/vi/aOEZ449Ufz8/mqdefault.jpg",
            "width": 320,
            "height": 180
          },
          "high": {
            "url": "https://i.ytimg.com/vi/aOEZ449Ufz8/hqdefault.jpg",
            "width": 480,
            "height": 360
          },
          "standard": {
            "url": "https://i.ytimg.com/vi/aOEZ449Ufz8/sddefault.jpg",
            "width": 640,
            "height": 480
          },
          "maxres": {
            "url": "https://i.ytimg.com/vi/aOEZ449Ufz8/maxresdefault.jpg",
            "width": 1280,
            "height": 720
          }
        },
        "channelTitle": "Donald Thompson",
        "playlistId": "PLIjhfluhNd98zSpKsf69arDUm1Dqbe0bn",
        "position": 1,
        "resourceId": {
          "kind": "youtube#video",
          "videoId": "aOEZ449Ufz8"
        },
        "videoOwnerChannelTitle": "BugBytes",
        "videoOwnerChannelId": "UCTwxaBjziKfy6y_uWu30orA"
      },
      "contentDetails": {
        "videoId": "aOEZ449Ufz8",
        "videoPublishedAt": "2021-11-23T10:16:05Z"
      }
    },
    {
      "kind": "youtube#playlistItem",
      "etag": "SflPeSJtqvuabEWkG_Fyd7tPovg",
      "id": "UExJamhmbHVoTmQ5OHpTcEtzZjY5YXJEVW0xRHFiZTBibi44NjIxNjc5OUQwQkJBODQ5",
      "snippet": {
        "publishedAt": "2021-11-28T17:50:42Z",
        "channelId": "UCqsUJL5xIWuidR7sIrPLhAw",
        "title": "The Best way to build a Python command line tool - Python Typer Tutorial",
        "description": "In this video, I go over what I think is one of the best modules for creating Python Command Line (CLI) Tools.  \n\nI go over What Python Typer is, how to install and import it and how to use variables and command-line switches.\n\nMake Professional look Python CLI Applications today.\n\nIf you want to know how to package a python application:\nhttps://packaging.python.org/tutorials/packaging-projects/\n\n\u2615 Buy me a coffee: https://www.buymeacoffee.com/bradmorg\n\n\ud83d\udc68\u200d\ud83d\udcbb Join our Discord Community of DevOps Engineers: https://discord.com/invite/NW98QYW\n\nCode: https://devopslifecycle.com/lessons/17/python-command-line-tool-python-typer-tutorial\n\n\ud83d\udcd8 Chapters: \n0:00 What is Python Typer\n0:26 Typer Code Example, building commands using functions\n3:36 Adding variables to our Typer CLI application\n5:42 Adding in CLI Switches\n7:22 Adding in autocompletion to our Python CLI App",
        "thumbnails": {
          "default": {
            "url": "https://i.ytimg.com/vi/we3907q1xz4/default.jpg",
            "width": 120,
            "height": 90
          },
          "medium": {
            "url": "https://i.ytimg.com/vi/we3907q1xz4/mqdefault.jpg",
            "width": 320,
            "height": 180
          },
          "high": {
            "url": "https://i.ytimg.com/vi/we3907q1xz4/hqdefault.jpg",
            "width": 480,
            "height": 360
          },
          "standard": {
            "url": "https://i.ytimg.com/vi/we3907q1xz4/sddefault.jpg",
            "width": 640,
            "height": 480
          },
          "maxres": {
            "url": "https://i.ytimg.com/vi/we3907q1xz4/maxresdefault.jpg",
            "width": 1280,
            "height": 720
          }
        },
        "channelTitle": "Donald Thompson",
        "playlistId": "PLIjhfluhNd98zSpKsf69arDUm1Dqbe0bn",
        "position": 2,
        "resourceId": {
          "kind": "youtube#video",
          "videoId": "we3907q1xz4"
        },
        "videoOwnerChannelTitle": "DevOps Journey",
        "videoOwnerChannelId": "UC4Snw5yrSDMXys31I18U3gg"
      },
      "contentDetails": {
        "videoId": "we3907q1xz4",
        "videoPublishedAt": "2021-01-20T14:45:01Z"
      }
    },
    {
      "kind": "youtube#playlistItem",
      "etag": "e4CoZKKVBuUsPJXwZ5MC0yO5KUY",
      "id": "UExJamhmbHVoTmQ5OHpTcEtzZjY5YXJEVW0xRHFiZTBibi4yOTZGRTNEQ0ZGNUM5RDgw",
      "snippet": {
        "publishedAt": "2021-11-28T16:49:05Z",
        "channelId": "UCqsUJL5xIWuidR7sIrPLhAw",
        "title": "__new__ vs __init__ in Python",
        "description": "Try Hostinger: https://hostinger.com/mcoding\nUse coupon code MCODING at checkout for up to 91% off all yearly hosting plans!\n\nThanks to Hostinger for sponsoring this video!\n\nIN THIS VIDEO...\n---------------------------------------------------\nWhat's the difference between the \"__new__\" and \"__init__\" magic methods in Python? New is for object creation, and init is for object initialization. It is rare that a programmer would actually need to override new, so let's see some examples of how it can be used.\n\n\u2015 mCoding with James Murphy (https://mcoding.io)\n\nSource code: https://github.com/mCodingLLC/VideosSampleCode\nPython new docs: https://docs.python.org/3/reference/datamodel.html#object.__new__\ntp_new in CPython: https://github.com/python/cpython/blob/main/Objects/typeobject.c\nC extension example: https://cython.readthedocs.io/en/latest/src/userguide/extension_types.html#existing-pointers-instantiation\nSingleton pattern: https://en.wikipedia.org/wiki/Singleton_pattern\n\nAFFILIATES AND REFERRALS\n---------------------------------------------------\nTry Hostinger: https://hostinger.com/mcoding\nAutomatically Improve Python Code Quality: https://sourcery.ai/?utm_source=YouTube&utm_campaign=mcoding&utm_medium=aff\n\nSUPPORT ME \u2b50\n---------------------------------------------------\nSign up on Patreon to get your donor role and early access to videos!\nhttps://patreon.com/mCoding\n\nFeeling generous but don't have a Patreon? Donate via PayPal! (No sign up needed.)\nhttps://www.paypal.com/donate/?hosted_button_id=VJY5SLZ8BJHEE\n\nWant to donate crypto? Check out the rest of my supported donations on my website!\nhttps://mcoding.io/donate\n\nTop patrons and donors: Laura M, Jameson, John Martin, Dragos C, Vahnekie, Pieter G, Sigmanificient, Casey G\n\nBE ACTIVE IN MY COMMUNITY \ud83d\ude04\n---------------------------------------------------\nDiscord: https://discord.gg/Ye9yJtZQuN\nGithub: https://github.com/mCodingLLC/\nReddit: https://www.reddit.com/r/mCoding/\nFacebook: https://www.facebook.com/james.mcoding\n\nCHAPTERS\n---------------------------------------------------\n0:00 Intro\n0:50 New vs init\n2:51 Main purpose, subclassing immutable types\n5:03 Singleton example\n6:35 Client caching example\n7:58 Encrypted file example\n10:33 Metaclasses",
        "thumbnails": {
          "default": {
            "url": "https://i.ytimg.com/vi/-zsV0_QrfTw/default.jpg",
            "width": 120,
            "height": 90
          },
          "medium": {
            "url": "https://i.ytimg.com/vi/-zsV0_QrfTw/mqdefault.jpg",
            "width": 320,
            "height": 180
          },
          "high": {
            "url": "https://i.ytimg.com/vi/-zsV0_QrfTw/hqdefault.jpg",
            "width": 480,
            "height": 360
          },
          "standard": {
            "url": "https://i.ytimg.com/vi/-zsV0_QrfTw/sddefault.jpg",
            "width": 640,
            "height": 480
          },
          "maxres": {
            "url": "https://i.ytimg.com/vi/-zsV0_QrfTw/maxresdefault.jpg",
            "width": 1280,
            "height": 720
          }
        },
        "channelTitle": "Donald Thompson",
        "playlistId": "PLIjhfluhNd98zSpKsf69arDUm1Dqbe0bn",
        "position": 3,
        "resourceId": {
          "kind": "youtube#video",
          "videoId": "-zsV0_QrfTw"
        },
        "videoOwnerChannelTitle": "mCoding",
        "videoOwnerChannelId": "UCaiL2GDNpLYH6Wokkk1VNcg"
      },
      "contentDetails": {
        "videoId": "-zsV0_QrfTw",
        "videoPublishedAt": "2021-09-25T13:59:40Z"
      }
    },
    {
      "kind": "youtube#playlistItem",
      "etag": "Uev2jg8eP4opcphf7RkmUaxPiRw",
      "id": "UExJamhmbHVoTmQ5OHpTcEtzZjY5YXJEVW0xRHFiZTBibi43RDg3MzJDMTRFMTZFOTAw",
      "snippet": {
        "publishedAt": "2021-11-28T17:46:13Z",
        "channelId": "UCqsUJL5xIWuidR7sIrPLhAw",
        "title": "Python's comma equals ,= operator?",
        "description": "Do you know what x ,= y does in Python? In this video, we find out.\n\n\u2015 mCoding with James Murphy (https://mcoding.io)\n\nSource code: https://github.com/mCodingLLC/VideosSampleCode\n\nSUPPORT ME \u2b50\n---------------------------------------------------\nSign up on Patreon to get your donor role and early access to videos!\nhttps://patreon.com/mCoding\n\nFeeling generous but don't have a Patreon? Donate via PayPal! (No sign up needed.)\nhttps://www.paypal.com/donate/?hosted_button_id=VJY5SLZ8BJHEE\n\nWant to donate crypto? Check out the rest of my supported donations on my website!\nhttps://mcoding.io/donate\n\nBE ACTIVE IN MY COMMUNITY \ud83d\ude04\n---------------------------------------------------\nDiscord: https://discord.gg/Ye9yJtZQuN\nGithub: https://github.com/mCodingLLC/\nReddit: https://www.reddit.com/r/mCoding/\nFacebook: https://www.facebook.com/james.mcoding",
        "thumbnails": {
          "default": {
            "url": "https://i.ytimg.com/vi/KeIMUw22SZ8/default.jpg",
            "width": 120,
            "height": 90
          },
          "medium": {
            "url": "https://i.ytimg.com/vi/KeIMUw22SZ8/mqdefault.jpg",
            "width": 320,
            "height": 180
          },
          "high": {
            "url": "https://i.ytimg.com/vi/KeIMUw22SZ8/hqdefault.jpg",
            "width": 480,
            "height": 360
          },
          "standard": {
            "url": "https://i.ytimg.com/vi/KeIMUw22SZ8/sddefault.jpg",
            "width": 640,
            "height": 480
          },
          "maxres": {
            "url": "https://i.ytimg.com/vi/KeIMUw22SZ8/maxresdefault.jpg",
            "width": 1280,
            "height": 720
          }
        },
        "channelTitle": "Donald Thompson",
        "playlistId": "PLIjhfluhNd98zSpKsf69arDUm1Dqbe0bn",
        "position": 4,
        "resourceId": {
          "kind": "youtube#video",
          "videoId": "KeIMUw22SZ8"
        },
        "videoOwnerChannelTitle": "mCoding",
        "videoOwnerChannelId": "UCaiL2GDNpLYH6Wokkk1VNcg"
      },
      "contentDetails": {
        "videoId": "KeIMUw22SZ8",
        "videoPublishedAt": "2020-10-18T18:14:31Z"
      }
    },
    {
      "kind": "youtube#playlistItem",
      "etag": "pvk9aZk9GFOwxT3XS45PNorv1YA",
      "id": "UExJamhmbHVoTmQ5OHpTcEtzZjY5YXJEVW0xRHFiZTBibi43NjE5NDdDRTdENjQ3RTkw",
      "snippet": {
        "publishedAt": "2021-11-29T01:40:13Z",
        "channelId": "UCqsUJL5xIWuidR7sIrPLhAw",
        "title": "Python's staticmethod and classmethod, what are they for?",
        "description": "Try Hostinger: https://hostinger.com/mcoding\nUse coupon code MCODING at checkout for up to 91% off all yearly hosting plans!\n\nThanks to Hostinger for sponsoring this video!\n\nIN THIS VIDEO...\n---------------------------------------------------\nWhat are Python's staticmethod and classmethod? How do they work? What are they good for? Let's find out.\n\n\u2015 mCoding with James Murphy (https://mcoding.io)\n\nSource code: https://github.com/mCodingLLC/VideosSampleCode\n\nSUPPORT ME \u2b50\n---------------------------------------------------\nSign up on Patreon to get your donor role and early access to videos!\nhttps://patreon.com/mCoding\n\nFeeling generous but don't have a Patreon? Donate via PayPal! (No sign up needed.)\nhttps://www.paypal.com/donate/?hosted_button_id=VJY5SLZ8BJHEE\n\nWant to donate crypto? Check out the rest of my supported donations on my website!\nhttps://mcoding.io/donate\n\nTop patrons and donors: Jameson, Laura M, Dragos C, Vahnekie, John Martin, Casey G, Pieter G, Krisztian M,  Mutual Information, Sigmanificient\n\nBE ACTIVE IN MY COMMUNITY \ud83d\ude04\n---------------------------------------------------\nDiscord: https://discord.gg/Ye9yJtZQuN\nGithub: https://github.com/mCodingLLC/\nReddit: https://www.reddit.com/r/mCoding/\nFacebook: https://www.facebook.com/james.mcoding",
        "thumbnails": {
          "default": {
            "url": "https://i.ytimg.com/vi/SXApHXsDe8I/default.jpg",
            "width": 120,
            "height": 90
          },
          "medium": {
            "url": "https://i.ytimg.com/vi/SXApHXsDe8I/mqdefault.jpg",
            "width": 320,
            "height": 180
          },
          "high": {
            "url": "https://i.ytimg.com/vi/SXApHXsDe8I/hqdefault.jpg",
            "width": 480,
            "height": 360
          },
          "standard": {
            "url": "https://i.ytimg.com/vi/SXApHXsDe8I/sddefault.jpg",
            "width": 640,
            "height": 480
          },
          "maxres": {
            "url": "https://i.ytimg.com/vi/SXApHXsDe8I/maxresdefault.jpg",
            "width": 1280,
            "height": 720
          }
        },
        "channelTitle": "Donald Thompson",
        "playlistId": "PLIjhfluhNd98zSpKsf69arDUm1Dqbe0bn",
        "position": 5,
        "resourceId": {
          "kind": "youtube#video",
          "videoId": "SXApHXsDe8I"
        },
        "videoOwnerChannelTitle": "mCoding",
        "videoOwnerChannelId": "UCaiL2GDNpLYH6Wokkk1VNcg"
      },
      "contentDetails": {
        "videoId": "SXApHXsDe8I",
        "videoPublishedAt": "2021-11-27T15:00:11Z"
      }
    },
    {
      "kind": "youtube#playlistItem",
      "etag": "wfQNXytQPbJBoO-ssa69QFHJwHQ",
      "id": "UExJamhmbHVoTmQ5OHpTcEtzZjY5YXJEVW0xRHFiZTBibi5BNzdEQzY0REQzQTEyN0U3",
      "snippet": {
        "publishedAt": "2021-11-28T17:46:07Z",
        "channelId": "UCqsUJL5xIWuidR7sIrPLhAw",
        "title": "Python's sharpest corner is ... plus equals? (+=)",
        "description": "Python's plus equals augmented assignment syntax is more complex than many people realize. Let's take a look.\n\n(Sorry for the dark purple again! I've changed it in my ide to pink for the future!)\n\n\u2015 mCoding with James Murphy (https://mcoding.io)\n\nSource code: https://github.com/mCodingLLC/VideosSampleCode\nDocs for iadd: https://docs.python.org/3/reference/datamodel.html#object.__iadd__\n\nSUPPORT ME \u2b50\n---------------------------------------------------\nSign up on Patreon to get your donor role and early access to videos!\nhttps://patreon.com/mCoding\n\nFeeling generous but don't have a Patreon? Donate via PayPal! (No sign up needed.)\nhttps://www.paypal.com/donate/?hosted_button_id=VJY5SLZ8BJHEE\n\nWant to donate crypto? Check out the rest of my supported donations on my website!\nhttps://mcoding.io/donate\n\nBE ACTIVE IN MY COMMUNITY \ud83d\ude04\n---------------------------------------------------\nDiscord: https://discord.gg/Ye9yJtZQuN\nGithub: https://github.com/mCodingLLC/\nReddit: https://www.reddit.com/r/mCoding/\nFacebook: https://www.facebook.com/james.mcoding",
        "thumbnails": {
          "default": {
            "url": "https://i.ytimg.com/vi/cGveIvwwSq4/default.jpg",
            "width": 120,
            "height": 90
          },
          "medium": {
            "url": "https://i.ytimg.com/vi/cGveIvwwSq4/mqdefault.jpg",
            "width": 320,
            "height": 180
          },
          "high": {
            "url": "https://i.ytimg.com/vi/cGveIvwwSq4/hqdefault.jpg",
            "width": 480,
            "height": 360
          },
          "standard": {
            "url": "https://i.ytimg.com/vi/cGveIvwwSq4/sddefault.jpg",
            "width": 640,
            "height": 480
          },
          "maxres": {
            "url": "https://i.ytimg.com/vi/cGveIvwwSq4/maxresdefault.jpg",
            "width": 1280,
            "height": 720
          }
        },
        "channelTitle": "Donald Thompson",
        "playlistId": "PLIjhfluhNd98zSpKsf69arDUm1Dqbe0bn",
        "position": 6,
        "resourceId": {
          "kind": "youtube#video",
          "videoId": "cGveIvwwSq4"
        },
        "videoOwnerChannelTitle": "mCoding",
        "videoOwnerChannelId": "UCaiL2GDNpLYH6Wokkk1VNcg"
      },
      "contentDetails": {
        "videoId": "cGveIvwwSq4",
        "videoPublishedAt": "2021-04-13T13:00:13Z"
      }
    },
    {
      "kind": "youtube#playlistItem",
      "etag": "UWGV82bb8Cq7752zKJIvjZ2JKm0",
      "id": "UExJamhmbHVoTmQ5OHpTcEtzZjY5YXJEVW0xRHFiZTBibi5EODgyNjY4MzA3QzY5RTkx",
      "snippet": {
        "publishedAt": "2021-11-28T17:45:48Z",
        "channelId": "UCqsUJL5xIWuidR7sIrPLhAw",
        "title": "Automated Testing in Python with pytest, tox, and GitHub Actions",
        "description": "Automated testing in Python is an important way to take your Python project to the next level of dependability and professionalism. There are a lot of steps, but it's not too difficult to setup your tests to run automatically across multiple different operating systems and versions of Python whenever you push a commit or receive a pull request on your repository. We show you the entire process, step by step, to take a plain old project and turn it into an installable package with automated tests that run when you push to GitHub. We use pytest, mypy, and flake8 for testing, type checking, and code linting. Then we use tox to run all of these commands in isolated virtual environments. Finally, we use GitHub actions to run tox on a push or a pull request. Automated testing is the first and most important step in the more general world of continuous integration (CI), and continuous delivery or continuous deployment (CD). In this video we focus on automated testing, not on general CI/CD, as there is already PLENTY of material to cover.\n\n\u2015 mCoding with James Murphy (https://mcoding.io)\n\nSource code: https://github.com/mCodingLLC/SlapThatLikeButton-TestingStarterProject\nOther code: https://github.com/mCodingLLC/VideosSampleCode\npytest docs: https://docs.pytest.org/en/latest/\nmypy docs: https://mypy.readthedocs.io/en/stable/index.html\nflake8 docs: https://flake8.pycqa.org/en/latest/\nsetuptools (setup py and setup cfg) docs: https://setuptools.readthedocs.io/en/latest/index.html\ntox docs: https://tox.readthedocs.io/en/latest/\nGitHub Actions docs: https://docs.github.com/en/actions\ntox-gh-actions repo: https://github.com/ymyzk/tox-gh-actions\n\nSUPPORT ME \u2b50\n---------------------------------------------------\nSign up on Patreon to get your donor role and early access to videos!\nhttps://patreon.com/mCoding\n\nFeeling generous but don't have a Patreon? Donate via PayPal! (No sign up needed.)\nhttps://www.paypal.com/donate/?hosted_button_id=VJY5SLZ8BJHEE\n\nWant to donate crypto? Check out the rest of my supported donations on my website!\nhttps://mcoding.io/donate\n\nTop patrons and donors: Laura M, Jameson, John Martin, Dragos C, Vahnekie, Pieter G, Sigmanificient, Casey G\n\nBE ACTIVE IN MY COMMUNITY \ud83d\ude04\n---------------------------------------------------\nDiscord: https://discord.gg/Ye9yJtZQuN\nGithub: https://github.com/mCodingLLC/\nReddit: https://www.reddit.com/r/mCoding/\nFacebook: https://www.facebook.com/james.mcoding\n\nCHAPTERS\n---------------------------------------------------\n0:00 Intro\n1:21 Overview of the video\n2:56 Structuring your project\n8:35 Pytest, mypy, flake8\n10:58 Pytest features\n18:34 Test multiple envs with tox\n21:18 Test on commit with GH Actions\n25:22 Readme badge\n26:34 Thanks",
        "thumbnails": {
          "default": {
            "url": "https://i.ytimg.com/vi/DhUpxWjOhME/default.jpg",
            "width": 120,
            "height": 90
          },
          "medium": {
            "url": "https://i.ytimg.com/vi/DhUpxWjOhME/mqdefault.jpg",
            "width": 320,
            "height": 180
          },
          "high": {
            "url": "https://i.ytimg.com/vi/DhUpxWjOhME/hqdefault.jpg",
            "width": 480,
            "height": 360
          },
          "standard": {
            "url": "https://i.ytimg.com/vi/DhUpxWjOhME/sddefault.jpg",
            "width": 640,
            "height": 480
          },
          "maxres": {
            "url": "https://i.ytimg.com/vi/DhUpxWjOhME/maxresdefault.jpg",
            "width": 1280,
            "height": 720
          }
        },
        "channelTitle": "Donald Thompson",
        "playlistId": "PLIjhfluhNd98zSpKsf69arDUm1Dqbe0bn",
        "position": 7,
        "resourceId": {
          "kind": "youtube#video",
          "videoId": "DhUpxWjOhME"
        },
        "videoOwnerChannelTitle": "mCoding",
        "videoOwnerChannelId": "UCaiL2GDNpLYH6Wokkk1VNcg"
      },
      "contentDetails": {
        "videoId": "DhUpxWjOhME",
        "videoPublishedAt": "2021-09-11T13:56:07Z"
      }
    },
    {
      "kind": "youtube#playlistItem",
      "etag": "_LsCrHDJvejlgyjmmD0AilRf4WI",
      "id": "UExJamhmbHVoTmQ5OHpTcEtzZjY5YXJEVW0xRHFiZTBibi4zNDIxRUJGQThFRTg1QzAy",
      "snippet": {
        "publishedAt": "2021-11-28T17:45:28Z",
        "channelId": "UCqsUJL5xIWuidR7sIrPLhAw",
        "title": "Mind-bending metaclasses - adding function overloads to Python",
        "description": "Metaclasses in Python allow you to customize the class creation process. We go over what metaclasses are and give some notable examples, including: abstract base classes, adding function overloads, and dataclasses or code generation.\n\nCONTEST WINNERS (CONTEST ENDED 10/9/21) :\nPyCharm: Yannick Kuhn, peter duffy\nCLion: BalkanSwine, Laurin Neff\n\nOFFICIAL CONTEST RULES:\n1. All entries must comply with the YouTube community guidelines ( http://www.youtube.com/t/community_guidelines) and YouTube Terms of Service (http://www.youtube.com/static?gl=US&template=terms). Entries that violate YouTube guidelines are automatically disqualified.\n2. YouTube is not a sponsor of the contest\u00a0and viewers are required\u00a0to release YouTube from any\u00a0liability related to the contest.\n3. Privacy notice: no personal data will be collected for this contest.\n4. In order to enter, you must (a) be one of my subscribers, AND (b) make a top-level comment to the video including #pycharm or #clion or both. If you only include one you will only have a chance to win that corresponding license.\n5. The contest is free, there is no fee required to enter.\n6. Winners will be chosen randomly 1 week after the date the video went live from all users who have entered and not been disqualified.\n7. Each winner will be notified via a comment reply from me that details what prize was won (e.g. \"Congratulations! You have won XYZ. Please email me.\"). I will ask the winner to contact me by email, and I will reply through email with a random token which must be posted as another reply to the winning comment from the winning account in order to verify account ownership and prevent fraud.\n8. Each winner will have 72 hours to respond AND prove account ownership or their prize is automatically forfeited and another winner will be chosen.\n9. A winner can only win 1 prize per contest.\n10. The prize pool for this contest is: 2 licenses for PyCharm Professional (\"Free 1-Year Personal Subscription\") and 2 licenses for CLion (\"Free 1-Year Personal Subscription\"), which are products made by JetBrains. A prize consists of 1 license, which will be delivered in the form of a redeemable code that can be redeemed at https://www.jetbrains.com/store/redeem/ before May 01, 2022.\n11. You may not enter the contest if doing so would be a violation of any relevant federal, state, and local laws, rules, and regulations, including U.S. sanctions.\n\n\u2015 mCoding with James Murphy (https://mcoding.io)\n\nSource code: https://github.com/mCodingLLC/VideosSampleCode\nPython metaclass docs: https://docs.python.org/3/reference/datamodel.html#metaclasses\nPrevious video on new: https://www.youtube.com/watch?v=-zsV0_QrfTw\nAnother great metaprogramming video: https://www.youtube.com/watch?v=sPiWg5jSoZI\nPython descriptor docs: https://docs.python.org/3/howto/descriptor.html\nPython ABC docs: https://docs.python.org/3/library/abc.html\n\nAFFILIATES AND REFERRALS\n---------------------------------------------------\nAutomatically Improve Python Code Quality: https://sourcery.ai/?utm_source=YouTube&utm_campaign=mcoding&utm_medium=aff\n\nSUPPORT ME \u2b50\n---------------------------------------------------\nSign up on Patreon to get your donor role and early access to videos!\nhttps://patreon.com/mCoding\n\nFeeling generous but don't have a Patreon? Donate via PayPal! (No sign up needed.)\nhttps://www.paypal.com/donate/?hosted_button_id=VJY5SLZ8BJHEE\n\nWant to donate crypto? Check out the rest of my supported donations on my website!\nhttps://mcoding.io/donate\n\nTop patrons and donors: Jameson, Laura M, John Martin, Dragos C, Vahnekie, Pieter G, Casey G, Sigmanificient\n\nBE ACTIVE IN MY COMMUNITY \ud83d\ude04\n---------------------------------------------------\nDiscord: https://discord.gg/Ye9yJtZQuN\nGithub: https://github.com/mCodingLLC/\nReddit: https://www.reddit.com/r/mCoding/\nFacebook: https://www.facebook.com/james.mcoding\n\nCHAPTERS\n---------------------------------------------------\n0:00 Intro\n1:28 What is a metaclass\n3:58 Simplest possible metaclass\n4:59 Load time metaclass\n6:08 Abstract base classes\n8:03 Function overloads\n14:10 Dataclass code generation\n15:01 Giveaway instructions",
        "thumbnails": {
          "default": {
            "url": "https://i.ytimg.com/vi/yWzMiaqnpkI/default.jpg",
            "width": 120,
            "height": 90
          },
          "medium": {
            "url": "https://i.ytimg.com/vi/yWzMiaqnpkI/mqdefault.jpg",
            "width": 320,
            "height": 180
          },
          "high": {
            "url": "https://i.ytimg.com/vi/yWzMiaqnpkI/hqdefault.jpg",
            "width": 480,
            "height": 360
          },
          "standard": {
            "url": "https://i.ytimg.com/vi/yWzMiaqnpkI/sddefault.jpg",
            "width": 640,
            "height": 480
          },
          "maxres": {
            "url": "https://i.ytimg.com/vi/yWzMiaqnpkI/maxresdefault.jpg",
            "width": 1280,
            "height": 720
          }
        },
        "channelTitle": "Donald Thompson",
        "playlistId": "PLIjhfluhNd98zSpKsf69arDUm1Dqbe0bn",
        "position": 8,
        "resourceId": {
          "kind": "youtube#video",
          "videoId": "yWzMiaqnpkI"
        },
        "videoOwnerChannelTitle": "mCoding",
        "videoOwnerChannelId": "UCaiL2GDNpLYH6Wokkk1VNcg"
      },
      "contentDetails": {
        "videoId": "yWzMiaqnpkI",
        "videoPublishedAt": "2021-10-02T14:00:04Z"
      }
    },
    {
      "kind": "youtube#playlistItem",
      "etag": "nZG5cyhhxx-MB1jyNvPw-tcSHSQ",
      "id": "UExJamhmbHVoTmQ5OHpTcEtzZjY5YXJEVW0xRHFiZTBibi4wN0FBRUVFNEVBMTZBQ0Mx",
      "snippet": {
        "publishedAt": "2021-11-28T17:45:43Z",
        "channelId": "UCqsUJL5xIWuidR7sIrPLhAw",
        "title": "Intermediate Python Tutorial: How to Use the __init__.py File",
        "description": "A succinct tutorial on how to use the __init__.py file to import directories as python libraries.\n\nWelcome to my series for Learning Python, where I will be teaching fundamental concepts in the Python programming language.\n\nThese videos will focus on one aspect of Python at a time, but your understanding of the material will be greatly improved through usage. I recommend applying the concepts described here in your own project, or viewing the Developer Diary series where I use these tools on bigger projects.\n\nhttps://youtu.be/jsPatLaWZe4",
        "thumbnails": {
          "default": {
            "url": "https://i.ytimg.com/vi/cONc0NcKE7s/default.jpg",
            "width": 120,
            "height": 90
          },
          "medium": {
            "url": "https://i.ytimg.com/vi/cONc0NcKE7s/mqdefault.jpg",
            "width": 320,
            "height": 180
          },
          "high": {
            "url": "https://i.ytimg.com/vi/cONc0NcKE7s/hqdefault.jpg",
            "width": 480,
            "height": 360
          },
          "standard": {
            "url": "https://i.ytimg.com/vi/cONc0NcKE7s/sddefault.jpg",
            "width": 640,
            "height": 480
          },
          "maxres": {
            "url": "https://i.ytimg.com/vi/cONc0NcKE7s/maxresdefault.jpg",
            "width": 1280,
            "height": 720
          }
        },
        "channelTitle": "Donald Thompson",
        "playlistId": "PLIjhfluhNd98zSpKsf69arDUm1Dqbe0bn",
        "position": 9,
        "resourceId": {
          "kind": "youtube#video",
          "videoId": "cONc0NcKE7s"
        },
        "videoOwnerChannelTitle": "Eric O Meehan",
        "videoOwnerChannelId": "UCrd7D9EwwX4EpUNcnN8C75A"
      },
      "contentDetails": {
        "videoId": "cONc0NcKE7s",
        "videoPublishedAt": "2021-01-13T12:00:26Z"
      }
    },
    {
      "kind": "youtube#playlistItem",
      "etag": "0ePuGy875M7pr_dBbWXpCY2nPC8",
      "id": "UExJamhmbHVoTmQ5OHpTcEtzZjY5YXJEVW0xRHFiZTBibi5CQzUwREI3MzkxQjdBM0E0",
      "snippet": {
        "publishedAt": "2021-11-28T02:15:28Z",
        "channelId": "UCqsUJL5xIWuidR7sIrPLhAw",
        "title": "Domain Driven Design Patterns in Python",
        "description": "Domain-Driven Design (DDD) is an approach to software development that emphasises high-fidelity modelling of the problem domain, and which uses a software implementation of the domain model as a foundation for system design. This approach helps organize and minimize the essential complexity of your software.  DDD has been used with success within the traditional enterprise programming ecosystems of Java and .NET, but has seen only limited adoption in the Python community.\n\nIn this talk we introduce Python programmers to the core tactical patterns of DDD and show how they can be realised in idiomatic Python, freeing the most valuable parts of your system \u2013 the domain model \u2013 from onerous dependencies on particular databases or application frameworks.\n\nIn this talk we share what we've learned from applying DDD in Python to large projects.\n\nPUBLICATION PERMISSIONS:\nOriginal video was published with the Creative Commons Attribution license (reuse allowed). Link: https://www.youtube.com/watch?v=Ru2T4fu3bGQ",
        "thumbnails": {
          "default": {
            "url": "https://i.ytimg.com/vi/v0wBmQq8qcA/default.jpg",
            "width": 120,
            "height": 90
          },
          "medium": {
            "url": "https://i.ytimg.com/vi/v0wBmQq8qcA/mqdefault.jpg",
            "width": 320,
            "height": 180
          },
          "high": {
            "url": "https://i.ytimg.com/vi/v0wBmQq8qcA/hqdefault.jpg",
            "width": 480,
            "height": 360
          },
          "standard": {
            "url": "https://i.ytimg.com/vi/v0wBmQq8qcA/sddefault.jpg",
            "width": 640,
            "height": 480
          },
          "maxres": {
            "url": "https://i.ytimg.com/vi/v0wBmQq8qcA/maxresdefault.jpg",
            "width": 1280,
            "height": 720
          }
        },
        "channelTitle": "Donald Thompson",
        "playlistId": "PLIjhfluhNd98zSpKsf69arDUm1Dqbe0bn",
        "position": 10,
        "resourceId": {
          "kind": "youtube#video",
          "videoId": "v0wBmQq8qcA"
        },
        "videoOwnerChannelTitle": "Coding Tech",
        "videoOwnerChannelId": "UCtxCXg-UvSnTKPOzLH4wJaQ"
      },
      "contentDetails": {
        "videoId": "v0wBmQq8qcA",
        "videoPublishedAt": "2021-11-23T05:53:03Z"
      }
    },
    {
      "kind": "youtube#playlistItem",
      "etag": "sLJ2j_28-Z-IShW9bp-YS3OMdm4",
      "id": "UExJamhmbHVoTmQ5OHpTcEtzZjY5YXJEVW0xRHFiZTBibi40OTQ5QjlEMDgzN0FBNUIw",
      "snippet": {
        "publishedAt": "2021-11-23T10:26:52Z",
        "channelId": "UCqsUJL5xIWuidR7sIrPLhAw",
        "title": "Python classes: __slots__, slots, and object layout",
        "description": "Python __slots__ are useful for saving memory when you have a large number of small objects whose attributes are known ahead of time. In this video we learn about __slots__, what slots actually are and how they work.\n\n\u2015 mCoding with James Murphy (https://mcoding.io)\n\nSource code: https://github.com/mCodingLLC/VideosSampleCode\nSlots docs: https://docs.python.org/3/reference/datamodel.html#slots\nDescriptor docs: https://docs.python.org/3/reference/datamodel.html#descriptors\n\nSUPPORT ME \u2b50\n---------------------------------------------------\nSign up on Patreon to get your donor role and early access to videos!\nhttps://patreon.com/mCoding\n\nFeeling generous but don't have a Patreon? Donate via PayPal! (No sign up needed.)\nhttps://www.paypal.com/donate/?hosted_button_id=VJY5SLZ8BJHEE\n\nWant to donate crypto? Check out the rest of my supported donations on my website!\nhttps://mcoding.io/donate\n\nTop patrons and donors: Jameson, Laura M, Dragos C, Vahnekie, John Martin, Casey G, Pieter G, Krisztian M,  Sigmanificient\n\nBE ACTIVE IN MY COMMUNITY \ud83d\ude04\n---------------------------------------------------\nDiscord: https://discord.gg/Ye9yJtZQuN\nGithub: https://github.com/mCodingLLC/\nReddit: https://www.reddit.com/r/mCoding/\nFacebook: https://www.facebook.com/james.mcoding\n\nCHAPTERS\n---------------------------------------------------\n0:00 Intro\n0:43 Normal class\n1:53 Slots class\n2:44 Why use slots\n4:21 Slots are descriptors\n5:45 What are slots\n8:32 Inheritance\n9:14 No metaclass slots\n9:24 Using a dict slot",
        "thumbnails": {
          "default": {
            "url": "https://i.ytimg.com/vi/Iwf17zsDAnY/default.jpg",
            "width": 120,
            "height": 90
          },
          "medium": {
            "url": "https://i.ytimg.com/vi/Iwf17zsDAnY/mqdefault.jpg",
            "width": 320,
            "height": 180
          },
          "high": {
            "url": "https://i.ytimg.com/vi/Iwf17zsDAnY/hqdefault.jpg",
            "width": 480,
            "height": 360
          },
          "standard": {
            "url": "https://i.ytimg.com/vi/Iwf17zsDAnY/sddefault.jpg",
            "width": 640,
            "height": 480
          },
          "maxres": {
            "url": "https://i.ytimg.com/vi/Iwf17zsDAnY/maxresdefault.jpg",
            "width": 1280,
            "height": 720
          }
        },
        "channelTitle": "Donald Thompson",
        "playlistId": "PLIjhfluhNd98zSpKsf69arDUm1Dqbe0bn",
        "position": 11,
        "resourceId": {
          "kind": "youtube#video",
          "videoId": "Iwf17zsDAnY"
        },
        "videoOwnerChannelTitle": "mCoding",
        "videoOwnerChannelId": "UCaiL2GDNpLYH6Wokkk1VNcg"
      },
      "contentDetails": {
        "videoId": "Iwf17zsDAnY",
        "videoPublishedAt": "2021-10-23T14:02:54Z"
      }
    },
    {
      "kind": "youtube#playlistItem",
      "etag": "X_hc-dYFGO7m1GNaDeNQkVAYtII",
      "id": "UExJamhmbHVoTmQ5OHpTcEtzZjY5YXJEVW0xRHFiZTBibi43ODA2MDVCQzY5QzZDMjUw",
      "snippet": {
        "publishedAt": "2021-11-22T09:00:55Z",
        "channelId": "UCqsUJL5xIWuidR7sIrPLhAw",
        "title": "Most Advance Python Course for Professionals [2021]",
        "description": "This tutorial continue the advanced course of python tutorial previously uploaded, link python 3.9 given below in description. Currently, the most popular programming languages world-wide. \n\nLearn C++ tutorial: https://youtu.be/mUQZ1qmKlLY\nJava: https://youtu.be/WqQsuIW2CFE \nPYTHON 3.9 : https://www.youtube.com/watch?v=cBQ4c1IQJSE\nTime Stamp \n00:00:00 Introduction to Classes\n00:16:51 Class Inheritance \n00:32:04 Multiple Inheritance\n00:42:16 Shop Application\n01:09:07 Underscore in Python 3.9\n01:24:39 Decorators\n01:49:08 Iterators\n01:57:09 Exceptions handling\n02:20:25 Serializing & De-serializing Objects\n02:33:55 Map Function\n02:46:33 Filter Function\n02:57:21 Logging Basics\n03:13:03 Simple App\n03:31:21 Timers & Threads\n03:46:15 Threads Basics\n03:58:35 Thread Pools\n04:11:40 Thread Locking\n04:28:30 Daemon Thread\n04:34:58 Queues & Futures\n04:51:12 Introduction to Multiprocessing\n05:03:23 Multiprocess Start & Stop\n05:15:21 Multiprocess pool\n05:31:55 Async Code\n05:48:21 Producer & Consumer\n06:02:22 Communication with Process\n06:29:58 Basic TCP Client\n06:46:28 TCP Server\n06:58:35 Determine Port Availability\n07:13:21 UDP Sockets\n07:27:43 Blocking vs Non-Blocking Sockets\n07:50:54 Example APP - TCP app server\n08:08:18 Date & Time in Python 3.9\n\ncredit: voidralms \n\n#Python #PythonTutorial #PythonProgramming",
        "thumbnails": {
          "default": {
            "url": "https://i.ytimg.com/vi/tdn9_MZ0lN4/default.jpg",
            "width": 120,
            "height": 90
          },
          "medium": {
            "url": "https://i.ytimg.com/vi/tdn9_MZ0lN4/mqdefault.jpg",
            "width": 320,
            "height": 180
          },
          "high": {
            "url": "https://i.ytimg.com/vi/tdn9_MZ0lN4/hqdefault.jpg",
            "width": 480,
            "height": 360
          },
          "standard": {
            "url": "https://i.ytimg.com/vi/tdn9_MZ0lN4/sddefault.jpg",
            "width": 640,
            "height": 480
          },
          "maxres": {
            "url": "https://i.ytimg.com/vi/tdn9_MZ0lN4/maxresdefault.jpg",
            "width": 1280,
            "height": 720
          }
        },
        "channelTitle": "Donald Thompson",
        "playlistId": "PLIjhfluhNd98zSpKsf69arDUm1Dqbe0bn",
        "position": 12,
        "resourceId": {
          "kind": "youtube#video",
          "videoId": "tdn9_MZ0lN4"
        },
        "videoOwnerChannelTitle": "Extern Code",
        "videoOwnerChannelId": "UCfx2dro_w4_MyA19Nm5badg"
      },
      "contentDetails": {
        "videoId": "tdn9_MZ0lN4",
        "videoPublishedAt": "2021-03-24T15:00:15Z"
      }
    },
    {
      "kind": "youtube#playlistItem",
      "etag": "CbcGXnCdkbLXBORG86YGu0Y5HgU",
      "id": "UExJamhmbHVoTmQ5OHpTcEtzZjY5YXJEVW0xRHFiZTBibi5GNzk2RTlDQTNCQzJCQzJG",
      "snippet": {
        "publishedAt": "2021-11-22T05:20:05Z",
        "channelId": "UCqsUJL5xIWuidR7sIrPLhAw",
        "title": "Python Automation Tutorial \u2013 How to Automate Tasks for Beginners [Full Course]",
        "description": "Learn how to use Python automation to perform common tasks. In this full course you will learn how to build the following automation projects:\n- Hacker News Headlines Emailer \n- TED Talk Downloader\n- Table Extractor from PDF\n- Automated Bulk Resume Parser\n- Image Type Converter\n- Building an Automated News Summarizer \n\n\ud83d\udcbb Code: https://github.com/amrrs/build_tools_to_automate_python\n\n\u270f\ufe0f Course from 1littlecoder. Check out his channel: https://www.youtube.com/c/1littlecoder\n\n\u2b50\ufe0f Course Contents \u2b50\ufe0f\n\u2328\ufe0f (0:00:00) Introduction\n\u2328\ufe0f (0:00:29) Hacker News Headlines Emailer - Tutorial 1\n\u2328\ufe0f (0:01:13) Introduction to Web Scraping\n\u2328\ufe0f (0:03:08) Setting up the Environment\n\u2328\ufe0f (0:06:30) Project Script\n\u2328\ufe0f (0:11:00) Website Structure of Hacker News FrontPage\n\u2328\ufe0f (0:21:00) Sending Email from Python\n\u2328\ufe0f (0:35:15) Building the Headlines Email Module\n\u2328\ufe0f (0:39:07) TED Talk Downloader - Tutorial 2\n\u2328\ufe0f (0:39:49) Installation and Introduction to requests package\n\u2328\ufe0f (0:41:25) Installation and Introduction to BeautifulSoup\n\u2328\ufe0f (0:43:25) Building the basic script to download the video\n\u2328\ufe0f (0:49:37) Generalising the Script to get Arguments\n\u2328\ufe0f (0:53:49) Table Extractor from PDF - Tutorial 3  \n\u2328\ufe0f (0:54:44) Basics of PDF Format\n\u2328\ufe0f (0:57:05) Installing required Python Modules\n\u2328\ufe0f (1:02:16) Extracting Table from PDF\n\u2328\ufe0f (1:06:51) Quick Introduction to Jupyter Notebook\n\u2328\ufe0f (1:08:29) PDF Extraction on Jupyter Notebook\n\u2328\ufe0f (1:15:29) Pandas and Write Table as CSV Excel\n\u2328\ufe0f (1:21:02) Automated Bulk Resume Parser - Tutorial 4\n\u2328\ufe0f (1:22:15) Different Formats of Resumes and marking relevant Information\n\u2328\ufe0f (1:25:50) Project Architecture and Brief Overview of the required packages and installations\n\u2328\ufe0f (1:34:48) Basics of Regular Expression in Python\n\u2328\ufe0f (1:41:38) Basic Overview of Spacy Functions\n\u2328\ufe0f (1:49:55) Extracting Relevant Information from the Resumes\n\u2328\ufe0f (2:16:46) Completing the script to make it a one-click CLI\n\u2328\ufe0f (2:28:09) Image Type Converter - Tutorial 5\n\u2328\ufe0f (2:29:09) Different type of Image Formats\n\u2328\ufe0f (2:31:33) What is an Image type convertor\n\u2328\ufe0f (2:33:04) Introduction to Image Manipulation in Python\n\u2328\ufe0f (2:34:51) Building an Image type converting Script\n\u2328\ufe0f (2:40:03) Converting the script into a CLI Tool\n\u2328\ufe0f (2:44:27) Building an Automated News Summarizer - Tutorial 6\n\u2328\ufe0f (2:46:27) What is Text Summarization\n\u2328\ufe0f (2:47:46) Installing Gensim and other Python Modules\n\u2328\ufe0f (2:52:43) Extracting the required News Source\n\u2328\ufe0f (2:59:38) Building the News Summarizer\n\u2328\ufe0f (3:07:14) Scheduling the News Summarizer\n\u2328\ufe0f (3:10:25) Thank you\n\n\ud83c\udf89 Thanks to our Champion and Sponsor supporters:\n\ud83d\udc7e Wong Voon jinq\n\ud83d\udc7e hexploitation\n\ud83d\udc7e Katia Moran\n\ud83d\udc7e BlckPhantom\n\ud83d\udc7e Nick Raker\n\ud83d\udc7e Otis Morgan\n\ud83d\udc7e DeezMaster\n\ud83d\udc7e AppWrite\n\n--\n\nLearn to code for free and get a developer job: https://www.freecodecamp.org\n\nRead hundreds of articles on programming: https://freecodecamp.org/news\n\nAnd subscribe for new videos on technology every day: https://youtube.com/subscription_center?add_user=freecodecamp",
        "thumbnails": {
          "default": {
            "url": "https://i.ytimg.com/vi/s8XjEuplx_U/default.jpg",
            "width": 120,
            "height": 90
          },
          "medium": {
            "url": "https://i.ytimg.com/vi/s8XjEuplx_U/mqdefault.jpg",
            "width": 320,
            "height": 180
          },
          "high": {
            "url": "https://i.ytimg.com/vi/s8XjEuplx_U/hqdefault.jpg",
            "width": 480,
            "height": 360
          },
          "standard": {
            "url": "https://i.ytimg.com/vi/s8XjEuplx_U/sddefault.jpg",
            "width": 640,
            "height": 480
          },
          "maxres": {
            "url": "https://i.ytimg.com/vi/s8XjEuplx_U/maxresdefault.jpg",
            "width": 1280,
            "height": 720
          }
        },
        "channelTitle": "Donald Thompson",
        "playlistId": "PLIjhfluhNd98zSpKsf69arDUm1Dqbe0bn",
        "position": 13,
        "resourceId": {
          "kind": "youtube#video",
          "videoId": "s8XjEuplx_U"
        },
        "videoOwnerChannelTitle": "freeCodeCamp.org",
        "videoOwnerChannelId": "UC8butISFwT-Wl7EV0hUK0BQ"
      },
      "contentDetails": {
        "videoId": "s8XjEuplx_U",
        "videoPublishedAt": "2021-09-21T14:02:17Z"
      }
    },
    {
      "kind": "youtube#playlistItem",
      "etag": "GD1TMMR8AuaSKadFSKoWmW5V48Q",
      "id": "UExJamhmbHVoTmQ5OHpTcEtzZjY5YXJEVW0xRHFiZTBibi44QjNCNkRENjNFQTBEMUND",
      "snippet": {
        "publishedAt": "2021-11-20T06:53:10Z",
        "channelId": "UCqsUJL5xIWuidR7sIrPLhAw",
        "title": "Advanced Computer Vision with Python - Full Course",
        "description": "Learn advanced computer vision using Python in this full course. You will learn state of the art computer vision techniques by building five projects with libraries such as OpenCV and Mediapipe. If you are a beginner, don't be afraid of the term advance. Even though the concepts are advanced, they are not difficult to follow.\n\n\u270f\ufe0f This course was developed by Murtaza Hassan. Check out his Murtaza's Workshop YouTube Channel: https://www.youtube.com/channel/UCYUjYU5FveRAscQ8V21w81A\n\n\ud83d\udcbb Get the code here: https://www.computervision.zone/courses/advance-computer-vision-with-python/\n\n\ud83d\udd17 Learn to build computer vision mobile apps from Murtaza: https://www.computervision.zone/courses/computer-vision-mobile-apps/\n\n\u2b50\ufe0f Course Contents \u2b50\ufe0f\n\u2328\ufe0f (0:00:00) Intro \n\u2328\ufe0f (0:01:18) Chapter 1 - Hand Tracking - Basics \n\u2328\ufe0f (0:26:57) Chapter 1 - Hand Tracking - Module\n\u2328\ufe0f (0:49:20) Chapter 2 - Pose Estimation - Basics\n\u2328\ufe0f (1:08:25) Chapter 2 - Pose Estimation - Module\n\u2328\ufe0f (1:28:25) Chapter 3 - Face Detection - Basics\n\u2328\ufe0f (1:52:38) Chapter 3 - Face Detection - Module\n\u2328\ufe0f (2:12:55) Chapter 4 - Face Mesh - Basics\n\u2328\ufe0f (2:33:09) Chapter 4 - Face Mesh - Module\n\u2328\ufe0f (2:52:10) Project 1 - Gesture Volume Control\n\u2328\ufe0f (3:27:45) Project 2 - Finger Counter\n\u2328\ufe0f (4:05:43) Project 3 - AI Personal Trainer\n\u2328\ufe0f (4:52:55) Project 4 - AI Virtual Painter\n\u2328\ufe0f (6:01:26) Project 5 - AI Virtual Mouse\n\n--\n\nLearn to code for free and get a developer job: https://www.freecodecamp.org\n\nRead hundreds of articles on programming: https://freecodecamp.org/news\n\nAnd subscribe for new videos on technology every day: https://youtube.com/subscription_center?add_user=freecodecamp",
        "thumbnails": {
          "default": {
            "url": "https://i.ytimg.com/vi/01sAkU_NvOY/default.jpg",
            "width": 120,
            "height": 90
          },
          "medium": {
            "url": "https://i.ytimg.com/vi/01sAkU_NvOY/mqdefault.jpg",
            "width": 320,
            "height": 180
          },
          "high": {
            "url": "https://i.ytimg.com/vi/01sAkU_NvOY/hqdefault.jpg",
            "width": 480,
            "height": 360
          },
          "standard": {
            "url": "https://i.ytimg.com/vi/01sAkU_NvOY/sddefault.jpg",
            "width": 640,
            "height": 480
          },
          "maxres": {
            "url": "https://i.ytimg.com/vi/01sAkU_NvOY/maxresdefault.jpg",
            "width": 1280,
            "height": 720
          }
        },
        "channelTitle": "Donald Thompson",
        "playlistId": "PLIjhfluhNd98zSpKsf69arDUm1Dqbe0bn",
        "position": 14,
        "resourceId": {
          "kind": "youtube#video",
          "videoId": "01sAkU_NvOY"
        },
        "videoOwnerChannelTitle": "freeCodeCamp.org",
        "videoOwnerChannelId": "UC8butISFwT-Wl7EV0hUK0BQ"
      },
      "contentDetails": {
        "videoId": "01sAkU_NvOY",
        "videoPublishedAt": "2021-05-27T13:50:46Z"
      }
    },
    {
      "kind": "youtube#playlistItem",
      "etag": "4VVHsOKvmJn_jCr0XVFDd4MtaIU",
      "id": "UExJamhmbHVoTmQ5OHpTcEtzZjY5YXJEVW0xRHFiZTBibi5EMUJFNzRCNDRFQjE5RjM4",
      "snippet": {
        "publishedAt": "2021-11-19T06:55:02Z",
        "channelId": "UCqsUJL5xIWuidR7sIrPLhAw",
        "title": "Python API Development - Comprehensive Course for Beginners",
        "description": "Learn Python API development in one of the most comprehensive courses ever on the topic. You will build a full-fledged API in Python using FastAPI. You will learn the fundamentals of API design including routes, serialization/deserialization, schema validation, and models. You will also learn about SQL, testing with pytest, and how to build out a CI/CD pipeline using GitHub actions.\n\n\ud83d\udcbb Code: https://github.com/Sanjeev-Thiyagarajan/fastapi-course\n\n\u270f\ufe0f Course from Sanjeev Thiyagarajan. Check out his channel: https://www.youtube.com/channel/UC2sYgV-NV6S5_-pqLGChoNQ\n\n\u2b50\ufe0f Course Contents\n00:00 Intro\n06:33 Project Overview\n11:22 Mac Python Installation\n13:15 Mac VS Code install and setup\n16:37 Windows Python Installation\n18:30 Windows VS Code install and setup\n22:11 Python virtual Env Basics\n24:35 Virtual Env on windows\n28:56 Virtual Env on Mac\n34:17 Install dependencies w/ pip\n36:21 Starting FastAPI\n39:23 Path Operations\n53:22 Intro toman\n57:34 HTTP Requests\n1:07:29 Schema Validation with Pydantic\n1:22:45 CRUD Operations\n1:29:44 Storing in Array\n1:34:06 Creating\n1:38:15 Postman Collections & saving requests\n1:39:47 Retrieve One\n1:48:10 Path order Matters\n1:52:46 Changing response Status Codes\n2:01:49 Deleting\n2:10:31 Updating\n2:18:02 Automatic Documentation\n2:21:34 Python packages\n2:24:11 Database Intro\n2:28:54 Postgres Windows Install\n2:31:28 Postgres Mac Install\n2:34:26 Database Schema & Tables\n2:44:35 Managing Postgres with PgAdmin GUI\n3:12:10 Your first SQL Query\n3:19:43 Filter results with \"where\"\n3:22:55 SQL Operators\n3:26:38 IN\n3:28:07 Pattern matching with LIKE\n3:31:59 Ordering Results\n3:36:27 LIMIT & OFFSET\n3:39:21 Modifying Data\n3:53:48 Setup App Database\n3:58:21 Connecting to database w/ Python\n4:08:00 Database CRUD\n4:31:18 ORM intro\n4:35:33 SQLALCHEMY setup\n4:55:25 Adding CreatedAt Column\n5:00:59 Get All\n5:07:55 Create\n5:15:50 Get by ID\n5:19:50 Delete\n5:22:31 Update\n5:28:21 Pydantic vs ORM Models\n5:32:21 Pydantic Models Deep Dive\n5:38:57 Response Model\n5:50:08 Creating Users Table\n5:54:50 User Registration Path Operation\n6:03:27 Hashing Passwords\n6:08:49 Refractor Hashing Logic\n6:10:32 Get User by ID\n6:17:13 FastAPI Routers\n6:27:34 Router Prefix\n6:30:31 Router Tags\n6:32:49 JWT Token Basics\n6:47:03 Login Process  \n7:00:44 Creating Token\n7:09:58 OAuth2 PasswordRequestForm\n7:13:23 Verify user is Logged In\n7:25:21 Fixing Bugs\n7:27:59 Protecting Routes\n7:36:17 Test Expired Token\n7:38:13 Fetching User in Protected Routes\n7:42:44 Postman advanced Features\n7:50:33 SQL Relationship Basics\n7:54:59 Postgres Foreign Keys\n8:07:20 SQLAlchemy Foreign Keys\n8:13:40 Update Schema to include User\n8:17:59 Assigning Owner id when creating new\n8:21:01 Delete and Update only your own\n8:27:48 Only Retrieving Logged in User's\n8:33:37 Sqlalchemy Relationships\n8:38:32 Query Parameters\n8:50:46 Cleanup our main.py file\n8:53:53 Env Variables\n9:21:20 Vote/Like Theory\n9:26:36 Votes Table\n9:31:33 Votes Sqlalchemy\n9:34:11 Votes Route\n9:52:31 SQL Joins\n10:15:26 Joins in SqlAlchemy\n10:28:21 Get One with Joins\n10:30:18 What is a database migration tool\n10:33:45 Alembic Setup\n11:13:50 Disable SqlAlchemy create Engine\n11:14:28 What is CORS?\n11:23:38 Git PreReqs\n11:27:40 Git Install\n11:29:23 Github\n11:34:39 Heroku intro\n11:35:40 Create Heroku App\n11:40:21 Heroku procfile\n11:44:59 Adding a Postgres database\n11:48:42 Env Variables in Heroku\n11:58:59 Alembic migrations on Heroku Postgres instance\n12:02:52 Pushing changed to production\n12:05:04 Create an Ubuntu VM\n12:08:04 Update packages\n12:10:47 Install Python\n12:12:21 Install Postgres & setup password\n12:17:28 Postgres Config\n12:24:50 Create new user and setup python evironment\n12:34:06 Env Variables\n12:42:24 Alembic migrations on production database\n12:45:57 Gunicorn\n12:54:12 Creating a Systemd service\n13:04:45 NGINX\n13:10:45 Setting up Domain name\n13:15:19 SSL/HTTPS\n13:19:31 NGINX enable\n13:20:06 Firewall\n13:23:47 Pushing code changes to Production\n13:26:09 Dockerfile\n13:38:39 Docker Compose\n13:48:34 Postgres Container\n13:56:22 Bind Mounts\n14:03:39 Dockerhub\n14:08:08 Production vs Development\n14:14:51 Testing Intro\n14:17:19 Writing your first test\n14:30:22 The -s & -v flags\n14:31:44 Testing more functions\n14:35:29 Parametrize\n14:40:21 Testing Classes\n14:48:37 Fixtures\n14:55:40 Combining Fixtures + Parametrize\n14:59:13 Testing Exceptions\n15:06:07 FastAPI TestClient\n15:14:26 Pytest flags\n15:17:31 Test create user\n15:25:23 Setup testing database\n15:36:47 Create & destroy database after each test\n15:44:18 More Fixtures to handle database interaction\n15:50:35 Trailing slashes in path\n15:53:12 Fixture scope\n16:07:50 Test user fixture\n16:14:40 Test/validate token\n16:18:59 Conftest.py\n16:22:09 Testing\n17:34:15 CI/CD intro\n17:43:29 Github Actions\n17:49:32 Creating Jobs\n17:57:38 setup python/dependencies/pytest\n18:06:14 Env variables\n18:11:19 Github Secrets\n18:18:14 Testing database\n18:23:42 Building Docker images\n18:34:33 Deploy to heroku\n18:49:10 Failing tests in pipeline\n18:52:18 Deploy to Ubuntu",
        "thumbnails": {
          "default": {
            "url": "https://i.ytimg.com/vi/0sOvCWFmrtA/default.jpg",
            "width": 120,
            "height": 90
          },
          "medium": {
            "url": "https://i.ytimg.com/vi/0sOvCWFmrtA/mqdefault.jpg",
            "width": 320,
            "height": 180
          },
          "high": {
            "url": "https://i.ytimg.com/vi/0sOvCWFmrtA/hqdefault.jpg",
            "width": 480,
            "height": 360
          },
          "standard": {
            "url": "https://i.ytimg.com/vi/0sOvCWFmrtA/sddefault.jpg",
            "width": 640,
            "height": 480
          },
          "maxres": {
            "url": "https://i.ytimg.com/vi/0sOvCWFmrtA/maxresdefault.jpg",
            "width": 1280,
            "height": 720
          }
        },
        "channelTitle": "Donald Thompson",
        "playlistId": "PLIjhfluhNd98zSpKsf69arDUm1Dqbe0bn",
        "position": 15,
        "resourceId": {
          "kind": "youtube#video",
          "videoId": "0sOvCWFmrtA"
        },
        "videoOwnerChannelTitle": "freeCodeCamp.org",
        "videoOwnerChannelId": "UC8butISFwT-Wl7EV0hUK0BQ"
      },
      "contentDetails": {
        "videoId": "0sOvCWFmrtA",
        "videoPublishedAt": "2021-11-01T13:11:23Z"
      }
    },
    {
      "kind": "youtube#playlistItem",
      "etag": "oYtZndEZIU6Uu15eBlPM9Nwi0U8",
      "id": "UExJamhmbHVoTmQ5OHpTcEtzZjY5YXJEVW0xRHFiZTBibi5CNEYyNTVBNDdGMDI1MDNC",
      "snippet": {
        "publishedAt": "2021-11-18T11:00:42Z",
        "channelId": "UCqsUJL5xIWuidR7sIrPLhAw",
        "title": "Creating a platformer in Pygame with a camera, collisions, animation states and particle effects",
        "description": "A tutorial on how to create a 2D Mario-style platformer that covers all the fundamentals of this type of game: Level scrolling, collisions, player animations, dust particles and quite a bit more. \n\nTimestamps:\n0:00:00 - Intro & overview \n0:02:00 - Setting up the level\n0:25:29 - Creating the player \n0:34:55 - Creating the player 'camera'\n0:42:12 - Making the player move and collide \n0:57:44 - Animating the player\n1:17:48 - Animation state management \n1:46:34 - Dust particle animations\n\nproject files: \nhttps://github.com/clear-code-projects/2D-Mario-style-platformer",
        "thumbnails": {
          "default": {
            "url": "https://i.ytimg.com/vi/YWN8GcmJ-jA/default.jpg",
            "width": 120,
            "height": 90
          },
          "medium": {
            "url": "https://i.ytimg.com/vi/YWN8GcmJ-jA/mqdefault.jpg",
            "width": 320,
            "height": 180
          },
          "high": {
            "url": "https://i.ytimg.com/vi/YWN8GcmJ-jA/hqdefault.jpg",
            "width": 480,
            "height": 360
          }
        },
        "channelTitle": "Donald Thompson",
        "playlistId": "PLIjhfluhNd98zSpKsf69arDUm1Dqbe0bn",
        "position": 16,
        "resourceId": {
          "kind": "youtube#video",
          "videoId": "YWN8GcmJ-jA"
        },
        "videoOwnerChannelTitle": "Clear Code",
        "videoOwnerChannelId": "UCznj32AM2r98hZfTxrRo9bQ"
      },
      "contentDetails": {
        "videoId": "YWN8GcmJ-jA",
        "videoPublishedAt": "2021-08-17T19:10:13Z"
      }
    },
    {
      "kind": "youtube#playlistItem",
      "etag": "oDJxjn8QiQGL8tGBv1WY0DBx4jg",
      "id": "UExJamhmbHVoTmQ5OHpTcEtzZjY5YXJEVW0xRHFiZTBibi41ODIyMTgwQzA4NjJCQkZC",
      "snippet": {
        "publishedAt": "2021-11-18T10:57:45Z",
        "channelId": "UCqsUJL5xIWuidR7sIrPLhAw",
        "title": "25 nooby Python habits you need to ditch",
        "description": "These nooby Python habits give away your inexperience in Python. Improve your code and your prestige just a bit by ditching those habits and doing things the Pythonic way.\n\nCONTEST CLOSED! The winners are: Lluc Cardoner, David Saint, Gaurav Verma 1412, and Alpe!\n\nOFFICIAL CONTEST RULES:\n1. All entries must comply with the YouTube community guidelines ( http://www.youtube.com/t/community_guidelines) and YouTube Terms of Service (http://www.youtube.com/static?gl=US&template=terms). Entries that violate YouTube guidelines are automatically disqualified.\n2. YouTube is not a sponsor of the contest and viewers are required to release YouTube from any liability related to the contest.\n3. Privacy notice: no personal data will be collected for this contest.\n4. In order to enter, you must (a) be one of my subscribers, AND (b) make a top-level comment to the video including #pycharm somewhere in the comment.\n5. The contest is free, there is no fee required to enter.\n6. Winners will be chosen randomly 1 week after the date the video went live from all users who have entered and not been disqualified.\n7. Each winner will be notified via a comment reply from me that details what prize was won (e.g. \"Congratulations! You have won XYZ. Please email me.\"). I will ask the winner to contact me by email, and I will reply through email with a random token which must be posted as another reply to the winning comment from the winning account in order to verify account ownership and prevent fraud.\n8. Each winner will have 72 hours to respond AND prove account ownership or their prize is automatically forfeited and another winner will be chosen.\n9. A winner can only win 1 prize per contest.\n10. The prize pool for this contest is: 4 licenses for PyCharm Professional (\"Free 1-Year Personal Subscription\"), which is a product made by JetBrains. A prize consists of 1 license, which will be delivered in the form of a redeemable code that can be redeemed at https://www.jetbrains.com/store/redeem/ before May 01, 2022.\n11. You may not enter the contest if doing so would be a violation of any relevant federal, state, and local laws, rules, and regulations, including U.S. sanctions.\n\n\u2015 mCoding with James Murphy (https://mcoding.io)\n\nSource code: https://github.com/mCodingLLC/VideosSampleCode\n\nSUPPORT ME \u2b50\n---------------------------------------------------\nSign up on Patreon to get your donor role and early access to videos!\nhttps://patreon.com/mCoding\n\nFeeling generous but don't have a Patreon? Donate via PayPal! (No sign up needed.)\nhttps://www.paypal.com/donate/?hosted_button_id=VJY5SLZ8BJHEE\n\nWant to donate crypto? Check out the rest of my supported donations on my website!\nhttps://mcoding.io/donate\n\nTop patrons and donors: Jameson, Laura M, Dragos C, Vahnekie, John Martin, Casey G, Pieter G, Krisztian M,  Mutual Information, Sigmanificient\n\nBE ACTIVE IN MY COMMUNITY \ud83d\ude04\n---------------------------------------------------\nDiscord: https://discord.gg/Ye9yJtZQuN\nGithub: https://github.com/mCodingLLC/\nReddit: https://www.reddit.com/r/mCoding/\nFacebook: https://www.facebook.com/james.mcoding",
        "thumbnails": {
          "default": {
            "url": "https://i.ytimg.com/vi/qUeud6DvOWI/default.jpg",
            "width": 120,
            "height": 90
          },
          "medium": {
            "url": "https://i.ytimg.com/vi/qUeud6DvOWI/mqdefault.jpg",
            "width": 320,
            "height": 180
          },
          "high": {
            "url": "https://i.ytimg.com/vi/qUeud6DvOWI/hqdefault.jpg",
            "width": 480,
            "height": 360
          },
          "standard": {
            "url": "https://i.ytimg.com/vi/qUeud6DvOWI/sddefault.jpg",
            "width": 640,
            "height": 480
          },
          "maxres": {
            "url": "https://i.ytimg.com/vi/qUeud6DvOWI/maxresdefault.jpg",
            "width": 1280,
            "height": 720
          }
        },
        "channelTitle": "Donald Thompson",
        "playlistId": "PLIjhfluhNd98zSpKsf69arDUm1Dqbe0bn",
        "position": 17,
        "resourceId": {
          "kind": "youtube#video",
          "videoId": "qUeud6DvOWI"
        },
        "videoOwnerChannelTitle": "mCoding",
        "videoOwnerChannelId": "UCaiL2GDNpLYH6Wokkk1VNcg"
      },
      "contentDetails": {
        "videoId": "qUeud6DvOWI",
        "videoPublishedAt": "2021-11-15T14:32:43Z"
      }
    },
    {
      "kind": "youtube#playlistItem",
      "etag": "Mdrmf9a_0sCGMsFV-WCK2dFj6Ug",
      "id": "UExJamhmbHVoTmQ5OHpTcEtzZjY5YXJEVW0xRHFiZTBibi5FRjdGNDMzN0I2RTI3MDlG",
      "snippet": {
        "publishedAt": "2021-11-16T04:41:59Z",
        "channelId": "UCqsUJL5xIWuidR7sIrPLhAw",
        "title": "Python's \"is\" and \"==\" are more complex than you think...",
        "description": "In this video we take a look at the is and equals operators. Python is more complicated than you might think.\n\n\u25fe\u25fe\u25fe\u25fe\u25fe\u25fe\u25fe\u25fe\u25fe\u25fe\u25fe\u25fe\u25fe\u25fe\u25fe\u25fe\u25fe\n\ud83d\udcda Programming Books & Merch \ud83d\udcda\n\ud83d\udc0d The Python Bible Book: https://www.neuralnine.com/books/\n\ud83d\udcbb The Algorithm Bible Book: https://www.neuralnine.com/books/\n\ud83d\udc55 Programming Merch: https://www.neuralnine.com/shop\n\n\ud83c\udf10 Social Media & Contact \ud83c\udf10 \n\ud83d\udcf1 Website: https://www.neuralnine.com/\n\ud83d\udcf7 Instagram: https://www.instagram.com/neuralnine\n\ud83d\udc26 Twitter: https://twitter.com/neuralnine\n\ud83e\udd35 LinkedIn: https://www.linkedin.com/company/neuralnine/\n\ud83d\udcc1 GitHub: https://github.com/NeuralNine \n\ud83c\udf99 Discord: https://discord.gg/JU4xr8U3dm\n\n\ud83c\udfb5 Outro Music From: https://www.bensound.com/",
        "thumbnails": {
          "default": {
            "url": "https://i.ytimg.com/vi/vvwjKKWo2HQ/default.jpg",
            "width": 120,
            "height": 90
          },
          "medium": {
            "url": "https://i.ytimg.com/vi/vvwjKKWo2HQ/mqdefault.jpg",
            "width": 320,
            "height": 180
          },
          "high": {
            "url": "https://i.ytimg.com/vi/vvwjKKWo2HQ/hqdefault.jpg",
            "width": 480,
            "height": 360
          }
        },
        "channelTitle": "Donald Thompson",
        "playlistId": "PLIjhfluhNd98zSpKsf69arDUm1Dqbe0bn",
        "position": 18,
        "resourceId": {
          "kind": "youtube#video",
          "videoId": "vvwjKKWo2HQ"
        },
        "videoOwnerChannelTitle": "NeuralNine",
        "videoOwnerChannelId": "UC8wZnXYK_CGKlBcZp-GxYPA"
      },
      "contentDetails": {
        "videoId": "vvwjKKWo2HQ",
        "videoPublishedAt": "2021-11-04T13:42:00Z"
      }
    },
    {
      "kind": "youtube#playlistItem",
      "etag": "JWr0-GuqM4zsxAgTkIXO5278O_o",
      "id": "UExJamhmbHVoTmQ5OHpTcEtzZjY5YXJEVW0xRHFiZTBibi41RDUzRjJFQ0Y0MUI3NzU1",
      "snippet": {
        "publishedAt": "2021-11-14T14:53:21Z",
        "channelId": "UCqsUJL5xIWuidR7sIrPLhAw",
        "title": "Easy pathfinding in python [almost without math]",
        "description": "A tutorial on creating pathfinding in python & pygame. We will be using the pathfinding module to avoid doing complicated math and instead focus on implementing it in an actual project. \n\nIf you want to support me: https://www.patreon.com/clearcode \n(You also get lots of perks)\n\nSocial stuff:\nTwitter - https://twitter.com/clear_coder\nDiscord - https://discord.com/invite/a5C6pYw2w5\n\nTimestamps: \n0:00:00 - Intro + pathfinding theory\n0:01:51 - Simple pathfinding project\n0:12:14 - Creating the Roomba project\n\nProject files: \nclear-code-projects/Python-Pathfinder: Simple pathfinding in python & pygame tutorial [https://youtu.be/8SigT_jhz4I] (github.com)",
        "thumbnails": {
          "default": {
            "url": "https://i.ytimg.com/vi/8SigT_jhz4I/default.jpg",
            "width": 120,
            "height": 90
          },
          "medium": {
            "url": "https://i.ytimg.com/vi/8SigT_jhz4I/mqdefault.jpg",
            "width": 320,
            "height": 180
          },
          "high": {
            "url": "https://i.ytimg.com/vi/8SigT_jhz4I/hqdefault.jpg",
            "width": 480,
            "height": 360
          },
          "standard": {
            "url": "https://i.ytimg.com/vi/8SigT_jhz4I/sddefault.jpg",
            "width": 640,
            "height": 480
          },
          "maxres": {
            "url": "https://i.ytimg.com/vi/8SigT_jhz4I/maxresdefault.jpg",
            "width": 1280,
            "height": 720
          }
        },
        "channelTitle": "Donald Thompson",
        "playlistId": "PLIjhfluhNd98zSpKsf69arDUm1Dqbe0bn",
        "position": 19,
        "resourceId": {
          "kind": "youtube#video",
          "videoId": "8SigT_jhz4I"
        },
        "videoOwnerChannelTitle": "Clear Code",
        "videoOwnerChannelId": "UCznj32AM2r98hZfTxrRo9bQ"
      },
      "contentDetails": {
        "videoId": "8SigT_jhz4I",
        "videoPublishedAt": "2021-11-13T10:00:04Z"
      }
    },
    {
      "kind": "youtube#playlistItem",
      "etag": "fDp2EY0ZMcxOF2gf5bgHx4K46jk",
      "id": "UExJamhmbHVoTmQ5OHpTcEtzZjY5YXJEVW0xRHFiZTBibi5ERENFNTk4Q0Q2MTZDMTA5",
      "snippet": {
        "publishedAt": "2021-11-10T13:16:12Z",
        "channelId": "UCqsUJL5xIWuidR7sIrPLhAw",
        "title": "Creating Minecraft in Python [with the Ursina Engine]",
        "description": "A basic tutorial on how to create Minecraft in Python by using the Ursina Game Engine. This also includes a general introduction to the engine itself. \n\nTimestamps:\n0:00 - Intro\n1:24 - The basics of Ursina\n15:49 - Creating Minecraft style blocks\n35:25 - Creating a sky, a hand and adding sounds\n\nProject files are available here:\nhttps://github.com/clear-code-projects/Minecraft-in-Python\n\nArtwork from Kenney:\nhttps://opengameart.org/content/simplified-platformer-pack",
        "thumbnails": {
          "default": {
            "url": "https://i.ytimg.com/vi/DHSRaVeQxIk/default.jpg",
            "width": 120,
            "height": 90
          },
          "medium": {
            "url": "https://i.ytimg.com/vi/DHSRaVeQxIk/mqdefault.jpg",
            "width": 320,
            "height": 180
          },
          "high": {
            "url": "https://i.ytimg.com/vi/DHSRaVeQxIk/hqdefault.jpg",
            "width": 480,
            "height": 360
          },
          "standard": {
            "url": "https://i.ytimg.com/vi/DHSRaVeQxIk/sddefault.jpg",
            "width": 640,
            "height": 480
          },
          "maxres": {
            "url": "https://i.ytimg.com/vi/DHSRaVeQxIk/maxresdefault.jpg",
            "width": 1280,
            "height": 720
          }
        },
        "channelTitle": "Donald Thompson",
        "playlistId": "PLIjhfluhNd98zSpKsf69arDUm1Dqbe0bn",
        "position": 20,
        "resourceId": {
          "kind": "youtube#video",
          "videoId": "DHSRaVeQxIk"
        },
        "videoOwnerChannelTitle": "Clear Code",
        "videoOwnerChannelId": "UCznj32AM2r98hZfTxrRo9bQ"
      },
      "contentDetails": {
        "videoId": "DHSRaVeQxIk",
        "videoPublishedAt": "2020-12-02T11:00:03Z"
      }
    },
    {
      "kind": "youtube#playlistItem",
      "etag": "qtgKPB7nNmY0KQTDCoEY4b47atY",
      "id": "UExJamhmbHVoTmQ5OHpTcEtzZjY5YXJEVW0xRHFiZTBibi4yM0EyQ0U1M0I2RkIwNTQ0",
      "snippet": {
        "publishedAt": "2021-11-10T13:15:53Z",
        "channelId": "UCqsUJL5xIWuidR7sIrPLhAw",
        "title": "Learning Pygame by making Pong",
        "description": "A fairly simple Pong game to help you learn the basics of Pygame. We will talk about the fundamentals of Pygame and then incrementally add more elements. \n\nFiles can be found at:\nhttps://github.com/clear-code-projects/Pong_in_Pygame",
        "thumbnails": {
          "default": {
            "url": "https://i.ytimg.com/vi/Qf3-aDXG8q4/default.jpg",
            "width": 120,
            "height": 90
          },
          "medium": {
            "url": "https://i.ytimg.com/vi/Qf3-aDXG8q4/mqdefault.jpg",
            "width": 320,
            "height": 180
          },
          "high": {
            "url": "https://i.ytimg.com/vi/Qf3-aDXG8q4/hqdefault.jpg",
            "width": 480,
            "height": 360
          },
          "standard": {
            "url": "https://i.ytimg.com/vi/Qf3-aDXG8q4/sddefault.jpg",
            "width": 640,
            "height": 480
          },
          "maxres": {
            "url": "https://i.ytimg.com/vi/Qf3-aDXG8q4/maxresdefault.jpg",
            "width": 1280,
            "height": 720
          }
        },
        "channelTitle": "Donald Thompson",
        "playlistId": "PLIjhfluhNd98zSpKsf69arDUm1Dqbe0bn",
        "position": 21,
        "resourceId": {
          "kind": "youtube#video",
          "videoId": "Qf3-aDXG8q4"
        },
        "videoOwnerChannelTitle": "Clear Code",
        "videoOwnerChannelId": "UCznj32AM2r98hZfTxrRo9bQ"
      },
      "contentDetails": {
        "videoId": "Qf3-aDXG8q4",
        "videoPublishedAt": "2019-11-25T13:28:47Z"
      }
    },
    {
      "kind": "youtube#playlistItem",
      "etag": "6N5MtVZesHntg8D0auZLBnSVXTs",
      "id": "UExJamhmbHVoTmQ5OHpTcEtzZjY5YXJEVW0xRHFiZTBibi5DQjg2RDQyMEVGQkZFOEVF",
      "snippet": {
        "publishedAt": "2021-11-10T13:15:40Z",
        "channelId": "UCqsUJL5xIWuidR7sIrPLhAw",
        "title": "Learning pygame by making Flappy Bird",
        "description": "This is an introduction to game development in python. We will use the pygame library to create Flappy bird and this will cover all the basics of pygame so that you can make most 2D games. \n\nSequel: https://youtu.be/XRw1FUEsSv4\n\nTimestamps:\n0:00:00 - Intro\n0:00:33 - How games work\n0:03:07 - Getting started in pygame\n0:13:56 - Images and surfaces\n0:28:14 - Rects, surfaces and our bird\n0:39:06 - Adding the pipes\n0:54:29 - Collisions (with rects)\n1:06:50 - Rotating and animating the bird\n1:19:08 - Adding the score as text\n1:32:18 - Adding the game over screen\n1:34:23 - Adding the sound\n\nProject files:\nhttps://github.com/clear-code-projects/FlappyBird_Python\n\nLink to the original image files: \nhttps://github.com/samuelcust/flappy-bird-assets\n\nLink to the sound files: \nhttps://www.sounds-resource.com/mobile/flappybird/sound/5309/",
        "thumbnails": {
          "default": {
            "url": "https://i.ytimg.com/vi/UZg49z76cLw/default.jpg",
            "width": 120,
            "height": 90
          },
          "medium": {
            "url": "https://i.ytimg.com/vi/UZg49z76cLw/mqdefault.jpg",
            "width": 320,
            "height": 180
          },
          "high": {
            "url": "https://i.ytimg.com/vi/UZg49z76cLw/hqdefault.jpg",
            "width": 480,
            "height": 360
          },
          "standard": {
            "url": "https://i.ytimg.com/vi/UZg49z76cLw/sddefault.jpg",
            "width": 640,
            "height": 480
          },
          "maxres": {
            "url": "https://i.ytimg.com/vi/UZg49z76cLw/maxresdefault.jpg",
            "width": 1280,
            "height": 720
          }
        },
        "channelTitle": "Donald Thompson",
        "playlistId": "PLIjhfluhNd98zSpKsf69arDUm1Dqbe0bn",
        "position": 22,
        "resourceId": {
          "kind": "youtube#video",
          "videoId": "UZg49z76cLw"
        },
        "videoOwnerChannelTitle": "Clear Code",
        "videoOwnerChannelId": "UCznj32AM2r98hZfTxrRo9bQ"
      },
      "contentDetails": {
        "videoId": "UZg49z76cLw",
        "videoPublishedAt": "2020-06-25T12:37:22Z"
      }
    },
    {
      "kind": "youtube#playlistItem",
      "etag": "G0zvsR5dBOElfdUlfxjf-vvtPcA",
      "id": "UExJamhmbHVoTmQ5OHpTcEtzZjY5YXJEVW0xRHFiZTBibi4wQUE0QzM4MkJGQ0YwQjUx",
      "snippet": {
        "publishedAt": "2021-11-10T09:40:27Z",
        "channelId": "UCqsUJL5xIWuidR7sIrPLhAw",
        "title": "Learning pygame by creating Snake [python tutorial]",
        "description": "A tutorial to teach you the fundamentals of pygame by creating the classic snake game. It is designed for absolute beginners, so you don't need to know any pygame; but you would need knowledge of basic python. But besides that, the project should be useful to understand a slightly more complex project, how to use python classes and how to create a basic game in general. \n\nHope you enjoy :) \n\nThe project file is available here: github.com/clear-code-projects/Snake\n\nTimestamps: \n0:00:00 - Intro \n0:00:40 - How games work\n0:02:52 - A basic intro to pygame\n0:12:26 - Drawing in pygame\n0:29:25 - The logic of snake\n0:30:29 - Setting up the board\n0:43:42 - Creating the snake\n0:49:00 - Moving the snake\n0:57:19 - Make sneck munch! \n1:06:45 - Game over states\n1:16:17 - Creating the fruit graphic\n1:18:27 - Creating the snake graphics\n1:38:45 - Grass pattern\n1:44:25 - Adding the score\n1:56:50 - Adding the sound\n2:00:32 - Final tweaks",
        "thumbnails": {
          "default": {
            "url": "https://i.ytimg.com/vi/QFvqStqPCRU/default.jpg",
            "width": 120,
            "height": 90
          },
          "medium": {
            "url": "https://i.ytimg.com/vi/QFvqStqPCRU/mqdefault.jpg",
            "width": 320,
            "height": 180
          },
          "high": {
            "url": "https://i.ytimg.com/vi/QFvqStqPCRU/hqdefault.jpg",
            "width": 480,
            "height": 360
          },
          "standard": {
            "url": "https://i.ytimg.com/vi/QFvqStqPCRU/sddefault.jpg",
            "width": 640,
            "height": 480
          },
          "maxres": {
            "url": "https://i.ytimg.com/vi/QFvqStqPCRU/maxresdefault.jpg",
            "width": 1280,
            "height": 720
          }
        },
        "channelTitle": "Donald Thompson",
        "playlistId": "PLIjhfluhNd98zSpKsf69arDUm1Dqbe0bn",
        "position": 23,
        "resourceId": {
          "kind": "youtube#video",
          "videoId": "QFvqStqPCRU"
        },
        "videoOwnerChannelTitle": "Clear Code",
        "videoOwnerChannelId": "UCznj32AM2r98hZfTxrRo9bQ"
      },
      "contentDetails": {
        "videoId": "QFvqStqPCRU",
        "videoPublishedAt": "2020-10-27T17:54:42Z"
      }
    },
    {
      "kind": "youtube#playlistItem",
      "etag": "2hpvWYy350ZKtYrI3BWybMxoeBs",
      "id": "UExJamhmbHVoTmQ5OHpTcEtzZjY5YXJEVW0xRHFiZTBibi5GMDBDNkJGMzYzREUyMTYw",
      "snippet": {
        "publishedAt": "2021-10-21T01:27:39Z",
        "channelId": "UCqsUJL5xIWuidR7sIrPLhAw",
        "title": "11 Tips And Tricks To Write Better Python Code",
        "description": "In this video, I show 11 Tips and Tricks to Write Better Python code! I show a lot of best practices that improve your code by making your code much cleaner and more Pythonic. \n\n~~~~~~~~~~~~~~ GREAT PLUGINS FOR YOUR CODE EDITOR ~~~~~~~~~~~~~~\n\ud83e\ude81 Code faster with Kite: https://www.kite.com/get-kite/?utm_medium=referral&utm_source=youtube&utm_campaign=pythonengineer&utm_content=description-only *\n\u2705 Write cleaner code with Sourcery: https://sourcery.ai/?utm_source=youtube&utm_campaign=pythonengineer *\n\n\ud83d\udcda Get my FREE NumPy Handbook:\nhttps://www.python-engineer.com/numpybook\n\n\ud83d\udcd3 Notebooks available on Patreon:\nhttps://www.patreon.com/patrickloeber\n\n\u2b50  Join Our Discord : https://discord.gg/FHMg9tKFSN\n\nIf you enjoyed this video, please subscribe to the channel!\n\nAll Tips:\n1) Iterate with enumerate instead or range(len(x))\n2) Use list comprehension instead of raw for loops\n3) Sort complex iterables with sorted()\n4) Store unique values with Sets\n5) Save memory with Generators\n6) Define default values in Dictionaries with .get() and .setdefault()\n7) Count hashable objects with collections.Counter\n8) Format strings with f-Strings (Python 3.6+)\n9) Concatenate strings with .join()\n10) Merge dictionaries with {**d1, **d2} (Python 3.5+)\n11) Simplify if-statements with if x in list\n\nList comprehension Tutorial: https://youtu.be/RaIu2-NM0t0\n\n~~~~~~~~~~~~~~~ CONNECT ~~~~~~~~~~~~~~~\n\n\ud83d\udda5\ufe0f Website: https://www.python-engineer.com\n\ud83d\udc26 Twitter - https://twitter.com/python_engineer\n\u2709\ufe0f Newsletter - https://www.python-engineer.com/newsletter\n\ud83d\udcf8 Instagram - https://www.instagram.com/patloeber\n\ud83e\uddbe Discord: https://discord.gg/FHMg9tKFSN\n\u25b6\ufe0f  Subscribe: https://www.youtube.com/channel/UCbXgNpp0jedKWcQiULLbDTA?sub_confirmation=1\n\n~~~~~~~~~~~~~~ SUPPORT ME  ~~~~~~~~~~~~~~\n\n\ud83c\udd7f Patreon - https://www.patreon.com/patrickloeber\n\nMusic: https://www.bensound.com/\n\n# Python #Tips\n\n----------------------------------------------------------------------------------------------------------\n* This is a sponsored or an affiliate link. By clicking on it you will not have any additional costs, instead you will support me and my project. Thank you so much for the support! \ud83d\ude4f",
        "thumbnails": {
          "default": {
            "url": "https://i.ytimg.com/vi/8OKTAedgFYg/default.jpg",
            "width": 120,
            "height": 90
          },
          "medium": {
            "url": "https://i.ytimg.com/vi/8OKTAedgFYg/mqdefault.jpg",
            "width": 320,
            "height": 180
          },
          "high": {
            "url": "https://i.ytimg.com/vi/8OKTAedgFYg/hqdefault.jpg",
            "width": 480,
            "height": 360
          },
          "standard": {
            "url": "https://i.ytimg.com/vi/8OKTAedgFYg/sddefault.jpg",
            "width": 640,
            "height": 480
          },
          "maxres": {
            "url": "https://i.ytimg.com/vi/8OKTAedgFYg/maxresdefault.jpg",
            "width": 1280,
            "height": 720
          }
        },
        "channelTitle": "Donald Thompson",
        "playlistId": "PLIjhfluhNd98zSpKsf69arDUm1Dqbe0bn",
        "position": 24,
        "resourceId": {
          "kind": "youtube#video",
          "videoId": "8OKTAedgFYg"
        },
        "videoOwnerChannelTitle": "Python Engineer",
        "videoOwnerChannelId": "UCbXgNpp0jedKWcQiULLbDTA"
      },
      "contentDetails": {
        "videoId": "8OKTAedgFYg",
        "videoPublishedAt": "2020-07-05T15:38:52Z"
      }
    },
    {
      "kind": "youtube#playlistItem",
      "etag": "NM5AaNMvxOaSmmn4MLCfegmEbos",
      "id": "UExJamhmbHVoTmQ5OHpTcEtzZjY5YXJEVW0xRHFiZTBibi5CMUM0NzY5NzdEQzlGRjAx",
      "snippet": {
        "publishedAt": "2021-09-06T14:43:35Z",
        "channelId": "UCqsUJL5xIWuidR7sIrPLhAw",
        "title": "Awesome FastAPI Awesome List with Michael Herman",
        "description": "We'll be recording an episode about Michael Herman's awesome-fastapi list. Join us to be part of the show.",
        "thumbnails": {
          "default": {
            "url": "https://i.ytimg.com/vi/hgDEPySOG_s/default.jpg",
            "width": 120,
            "height": 90
          },
          "medium": {
            "url": "https://i.ytimg.com/vi/hgDEPySOG_s/mqdefault.jpg",
            "width": 320,
            "height": 180
          },
          "high": {
            "url": "https://i.ytimg.com/vi/hgDEPySOG_s/hqdefault.jpg",
            "width": 480,
            "height": 360
          },
          "standard": {
            "url": "https://i.ytimg.com/vi/hgDEPySOG_s/sddefault.jpg",
            "width": 640,
            "height": 480
          },
          "maxres": {
            "url": "https://i.ytimg.com/vi/hgDEPySOG_s/maxresdefault.jpg",
            "width": 1280,
            "height": 720
          }
        },
        "channelTitle": "Donald Thompson",
        "playlistId": "PLIjhfluhNd98zSpKsf69arDUm1Dqbe0bn",
        "position": 25,
        "resourceId": {
          "kind": "youtube#video",
          "videoId": "hgDEPySOG_s"
        },
        "videoOwnerChannelTitle": "Talk Python",
        "videoOwnerChannelId": "UCKPSmMfDsXTKrCZApukcJ7A"
      },
      "contentDetails": {
        "videoId": "hgDEPySOG_s",
        "videoPublishedAt": "2021-04-23T07:41:48Z"
      }
    },
    {
      "kind": "youtube#playlistItem",
      "etag": "VbJX7j3_3s27tfrh0GAK4om4H6w",
      "id": "UExJamhmbHVoTmQ5OHpTcEtzZjY5YXJEVW0xRHFiZTBibi5EMzJDRTUwQjBEOUVFQzAw",
      "snippet": {
        "publishedAt": "2021-09-04T18:56:48Z",
        "channelId": "UCqsUJL5xIWuidR7sIrPLhAw",
        "title": "Docker Build: Dockerizing a Python App with FastAPI",
        "description": "Follow along as Michael Kennedy and I build a Python Web app using FastAPI and Docker\n\n#docker #containers #python #fastapi\n--\n\nDocker is an open platform for developers to build, share and run distributed applications. With Docker, IT organizations shrink application delivery from months to minutes, frictionlessly move workloads between data centers and the cloud and can achieve up to 20X greater efficiency in their use of computing resources. Inspired by an active community and by transparent, open source innovation, Docker containers have been downloaded more than 700 million times and Docker is used by millions of developers across thousands of the world\u2019s most innovative organizations, including eBay, Baidu, the BBC, Goldman Sachs, Groupon, ING, Yelp, and Spotify. Docker\u2019s rapid adoption has catalyzed an active ecosystem, resulting in more than 180,000 \u201cDockerized\u201d applications, over 40 Docker-related startups and integration partnerships with AWS, Cloud Foundry, Google, IBM, Microsoft, OpenStack, Rackspace, Red Hat and VMware.",
        "thumbnails": {
          "default": {
            "url": "https://i.ytimg.com/vi/qQNGw_m8t0Y/default.jpg",
            "width": 120,
            "height": 90
          },
          "medium": {
            "url": "https://i.ytimg.com/vi/qQNGw_m8t0Y/mqdefault.jpg",
            "width": 320,
            "height": 180
          },
          "high": {
            "url": "https://i.ytimg.com/vi/qQNGw_m8t0Y/hqdefault.jpg",
            "width": 480,
            "height": 360
          },
          "standard": {
            "url": "https://i.ytimg.com/vi/qQNGw_m8t0Y/sddefault.jpg",
            "width": 640,
            "height": 480
          },
          "maxres": {
            "url": "https://i.ytimg.com/vi/qQNGw_m8t0Y/maxresdefault.jpg",
            "width": 1280,
            "height": 720
          }
        },
        "channelTitle": "Donald Thompson",
        "playlistId": "PLIjhfluhNd98zSpKsf69arDUm1Dqbe0bn",
        "position": 26,
        "resourceId": {
          "kind": "youtube#video",
          "videoId": "qQNGw_m8t0Y"
        },
        "videoOwnerChannelTitle": "Docker",
        "videoOwnerChannelId": "UC76AVf2JkrwjxNKMuPpscHQ"
      },
      "contentDetails": {
        "videoId": "qQNGw_m8t0Y",
        "videoPublishedAt": "2021-04-29T17:22:25Z"
      }
    },
    {
      "kind": "youtube#playlistItem",
      "etag": "F-d5LBMkujBiWaxt_C6e8BUi1es",
      "id": "UExJamhmbHVoTmQ5OHpTcEtzZjY5YXJEVW0xRHFiZTBibi40NzE2MTY1QTM3RUI3QkU3",
      "snippet": {
        "publishedAt": "2021-09-04T17:26:39Z",
        "channelId": "UCqsUJL5xIWuidR7sIrPLhAw",
        "title": "Set up a dev container for your Python app in Visual Studio Code",
        "description": "In this demo, Luciana Abud uses the Remote Containers extension in Visual Studio Code to auto configure a dev container for a FlaskAPI + PostgreSQL app. Watch how the Remote Containers extension makes it easier to set up your Dockerfile, docker-compose.yml and dev container configuration files, taking the stress out of the set up phase so you can focus on the development of your Python code!\n\n\nDemo code: https://github.com/luabud/petgram\nLearn more about the Remote Containers extension for Visual Studio Code: http://aka.ms/vscode-remote-containers\nPython at Microsoft Discord: https://aka.ms/python-discord\nTwitter: https://twitter.com/pythonvscode",
        "thumbnails": {
          "default": {
            "url": "https://i.ytimg.com/vi/FvUpjdWnibo/default.jpg",
            "width": 120,
            "height": 90
          },
          "medium": {
            "url": "https://i.ytimg.com/vi/FvUpjdWnibo/mqdefault.jpg",
            "width": 320,
            "height": 180
          },
          "high": {
            "url": "https://i.ytimg.com/vi/FvUpjdWnibo/hqdefault.jpg",
            "width": 480,
            "height": 360
          }
        },
        "channelTitle": "Donald Thompson",
        "playlistId": "PLIjhfluhNd98zSpKsf69arDUm1Dqbe0bn",
        "position": 27,
        "resourceId": {
          "kind": "youtube#video",
          "videoId": "FvUpjdWnibo"
        },
        "videoOwnerChannelTitle": "Microsoft Developer",
        "videoOwnerChannelId": "UCsMica-v34Irf9KVTh6xx-g"
      },
      "contentDetails": {
        "videoId": "FvUpjdWnibo",
        "videoPublishedAt": "2021-05-25T16:31:37Z"
      }
    },
    {
      "kind": "youtube#playlistItem",
      "etag": "vajelKnu0LGWxScGkaeSPqo79JE",
      "id": "UExJamhmbHVoTmQ5OHpTcEtzZjY5YXJEVW0xRHFiZTBibi44MkM2RjVEQkQ5N0I2MjVE",
      "snippet": {
        "publishedAt": "2021-08-31T11:54:27Z",
        "channelId": "UCqsUJL5xIWuidR7sIrPLhAw",
        "title": "Django REST OAuth. Enable Social Login via Google, Facebook, and Twitter. #22",
        "description": "Django REST OAuth. Enable Social Login via Google, Facebook, and Twitter. Django Rest Framework Project Tutorial [22]\n\nFull project source code.\nhttps://github.com/CryceTruly/incomeexpensesapi\n\n\n\nFeatures Breakdown with Video Links:\n\n1. Project Introduction and Django setup. https://youtu.be/rJWAGQ0JxxI\n\n2. Creating a Django Custom user model. https://youtu.be/SP5je7d3MFA\n\n3. User Email Registration. https://youtu.be/u0qpTOmXvvs\n\n4. Sending account activation Email. https://youtu.be/BXg-b20Xusw\n\n5. User Account Activation. https://youtu.be/cdg48zsjZAE\n\n6. API Documentation using Swagger and REDOC. https://youtu.be/XOB-aHKu6e4\n\n7. User Login/ Get JWT and Refresh Token. https://youtu.be/M61KIo4DAqs\n\n8. Create, Read, Update, Delete Expenses. https://youtu.be/B3HGwFlBvi8\n\n9. Pagination for REST API. https://youtu.be/ScPTnFEEzT0\n\n10. Create, Read, Update, Delete Income. https://youtu.be/ZAjJy6s5P0s\n\n11. API Renderers and Consistent Responses. https://youtu.be/-InaSDmAlOU\n\n12. Rest Framework Simple JWT Exploration. https://youtu.be/ESYWl7Lc9Sc\n\n13. Refresh Token and Access Tokens in. https://youtu.be/x_tLxV57cEA\n\n14. Reset a user's password by Email. https://youtu.be/2kKwPk5qPUs\n\n15. Unit testing the API. https://youtu.be/17KdirMbmHY\n\n16. CI/CD Continous Integration with CircleCI. https://youtu.be/jzir3eYCCw4\n\n17. Configuring CORS Policy. https://youtu.be/q3HQyAObaac\n\n18. Deploying To Heroku. https://youtu.be/r1zUSJwyd8U\n\n19. Creating Chart Data endpoints. https://youtu.be/x2tDVfl4dg4\n\n20. Creating Last year`s Income. statistics endpoints. https://youtu.be/hnrMmkJHdDQ\n\nGithub Repository.\nhttps://github.com/CryceTruly/incomeexpensesapi\n\nSupport the channel\nPaypal. https://www.paypal.com/paypalme/crycetruly\nPatron. https://www.patreon.com/crycetruly\n\n\n\nSubscribe to the channel \ud83d\udc49\ud83d\udc49 https://www.youtube.com/c/semycolon?sub_confirmation=1",
        "thumbnails": {
          "default": {
            "url": "https://i.ytimg.com/vi/d7OxfJZOIhQ/default.jpg",
            "width": 120,
            "height": 90
          },
          "medium": {
            "url": "https://i.ytimg.com/vi/d7OxfJZOIhQ/mqdefault.jpg",
            "width": 320,
            "height": 180
          },
          "high": {
            "url": "https://i.ytimg.com/vi/d7OxfJZOIhQ/hqdefault.jpg",
            "width": 480,
            "height": 360
          },
          "standard": {
            "url": "https://i.ytimg.com/vi/d7OxfJZOIhQ/sddefault.jpg",
            "width": 640,
            "height": 480
          },
          "maxres": {
            "url": "https://i.ytimg.com/vi/d7OxfJZOIhQ/maxresdefault.jpg",
            "width": 1280,
            "height": 720
          }
        },
        "channelTitle": "Donald Thompson",
        "playlistId": "PLIjhfluhNd98zSpKsf69arDUm1Dqbe0bn",
        "position": 28,
        "resourceId": {
          "kind": "youtube#video",
          "videoId": "d7OxfJZOIhQ"
        },
        "videoOwnerChannelTitle": "Cryce Truly",
        "videoOwnerChannelId": "UCQM4dR3UREnGIHz93zRw_0Q"
      },
      "contentDetails": {
        "videoId": "d7OxfJZOIhQ",
        "videoPublishedAt": "2020-09-19T11:33:19Z"
      }
    },
    {
      "kind": "youtube#playlistItem",
      "etag": "_ZFRPe0N31daMc_T_66CeIKT-eg",
      "id": "UExJamhmbHVoTmQ5OHpTcEtzZjY5YXJEVW0xRHFiZTBibi44QTA1QTQyRTc3M0VGQzYx",
      "snippet": {
        "publishedAt": "2021-08-28T13:39:49Z",
        "channelId": "UCqsUJL5xIWuidR7sIrPLhAw",
        "title": "Python YouTube API Tutorial: Using OAuth to Access User Accounts",
        "description": "In this Python Programming Tutorial, we'll be learning how to learning how to use OAuth2 for the YouTube API. This will allow us to access a user's YouTube account for specific reasons. In this video, I'll show how I use this to access my private and unlisted videos from within a Python script. Let's get started...\n\nThe snippets for this video can be found at:\nhttps://gist.github.com/CoreyMSchafer/ea5e3129b81f47c7c38eb9c2e6ddcad7\n\nYouTube API Tutorial - https://youtu.be/th5_9woFJmk\nYouTube API Docs - https://developers.google.com/youtube/v3\nGoogle API Python Client - https://github.com/googleapis/google-api-python-client\n\n\u2705 Support My Channel Through Patreon:\nhttps://www.patreon.com/coreyms\n\n\u2705 Become a Channel Member:\nhttps://www.youtube.com/channel/UCCezIgC97PvUuR4_gbFUs5g/join\n\n\u2705 One-Time Contribution Through PayPal:\nhttps://goo.gl/649HFY\n\n\u2705 Cryptocurrency Donations:\nBitcoin Wallet - 3MPH8oY2EAgbLVy7RBMinwcBntggi7qeG3\nEthereum Wallet - 0x151649418616068fB46C3598083817101d3bCD33\nLitecoin Wallet - MPvEBY5fxGkmPQgocfJbxP6EmTo5UUXMot\n\n\u2705 Corey's Public Amazon Wishlist\nhttp://a.co/inIyro1\n\n\u2705 Equipment I Use and Books I Recommend:\nhttps://www.amazon.com/shop/coreyschafer\n\n\u25b6\ufe0f You Can Find Me On:\nMy Website - http://coreyms.com/\nMy Second Channel - https://www.youtube.com/c/coreymschafer\nFacebook - https://www.facebook.com/CoreyMSchafer\nTwitter - https://twitter.com/CoreyMSchafer\nInstagram - https://www.instagram.com/coreymschafer/\n\n#Python",
        "thumbnails": {
          "default": {
            "url": "https://i.ytimg.com/vi/vQQEaSnQ_bs/default.jpg",
            "width": 120,
            "height": 90
          },
          "medium": {
            "url": "https://i.ytimg.com/vi/vQQEaSnQ_bs/mqdefault.jpg",
            "width": 320,
            "height": 180
          },
          "high": {
            "url": "https://i.ytimg.com/vi/vQQEaSnQ_bs/hqdefault.jpg",
            "width": 480,
            "height": 360
          },
          "standard": {
            "url": "https://i.ytimg.com/vi/vQQEaSnQ_bs/sddefault.jpg",
            "width": 640,
            "height": 480
          },
          "maxres": {
            "url": "https://i.ytimg.com/vi/vQQEaSnQ_bs/maxresdefault.jpg",
            "width": 1280,
            "height": 720
          }
        },
        "channelTitle": "Donald Thompson",
        "playlistId": "PLIjhfluhNd98zSpKsf69arDUm1Dqbe0bn",
        "position": 29,
        "resourceId": {
          "kind": "youtube#video",
          "videoId": "vQQEaSnQ_bs"
        },
        "videoOwnerChannelTitle": "Corey Schafer",
        "videoOwnerChannelId": "UCCezIgC97PvUuR4_gbFUs5g"
      },
      "contentDetails": {
        "videoId": "vQQEaSnQ_bs",
        "videoPublishedAt": "2020-09-10T14:15:03Z"
      }
    },
    {
      "kind": "youtube#playlistItem",
      "etag": "RDUsQ3d4Y-MwOhKpSs6oxF7sD4U",
      "id": "UExJamhmbHVoTmQ5OHpTcEtzZjY5YXJEVW0xRHFiZTBibi5CMEVBRUJERkUyNTBENTkz",
      "snippet": {
        "publishedAt": "2021-08-26T14:15:40Z",
        "channelId": "UCqsUJL5xIWuidR7sIrPLhAw",
        "title": "import asyncio: Learn Python's AsyncIO #1 - The Async Ecosystem",
        "description": "This series of videos introduces AsyncIO to Python programmers who haven't used it yet. The first episode is a high-level view on the async ecosystem. We cover:\n\n- why you'd want to use asynchronous code at all; \n- how latency drives the user experience;\n- what the difference between concurrency and parallelism is;\n- some of the problems you can encounter with threads, and with threads in Python in particular;\n- a short story about select, the OG of async calls; and\n- the history of asynchronous programming in Python that led to AsyncIO.",
        "thumbnails": {
          "default": {
            "url": "https://i.ytimg.com/vi/Xbl7XjFYsN4/default.jpg",
            "width": 120,
            "height": 90
          },
          "medium": {
            "url": "https://i.ytimg.com/vi/Xbl7XjFYsN4/mqdefault.jpg",
            "width": 320,
            "height": 180
          },
          "high": {
            "url": "https://i.ytimg.com/vi/Xbl7XjFYsN4/hqdefault.jpg",
            "width": 480,
            "height": 360
          },
          "standard": {
            "url": "https://i.ytimg.com/vi/Xbl7XjFYsN4/sddefault.jpg",
            "width": 640,
            "height": 480
          },
          "maxres": {
            "url": "https://i.ytimg.com/vi/Xbl7XjFYsN4/maxresdefault.jpg",
            "width": 1280,
            "height": 720
          }
        },
        "channelTitle": "Donald Thompson",
        "playlistId": "PLIjhfluhNd98zSpKsf69arDUm1Dqbe0bn",
        "position": 30,
        "resourceId": {
          "kind": "youtube#video",
          "videoId": "Xbl7XjFYsN4"
        },
        "videoOwnerChannelTitle": "EdgeDB",
        "videoOwnerChannelId": "UCRF82wX0EPwqvKMBwvB4fQg"
      },
      "contentDetails": {
        "videoId": "Xbl7XjFYsN4",
        "videoPublishedAt": "2020-04-15T04:51:14Z"
      }
    },
    {
      "kind": "youtube#playlistItem",
      "etag": "bzMbISdCp4kLHFOWskjvgVB3BtE",
      "id": "UExJamhmbHVoTmQ5OHpTcEtzZjY5YXJEVW0xRHFiZTBibi4xNjIyNEE0MDEyRDlCMjBE",
      "snippet": {
        "publishedAt": "2021-08-26T14:15:40Z",
        "channelId": "UCqsUJL5xIWuidR7sIrPLhAw",
        "title": "import asyncio: Learn Python's AsyncIO #2 - The Event Loop",
        "description": "This series of videos introduces AsyncIO to Python programmers who haven't used it yet. The second episode is a deep dive exploration of the event loop. We cover:\n\n\n- what an event loop is;\n- what the high-level event loop API is in AsyncIO;\n- what implementations of event loops AsyncIO provides and how they differ;\n- how an AsyncIO event loop can be configured;\n- how an AsyncIO event loop is actually implemented;\n- which event loop you should be using in production.",
        "thumbnails": {
          "default": {
            "url": "https://i.ytimg.com/vi/E7Yn5biBZ58/default.jpg",
            "width": 120,
            "height": 90
          },
          "medium": {
            "url": "https://i.ytimg.com/vi/E7Yn5biBZ58/mqdefault.jpg",
            "width": 320,
            "height": 180
          },
          "high": {
            "url": "https://i.ytimg.com/vi/E7Yn5biBZ58/hqdefault.jpg",
            "width": 480,
            "height": 360
          },
          "standard": {
            "url": "https://i.ytimg.com/vi/E7Yn5biBZ58/sddefault.jpg",
            "width": 640,
            "height": 480
          },
          "maxres": {
            "url": "https://i.ytimg.com/vi/E7Yn5biBZ58/maxresdefault.jpg",
            "width": 1280,
            "height": 720
          }
        },
        "channelTitle": "Donald Thompson",
        "playlistId": "PLIjhfluhNd98zSpKsf69arDUm1Dqbe0bn",
        "position": 31,
        "resourceId": {
          "kind": "youtube#video",
          "videoId": "E7Yn5biBZ58"
        },
        "videoOwnerChannelTitle": "EdgeDB",
        "videoOwnerChannelId": "UCRF82wX0EPwqvKMBwvB4fQg"
      },
      "contentDetails": {
        "videoId": "E7Yn5biBZ58",
        "videoPublishedAt": "2020-04-21T00:21:27Z"
      }
    },
    {
      "kind": "youtube#playlistItem",
      "etag": "amdFw9xfwF_8DYEtpyHIaqwdJeY",
      "id": "UExJamhmbHVoTmQ5OHpTcEtzZjY5YXJEVW0xRHFiZTBibi44QTY2MEEzNzBFQUJCMUQ2",
      "snippet": {
        "publishedAt": "2021-08-26T14:15:40Z",
        "channelId": "UCqsUJL5xIWuidR7sIrPLhAw",
        "title": "import asyncio: Learn Python's AsyncIO #3 - Using Coroutines",
        "description": "This series of videos introduces AsyncIO to Python programmers who haven't used it yet. The third episode is the long-awaited introduction to async/await. We cover:\n\n- async functions and coroutines;\n- what are the things you can await on;\n- awaiting on many things at once;\n- running things \"in the background\" with Tasks;\n- waiting for and keeping track of background tasks;\n- cancellations.",
        "thumbnails": {
          "default": {
            "url": "https://i.ytimg.com/vi/-CzqsgaXUM8/default.jpg",
            "width": 120,
            "height": 90
          },
          "medium": {
            "url": "https://i.ytimg.com/vi/-CzqsgaXUM8/mqdefault.jpg",
            "width": 320,
            "height": 180
          },
          "high": {
            "url": "https://i.ytimg.com/vi/-CzqsgaXUM8/hqdefault.jpg",
            "width": 480,
            "height": 360
          },
          "standard": {
            "url": "https://i.ytimg.com/vi/-CzqsgaXUM8/sddefault.jpg",
            "width": 640,
            "height": 480
          },
          "maxres": {
            "url": "https://i.ytimg.com/vi/-CzqsgaXUM8/maxresdefault.jpg",
            "width": 1280,
            "height": 720
          }
        },
        "channelTitle": "Donald Thompson",
        "playlistId": "PLIjhfluhNd98zSpKsf69arDUm1Dqbe0bn",
        "position": 32,
        "resourceId": {
          "kind": "youtube#video",
          "videoId": "-CzqsgaXUM8"
        },
        "videoOwnerChannelTitle": "EdgeDB",
        "videoOwnerChannelId": "UCRF82wX0EPwqvKMBwvB4fQg"
      },
      "contentDetails": {
        "videoId": "-CzqsgaXUM8",
        "videoPublishedAt": "2020-05-06T05:42:15Z"
      }
    },
    {
      "kind": "youtube#playlistItem",
      "etag": "KK8NROhuSBmJlWz1wzx1qTj0WcA",
      "id": "UExJamhmbHVoTmQ5OHpTcEtzZjY5YXJEVW0xRHFiZTBibi4zQTkzRjgxRTY0OEU0MkM3",
      "snippet": {
        "publishedAt": "2021-08-26T14:15:40Z",
        "channelId": "UCqsUJL5xIWuidR7sIrPLhAw",
        "title": "import asyncio: Learn Python's AsyncIO #4 - Coroutines Under The Hood",
        "description": "This series of videos introduces AsyncIO to Python programmers who haven't used it yet. After weeks of silence, Episode IV is like a new hope. Ekhem. I mean, we cover:\n- what Future objects are and how to use them;\n- how asyncio implements Future objects;\n\n- how coroutines worked in Python 3.4;\n\n- how the mighty Task brings it all together;\n\n- how coroutines work in Python 3.8;\n\n- custom awaitables; and\n\n- the most annoying gotcha of asyncio for newcomers.",
        "thumbnails": {
          "default": {
            "url": "https://i.ytimg.com/vi/1LTHbmed3D4/default.jpg",
            "width": 120,
            "height": 90
          },
          "medium": {
            "url": "https://i.ytimg.com/vi/1LTHbmed3D4/mqdefault.jpg",
            "width": 320,
            "height": 180
          },
          "high": {
            "url": "https://i.ytimg.com/vi/1LTHbmed3D4/hqdefault.jpg",
            "width": 480,
            "height": 360
          },
          "standard": {
            "url": "https://i.ytimg.com/vi/1LTHbmed3D4/sddefault.jpg",
            "width": 640,
            "height": 480
          },
          "maxres": {
            "url": "https://i.ytimg.com/vi/1LTHbmed3D4/maxresdefault.jpg",
            "width": 1280,
            "height": 720
          }
        },
        "channelTitle": "Donald Thompson",
        "playlistId": "PLIjhfluhNd98zSpKsf69arDUm1Dqbe0bn",
        "position": 33,
        "resourceId": {
          "kind": "youtube#video",
          "videoId": "1LTHbmed3D4"
        },
        "videoOwnerChannelTitle": "EdgeDB",
        "videoOwnerChannelId": "UCRF82wX0EPwqvKMBwvB4fQg"
      },
      "contentDetails": {
        "videoId": "1LTHbmed3D4",
        "videoPublishedAt": "2020-06-16T04:44:04Z"
      }
    },
    {
      "kind": "youtube#playlistItem",
      "etag": "kQJjC9xd-YdP8Z_7YXGmiNMkNsk",
      "id": "UExJamhmbHVoTmQ5OHpTcEtzZjY5YXJEVW0xRHFiZTBibi4xNTZBNUQxMDZBQzFGMjkw",
      "snippet": {
        "publishedAt": "2021-08-26T14:15:40Z",
        "channelId": "UCqsUJL5xIWuidR7sIrPLhAw",
        "title": "import asyncio: Learn Python's AsyncIO #5 - Batteries Included",
        "description": "This series of videos introduces AsyncIO to Python programmers who haven't used it yet. Like the Song of Ice and Fire, we're at five released instalments. Yes, we plan to have more but until the author delivers, let's not get ahead of ourselves!\n\nThis time around we cover:\n- async context managers and \"async with\";\n- async iterators and \"async for\";\n- async generators and why they are the best;\n- making network connections;\n- serving network requests;\n- task coordination with queues;\n- synchronisation primitives: locks, events, semaphores, and conditions.",
        "thumbnails": {
          "default": {
            "url": "https://i.ytimg.com/vi/SyiTd4rLb2s/default.jpg",
            "width": 120,
            "height": 90
          },
          "medium": {
            "url": "https://i.ytimg.com/vi/SyiTd4rLb2s/mqdefault.jpg",
            "width": 320,
            "height": 180
          },
          "high": {
            "url": "https://i.ytimg.com/vi/SyiTd4rLb2s/hqdefault.jpg",
            "width": 480,
            "height": 360
          },
          "standard": {
            "url": "https://i.ytimg.com/vi/SyiTd4rLb2s/sddefault.jpg",
            "width": 640,
            "height": 480
          },
          "maxres": {
            "url": "https://i.ytimg.com/vi/SyiTd4rLb2s/maxresdefault.jpg",
            "width": 1280,
            "height": 720
          }
        },
        "channelTitle": "Donald Thompson",
        "playlistId": "PLIjhfluhNd98zSpKsf69arDUm1Dqbe0bn",
        "position": 34,
        "resourceId": {
          "kind": "youtube#video",
          "videoId": "SyiTd4rLb2s"
        },
        "videoOwnerChannelTitle": "EdgeDB",
        "videoOwnerChannelId": "UCRF82wX0EPwqvKMBwvB4fQg"
      },
      "contentDetails": {
        "videoId": "SyiTd4rLb2s",
        "videoPublishedAt": "2020-08-03T07:00:12Z"
      }
    },
    {
      "kind": "youtube#playlistItem",
      "etag": "vnNaDUdGwssTSlR6BoiR3ppVRw0",
      "id": "UExJamhmbHVoTmQ5OHpTcEtzZjY5YXJEVW0xRHFiZTBibi4wMDFGNzBEOTU4Q0Y1Q0RG",
      "snippet": {
        "publishedAt": "2021-08-26T14:15:40Z",
        "channelId": "UCqsUJL5xIWuidR7sIrPLhAw",
        "title": "import asyncio: Learn Python's AsyncIO #6 - An Example Web Application with Starlette and EdgeDB",
        "description": "This series of videos introduces AsyncIO to Python programmers who haven't used it yet. This time around we make a Web app from scratch to see how async feels in practical use. Async database connection pools, async generators, all glued with Starlette magic.",
        "thumbnails": {
          "default": {
            "url": "https://i.ytimg.com/vi/dnjm-sx7b8k/default.jpg",
            "width": 120,
            "height": 90
          },
          "medium": {
            "url": "https://i.ytimg.com/vi/dnjm-sx7b8k/mqdefault.jpg",
            "width": 320,
            "height": 180
          },
          "high": {
            "url": "https://i.ytimg.com/vi/dnjm-sx7b8k/hqdefault.jpg",
            "width": 480,
            "height": 360
          },
          "standard": {
            "url": "https://i.ytimg.com/vi/dnjm-sx7b8k/sddefault.jpg",
            "width": 640,
            "height": 480
          },
          "maxres": {
            "url": "https://i.ytimg.com/vi/dnjm-sx7b8k/maxresdefault.jpg",
            "width": 1280,
            "height": 720
          }
        },
        "channelTitle": "Donald Thompson",
        "playlistId": "PLIjhfluhNd98zSpKsf69arDUm1Dqbe0bn",
        "position": 35,
        "resourceId": {
          "kind": "youtube#video",
          "videoId": "dnjm-sx7b8k"
        },
        "videoOwnerChannelTitle": "EdgeDB",
        "videoOwnerChannelId": "UCRF82wX0EPwqvKMBwvB4fQg"
      },
      "contentDetails": {
        "videoId": "dnjm-sx7b8k",
        "videoPublishedAt": "2021-03-19T02:14:08Z"
      }
    },
    {
      "kind": "youtube#playlistItem",
      "etag": "c5wTz3YB0xz1kPf4lNb8atKs87U",
      "id": "UExJamhmbHVoTmQ5OHpTcEtzZjY5YXJEVW0xRHFiZTBibi4wRjhFM0MxMTU1MEUzQ0VB",
      "snippet": {
        "publishedAt": "2021-08-26T14:13:45Z",
        "channelId": "UCqsUJL5xIWuidR7sIrPLhAw",
        "title": "import asyncio: Learn Python's AsyncIO #6 - An Example Web Application with Starlette and EdgeDB",
        "description": "This series of videos introduces AsyncIO to Python programmers who haven't used it yet. This time around we make a Web app from scratch to see how async feels in practical use. Async database connection pools, async generators, all glued with Starlette magic.",
        "thumbnails": {
          "default": {
            "url": "https://i.ytimg.com/vi/dnjm-sx7b8k/default.jpg",
            "width": 120,
            "height": 90
          },
          "medium": {
            "url": "https://i.ytimg.com/vi/dnjm-sx7b8k/mqdefault.jpg",
            "width": 320,
            "height": 180
          },
          "high": {
            "url": "https://i.ytimg.com/vi/dnjm-sx7b8k/hqdefault.jpg",
            "width": 480,
            "height": 360
          },
          "standard": {
            "url": "https://i.ytimg.com/vi/dnjm-sx7b8k/sddefault.jpg",
            "width": 640,
            "height": 480
          },
          "maxres": {
            "url": "https://i.ytimg.com/vi/dnjm-sx7b8k/maxresdefault.jpg",
            "width": 1280,
            "height": 720
          }
        },
        "channelTitle": "Donald Thompson",
        "playlistId": "PLIjhfluhNd98zSpKsf69arDUm1Dqbe0bn",
        "position": 36,
        "resourceId": {
          "kind": "youtube#video",
          "videoId": "dnjm-sx7b8k"
        },
        "videoOwnerChannelTitle": "EdgeDB",
        "videoOwnerChannelId": "UCRF82wX0EPwqvKMBwvB4fQg"
      },
      "contentDetails": {
        "videoId": "dnjm-sx7b8k",
        "videoPublishedAt": "2021-03-19T02:14:08Z"
      }
    },
    {
      "kind": "youtube#playlistItem",
      "etag": "9UgrYIv0MzWH3i_2l9h59Wc_1Qo",
      "id": "UExJamhmbHVoTmQ5OHpTcEtzZjY5YXJEVW0xRHFiZTBibi5CNTZFOTNGQzZEODg1RUQx",
      "snippet": {
        "publishedAt": "2021-08-26T14:13:45Z",
        "channelId": "UCqsUJL5xIWuidR7sIrPLhAw",
        "title": "An Introduction to ASGI, Asynchronous Server Gateway Interface",
        "description": "If you develop web applications in Python you will almost certainly be doing so using WSGI, with the most popular frameworks, Django and Flask, as well as the majority of others being based upon it. WSGI specifies the interface between servers and applications, simplified this interface is,\n\ndef application(environ, start_response):\n    start_response(\"200 OK\", [(\"Content-Type\", \"text/plain\")])\n    return b\"Hello, World\"\nwith the application called on each request. The request description and environment is specified in the environ dict and the start_response is called to send the response status code and headers before the body, which is returned by the application.\n\nASGI also aims to specify the interface between servers and applications, only using the async/await syntax, the interface can be simplified to\n\nasync def application(scope, receive, send):\n    await send({\"type\": \"http.response.start\", \"status\": 200, \"headers\": [(b\"Content-Type\", \"text/plain\")]})\n    await send({\"type\": \"http.response.body\", \"body\": b\"Hello World\"})\nwith the application awaited on each request and scope fulfilling a similar role to environ.\n\nIn this talk I'll explain the above and how it limits WSGI and why ASGI is the solution. I'll also introduce the current ASGI ecosystem and features.\n\nOutline\n- Introduction to WSGI (basic code)\n- WSGI ecosystem servers (Gunicorn, uWSGI, mod_wsgi) and frameworks (Flask, Django)\n- WSGI limitations e.g. Websockets\n- ASGI Introduction (basic code)\n- ASGI development and history\n- ASGI features, websockets, HTTP/2\n- ASGI ecosystem servers (Hypercorn, Daphne, Uvicorn) and frameworks (Starlette, Django, Quart).\n\nEVENT:\n\nPyLondinium 2019\n\nSPEAKER:\n\nPhilip Jones\n\nPUBLICATION PERMISSIONS:\n\nOriginal video was published with the Creative Commons Attribution license (reuse allowed).\n\nATTRIBUTION CREDITS:\n\nOriginal video source: https://www.youtube.com/watch?v=t3gCK9QqXWU",
        "thumbnails": {
          "default": {
            "url": "https://i.ytimg.com/vi/uRcnaI8Hnzg/default.jpg",
            "width": 120,
            "height": 90
          },
          "medium": {
            "url": "https://i.ytimg.com/vi/uRcnaI8Hnzg/mqdefault.jpg",
            "width": 320,
            "height": 180
          },
          "high": {
            "url": "https://i.ytimg.com/vi/uRcnaI8Hnzg/hqdefault.jpg",
            "width": 480,
            "height": 360
          },
          "standard": {
            "url": "https://i.ytimg.com/vi/uRcnaI8Hnzg/sddefault.jpg",
            "width": 640,
            "height": 480
          },
          "maxres": {
            "url": "https://i.ytimg.com/vi/uRcnaI8Hnzg/maxresdefault.jpg",
            "width": 1280,
            "height": 720
          }
        },
        "channelTitle": "Donald Thompson",
        "playlistId": "PLIjhfluhNd98zSpKsf69arDUm1Dqbe0bn",
        "position": 37,
        "resourceId": {
          "kind": "youtube#video",
          "videoId": "uRcnaI8Hnzg"
        },
        "videoOwnerChannelTitle": "Coding Tech",
        "videoOwnerChannelId": "UCtxCXg-UvSnTKPOzLH4wJaQ"
      },
      "contentDetails": {
        "videoId": "uRcnaI8Hnzg",
        "videoPublishedAt": "2019-09-17T19:42:57Z"
      }
    },
    {
      "kind": "youtube#playlistItem",
      "etag": "fitTA9J3hf0GrdokCkqXcU3MyAg",
      "id": "UExJamhmbHVoTmQ5OHpTcEtzZjY5YXJEVW0xRHFiZTBibi5CNTcxMDQ0NThBNzMxODYz",
      "snippet": {
        "publishedAt": "2021-08-26T14:13:45Z",
        "channelId": "UCqsUJL5xIWuidR7sIrPLhAw",
        "title": "Piccolo Starlette Demo",
        "description": "This is a quick overview of what a full async Python web app looks like. It uses the Piccolo ORM for accessing the database, Starlette for routing, and Uvicorn as the web server.\n\nThe actual website can be viewed here:\nhttp://simpleinvestmentguide.com/\n\nTo find out more about Piccolo:\nhttp://piccolo-orm.com/\n\nTo find out more about Starlette:\nhttps://www.starlette.io/",
        "thumbnails": {
          "default": {
            "url": "https://i.ytimg.com/vi/zqP7rjrI_vE/default.jpg",
            "width": 120,
            "height": 90
          },
          "medium": {
            "url": "https://i.ytimg.com/vi/zqP7rjrI_vE/mqdefault.jpg",
            "width": 320,
            "height": 180
          },
          "high": {
            "url": "https://i.ytimg.com/vi/zqP7rjrI_vE/hqdefault.jpg",
            "width": 480,
            "height": 360
          },
          "standard": {
            "url": "https://i.ytimg.com/vi/zqP7rjrI_vE/sddefault.jpg",
            "width": 640,
            "height": 480
          },
          "maxres": {
            "url": "https://i.ytimg.com/vi/zqP7rjrI_vE/maxresdefault.jpg",
            "width": 1280,
            "height": 720
          }
        },
        "channelTitle": "Donald Thompson",
        "playlistId": "PLIjhfluhNd98zSpKsf69arDUm1Dqbe0bn",
        "position": 38,
        "resourceId": {
          "kind": "youtube#video",
          "videoId": "zqP7rjrI_vE"
        },
        "videoOwnerChannelTitle": "Piccolo Tutorials",
        "videoOwnerChannelId": "UCE7x5nm1Iy9KDfXPNrNQ5lA"
      },
      "contentDetails": {
        "videoId": "zqP7rjrI_vE",
        "videoPublishedAt": "2020-05-27T22:03:21Z"
      }
    },
    {
      "kind": "youtube#playlistItem",
      "etag": "fdVNXpBwrk52020y-1NEyv7QyL0",
      "id": "UExJamhmbHVoTmQ5OHpTcEtzZjY5YXJEVW0xRHFiZTBibi5ERkUyQTM0MzEwQjZCMTY5",
      "snippet": {
        "publishedAt": "2021-08-26T14:13:45Z",
        "channelId": "UCqsUJL5xIWuidR7sIrPLhAw",
        "title": "FastAPI - A python framework | Full Course",
        "description": "FastAPI is the fastest Python Web Framework\nLet's learn fastAPI by creating a full API for crud of blog with user authentication\n\nFastAPI is using Pydantic library for types and starlette framework under the hood\nFastAPI also provide amazing support for swagger API docs\n\nSource code - https://github.com/bitfumes/fastapi-course\n\n\ud83c\udf1f Course Contents \ud83c\udf1f\n\u23f3 (00:00:00) Framework Intro\n\u23f3 (00:04:51) Course Intro\n\u23f3 (00:10:09) Install and Setup\n\u23f3 (00:22:33) Break it down\n\u23f3 (00:30:47) Path Parameters\n\u23f3 (00:41:40) API Docs\n\u23f3 (00:45:55) Query Parameters\n\u23f3 (00:55:58) Request Body\n\u23f3 (01:03:58) Debugging\n\u23f3 (01:10:47) Pydantic Schemas\n\u23f3 (01:19:59) Database Connection\n\u23f3 (01:25:37) Create Model and Tables\n\u23f3 (01:33:36) Store blog to database\n\u23f3 (01:38:51) Get blog from database\n\u23f3 (01:43:29) Exception & Status Code\n\u23f3 (01:53:46) Delete a blog\n\u23f3 (02:08:02) Response Model\n\u23f3 (02:15:56) Create User\n\u23f3 (02:23:07) Hash Password\n\u23f3 (02:30:36) Show User\n\u23f3 (02:35:05) Using Doc Tags\n\u23f3 (02:37:58) Relationship\n\u23f3 (02:51:13) API Router\n\u23f3 (03:04:08) API router path operators\n\u23f3 (03:07:24) Blog & User respository\n\u23f3 (03:18:08) Logn & verify Password\n\u23f3 (03:28:37) JWT Access Token\n\u23f3 (03:36:24) Route behind authentication\n\u23f3 (03:51:00) Deploy fastAPI app\n\nThere are many python web frameworks like Django and flask\nBut django and flask are python web frameworks that focus on serving files\n\nThis fastAPI, a python web framework is more focused on creating API with many modern features\n\nPython fastapi is a true solution for your next big API project\n\n\ud83c\udf1f Premium Courses \ud83c\udf1f\nCheck out 32 hours of Laravel Content at\nhttps://bit.ly/indepthlaravel\n\n\ud83d\udd25 DIGITAL OCEAN HOSTING Affiliate\nGet $100 in credit for 60 days https://m.do.co/c/a3a47da9b9a8\n\n\ud83c\udf1f Gadgets I use \ud83c\udf1f\nCamera                                   https://amzn.to/3mGikwL\nBlue Yeti Mic                          https://amzn.to/3mA6YdI\nBlue Yeti Mic Foam Cover   https://amzn.to/2GkmV8w\nCapture Card                         https://amzn.to/3ed3cnN\n\n\ud83c\udf1f Support Me ( I am full time youtuber) \ud83c\udf1f\nGithub       https://github.com/sponsors/bitfumes \nPatreon    https://patreon.com/bitfumes\nYoutube    https://www.youtube.com/channel/UC_hG9fglfmShkwex1KVydHA/join\n\n\ud83c\udf1f FOLLOW ME \ud83c\udf1f\nSubscribe for New Releases!\n\nTwitter - https://twitter.com/bitfumes\nTwitter - https://twitter.com/sarthaksavvy\nFacebook - https://www.facebook.com/Bitfumes\nInstagram - https://www.instagram.com/bitfumes\n(ask me questions!)\n\n--- QUESTIONS? ---\n\nLeave a comment below and I or someone else can help you.\nFor quick questions you may also want to ask me on Twitter, I respond almost immediately.\n\nEmail me support@bitfumes.com\nThanks for all your support",
        "thumbnails": {
          "default": {
            "url": "https://i.ytimg.com/vi/7t2alSnE2-I/default.jpg",
            "width": 120,
            "height": 90
          },
          "medium": {
            "url": "https://i.ytimg.com/vi/7t2alSnE2-I/mqdefault.jpg",
            "width": 320,
            "height": 180
          },
          "high": {
            "url": "https://i.ytimg.com/vi/7t2alSnE2-I/hqdefault.jpg",
            "width": 480,
            "height": 360
          },
          "standard": {
            "url": "https://i.ytimg.com/vi/7t2alSnE2-I/sddefault.jpg",
            "width": 640,
            "height": 480
          },
          "maxres": {
            "url": "https://i.ytimg.com/vi/7t2alSnE2-I/maxresdefault.jpg",
            "width": 1280,
            "height": 720
          }
        },
        "channelTitle": "Donald Thompson",
        "playlistId": "PLIjhfluhNd98zSpKsf69arDUm1Dqbe0bn",
        "position": 39,
        "resourceId": {
          "kind": "youtube#video",
          "videoId": "7t2alSnE2-I"
        },
        "videoOwnerChannelTitle": "Bitfumes",
        "videoOwnerChannelId": "UC_hG9fglfmShkwex1KVydHA"
      },
      "contentDetails": {
        "videoId": "7t2alSnE2-I",
        "videoPublishedAt": "2021-02-15T14:00:02Z"
      }
    },
    {
      "kind": "youtube#playlistItem",
      "etag": "aEzc2foNdZCq83cl71vXpU9T2J4",
      "id": "UExJamhmbHVoTmQ5OHpTcEtzZjY5YXJEVW0xRHFiZTBibi4xM0YyM0RDNDE4REQ1NDA0",
      "snippet": {
        "publishedAt": "2021-08-26T14:13:45Z",
        "channelId": "UCqsUJL5xIWuidR7sIrPLhAw",
        "title": "Deploying your FastAPI project with docker in 4 minutes",
        "description": "1. Install Docker for Desktop\nhttps://www.docker.com/products/docker-desktop\n2. Follow our video tutorial\n\n\u1780\u17bb\u17c6\u1797\u17d2\u179b\u17c1\u1785\u1787\u17bd\u1799 Like page \u1793\u17b7\u1784 Subscript YouTube channel \u178a\u17be\u1798\u17d2\u1794\u17b8\u1791\u1791\u17bd\u179b\u1794\u17b6\u1793\u179c\u17b8\u178a\u17c1\u17a2\u17bc\u1790\u17d2\u1798\u17b8\u17d7\nFacebook: https://web.facebook.com/hellocoder/\nYoutube: https://www.youtube.com/channel/UCaxkrqF2ISfn4n4dKzXBmhw\nGithub: https://github.com/hellocoder2020/fastapi-demo-3.git",
        "thumbnails": {
          "default": {
            "url": "https://i.ytimg.com/vi/gVymPpepQco/default.jpg",
            "width": 120,
            "height": 90
          },
          "medium": {
            "url": "https://i.ytimg.com/vi/gVymPpepQco/mqdefault.jpg",
            "width": 320,
            "height": 180
          },
          "high": {
            "url": "https://i.ytimg.com/vi/gVymPpepQco/hqdefault.jpg",
            "width": 480,
            "height": 360
          },
          "standard": {
            "url": "https://i.ytimg.com/vi/gVymPpepQco/sddefault.jpg",
            "width": 640,
            "height": 480
          },
          "maxres": {
            "url": "https://i.ytimg.com/vi/gVymPpepQco/maxresdefault.jpg",
            "width": 1280,
            "height": 720
          }
        },
        "channelTitle": "Donald Thompson",
        "playlistId": "PLIjhfluhNd98zSpKsf69arDUm1Dqbe0bn",
        "position": 40,
        "resourceId": {
          "kind": "youtube#video",
          "videoId": "gVymPpepQco"
        },
        "videoOwnerChannelTitle": "Hello Coder",
        "videoOwnerChannelId": "UCaxkrqF2ISfn4n4dKzXBmhw"
      },
      "contentDetails": {
        "videoId": "gVymPpepQco",
        "videoPublishedAt": "2020-06-07T10:22:28Z"
      }
    },
    {
      "kind": "youtube#playlistItem",
      "etag": "HnuRmOM2x9Mj2jPXiK_O6pSX0AM",
      "id": "UExJamhmbHVoTmQ5OHpTcEtzZjY5YXJEVW0xRHFiZTBibi42MjYzMTMyQjA0QURCN0JF",
      "snippet": {
        "publishedAt": "2021-08-26T14:13:45Z",
        "channelId": "UCqsUJL5xIWuidR7sIrPLhAw",
        "title": "Intro to FastAPI - The Best Way to Create APIs in Python?",
        "description": "In this video I introduce FastAPI, a framework for creating frameworks in a much different style that you're used to in Python.\n\nGet the code: https://prettyprinted.com/l/xW8\n\n\n\u2b50  Kite is a free AI-powered coding assistant that will help you code faster and smarter. The Kite plugin integrates with all the top editors and IDEs to give you smart completions and documentation while you\u2019re typing. I've been using Kite for VS Code and I love it! https://www.kite.com/get-kite/?utm_medium=referral&utm_source=youtube&utm_campaign=prettyprinted&utm_content=description-only\n\nWeb Development Courses: https://prettyprinted.com\n\nSubscribe: http://www.youtube.com/channel/UC-QDfvrRIDB6F0bIO4I4HkQ?sub_confirmation=\nTwitter: https://twitter.com/pretty_printed\nGithub: https://github.com/prettyprinted",
        "thumbnails": {
          "default": {
            "url": "https://i.ytimg.com/vi/kCggyi_7pHg/default.jpg",
            "width": 120,
            "height": 90
          },
          "medium": {
            "url": "https://i.ytimg.com/vi/kCggyi_7pHg/mqdefault.jpg",
            "width": 320,
            "height": 180
          },
          "high": {
            "url": "https://i.ytimg.com/vi/kCggyi_7pHg/hqdefault.jpg",
            "width": 480,
            "height": 360
          },
          "standard": {
            "url": "https://i.ytimg.com/vi/kCggyi_7pHg/sddefault.jpg",
            "width": 640,
            "height": 480
          },
          "maxres": {
            "url": "https://i.ytimg.com/vi/kCggyi_7pHg/maxresdefault.jpg",
            "width": 1280,
            "height": 720
          }
        },
        "channelTitle": "Donald Thompson",
        "playlistId": "PLIjhfluhNd98zSpKsf69arDUm1Dqbe0bn",
        "position": 41,
        "resourceId": {
          "kind": "youtube#video",
          "videoId": "kCggyi_7pHg"
        },
        "videoOwnerChannelTitle": "Pretty Printed",
        "videoOwnerChannelId": "UC-QDfvrRIDB6F0bIO4I4HkQ"
      },
      "contentDetails": {
        "videoId": "kCggyi_7pHg",
        "videoPublishedAt": "2020-09-04T15:00:11Z"
      }
    },
    {
      "kind": "youtube#playlistItem",
      "etag": "y-Qq4KhZVEqZ_I1urV9vESRttiI",
      "id": "UExJamhmbHVoTmQ5OHpTcEtzZjY5YXJEVW0xRHFiZTBibi40MDNEMzA0QTBFRThFMzBE",
      "snippet": {
        "publishedAt": "2021-08-26T14:13:45Z",
        "channelId": "UCqsUJL5xIWuidR7sIrPLhAw",
        "title": "FARM Stack Course  ( FastAPI , React js ,  mongoDB ) in 1 Hour [Presented in FreeCodeCamp as well]",
        "description": "Howdy friends \ud83d\udc4b\nThis is the only FARM Stack Course on YouTube , and I'm really happy \nI did it for you guys.\nNow,  the prerequisites to follow along is to have the basic understanding of the following  :\n\n1- HTTP request methods\n2- Async/Await Syntax\n3- Python language in general and FASTAPI in particular\n4- JavaScript ES6 and React JS basics\n5- Database systems, and specially NOSQL\n6- Fundamentals of MongoDB\n7- How client talks to the server ( Axios / HTTP methods )\n\nWe have also created a CRUD Application, where you will understand :\nHow to connect FastAPI - where your server side code lives - with mongoDB database. \nAnd together we can connect the backend to the frontend where React can send and receive HTTP requests to and from the server.\nIn case of any questions, don't be shy and drop it/them in the comments or contact me on : info@bekbrace.com\n\nProject Contents:\n\nFARM STACK Explained (Theory)            [ 00:00 ] \nBackend build (FastAPI)                           [ 11:20 ] \nMongoDB Queries                                      [ 39:39 ]\nFrontend Design                                         [ 42:15 ] \nApp Testing                                                 [ 58:03 ]\n\nSources \ud83c\udf10 \n--------------\nFastAPI                             : https://fastapi.tiangolo.com\nReactJS                            : https://reactjs.org\u200b\u200b\u200b\nmongoDB                         : https://www.mongodb.com\ncreate-react-app              : https://github.com/facebook/create-react-app\nReact ( GitHub )               : https://github.com/facebook/react\nAxios ( GitHub )               : https://github.com/axios/axios\u200b\u200b\u200b\n\nThe Stack overflow survey for 2020 : \nhttps://insights.stackoverflow.com/survey/2020\n\nSource Code                     \nhttps://github.com/BekBrace/FARM-Stack-Course\n\nSocial Media \ud83d\udd17 \n--------------\nFacebook: https://www.facebook.com/bekbrace\nDev Blog: \u200b\u200b\u200b\u200bhttps://dev.to/bekbrace\nGithub profile: \u200b\u200b\u200bhttps://github.com/bekbrace\n\n*******************************************************************",
        "thumbnails": {
          "default": {
            "url": "https://i.ytimg.com/vi/oGwszbCH5Z4/default.jpg",
            "width": 120,
            "height": 90
          },
          "medium": {
            "url": "https://i.ytimg.com/vi/oGwszbCH5Z4/mqdefault.jpg",
            "width": 320,
            "height": 180
          },
          "high": {
            "url": "https://i.ytimg.com/vi/oGwszbCH5Z4/hqdefault.jpg",
            "width": 480,
            "height": 360
          },
          "standard": {
            "url": "https://i.ytimg.com/vi/oGwszbCH5Z4/sddefault.jpg",
            "width": 640,
            "height": 480
          },
          "maxres": {
            "url": "https://i.ytimg.com/vi/oGwszbCH5Z4/maxresdefault.jpg",
            "width": 1280,
            "height": 720
          }
        },
        "channelTitle": "Donald Thompson",
        "playlistId": "PLIjhfluhNd98zSpKsf69arDUm1Dqbe0bn",
        "position": 42,
        "resourceId": {
          "kind": "youtube#video",
          "videoId": "oGwszbCH5Z4"
        },
        "videoOwnerChannelTitle": "Bek Brace",
        "videoOwnerChannelId": "UC7EVSn5inapL20oPSwAwEUg"
      },
      "contentDetails": {
        "videoId": "oGwszbCH5Z4",
        "videoPublishedAt": "2021-06-16T18:43:28Z"
      }
    },
    {
      "kind": "youtube#playlistItem",
      "etag": "l_rKYa23iz9RQx0mE-HpLxOakrU",
      "id": "UExJamhmbHVoTmQ5OHpTcEtzZjY5YXJEVW0xRHFiZTBibi42RTNCOEMxREI3Q0VDMjU2",
      "snippet": {
        "publishedAt": "2021-08-26T14:13:45Z",
        "channelId": "UCqsUJL5xIWuidR7sIrPLhAw",
        "title": "FULL FastAPI project with me!!",
        "description": "Hey everyone! Here's a FastAPI project stream package for you all. I hope you like it!\n\nWe also just reached 20K subscribers here and I'd like to thank you for your support and for being part of our awesome community! \n\nDiscord: https://discord.gg/XVteC9J\nTwitch: https://www.twitch.tv/faradayacademy\nInstagram: https://www.instagram.com/faradayacademy\n\n-----\nSupport my channel:\n-----\nPatreon: https://bit.ly/32K7X0B\nPaypal Donations: https://www.paypal.me/faradayacademy\nBuy my book on learning how to code and getting hired on Amazon: https://amzn.to/3a911Rk\nOr other bookstores: https://books2read.com/u/4DgO8D\nBooks I recommend for programming and self-improvement: https://gwenfaraday.com/recommended-reading/ \n\n-----\nProgramming Content\n-----\nhttps://gwenfaraday.com\nWeekly newsletter: https://bit.ly/3devRGZ\nTwitter: https://twitter.com/faradayacademy\n\n-----\nBlockchain Content:\n-----\nhttp://schoolofblock.tech\nBlockchain newsletter: https://bit.ly/2CFcjLV\nBlockchain Channel, School of Block: https://bit.ly/2QhcIfr\nTwitter: https://twitter.com/school_of_block\n\nDISCLOSURE: Some of the book and product links here might be affiliate links. That means that you are helping support my channel without paying any extra for the goods or services yourself. Thank you.",
        "thumbnails": {
          "default": {
            "url": "https://i.ytimg.com/vi/kyJNbSUz86w/default.jpg",
            "width": 120,
            "height": 90
          },
          "medium": {
            "url": "https://i.ytimg.com/vi/kyJNbSUz86w/mqdefault.jpg",
            "width": 320,
            "height": 180
          },
          "high": {
            "url": "https://i.ytimg.com/vi/kyJNbSUz86w/hqdefault.jpg",
            "width": 480,
            "height": 360
          },
          "standard": {
            "url": "https://i.ytimg.com/vi/kyJNbSUz86w/sddefault.jpg",
            "width": 640,
            "height": 480
          },
          "maxres": {
            "url": "https://i.ytimg.com/vi/kyJNbSUz86w/maxresdefault.jpg",
            "width": 1280,
            "height": 720
          }
        },
        "channelTitle": "Donald Thompson",
        "playlistId": "PLIjhfluhNd98zSpKsf69arDUm1Dqbe0bn",
        "position": 43,
        "resourceId": {
          "kind": "youtube#video",
          "videoId": "kyJNbSUz86w"
        },
        "videoOwnerChannelTitle": "Faraday Academy",
        "videoOwnerChannelId": "UCxA99Yr6P_tZF9_BgtMGAWA"
      },
      "contentDetails": {
        "videoId": "kyJNbSUz86w",
        "videoPublishedAt": "2021-05-27T15:00:16Z"
      }
    },
    {
      "kind": "youtube#playlistItem",
      "etag": "j9e6So6debCi-Z8WlCAkd6iawmM",
      "id": "UExJamhmbHVoTmQ5OHpTcEtzZjY5YXJEVW0xRHFiZTBibi43QzNCNkZENzIyMDY2MjZB",
      "snippet": {
        "publishedAt": "2021-08-26T14:13:45Z",
        "channelId": "UCqsUJL5xIWuidR7sIrPLhAw",
        "title": "Patrick Arminio - GraphQL in Python \ud83c\udf53",
        "description": "\"GraphQL in Python \ud83c\udf53\n[EuroPython 2019 - Talk - 2019-07-11 - MongoDB]\n[Basel, CH]\n\nBy Patrick Arminio\n\nOver the past few years GraphQL has gained much traction, but what\u2019s the state of GraphQL in Python. This talk describes what GraphQL is, why it has been created and the current state of GraphQL libraries in Python.\n\nThere will be a short history of GraphQL, some examples of what makes it shine and why it can be preferred to REST.\n\nWe will also analyse the current state of GraphQL in Python, having a brief overview of the current libraries and then having an in-depth look at Strawberry a new library based on dataclasses that makes it easy to create GraphQl APIs in Python.\n\n\n\nLicense: This video is licensed under the CC BY-NC-SA 3.0 license: https://creativecommons.org/licenses/by-nc-sa/3.0/\nPlease see our speaker release agreement for details: https://ep2019.europython.eu/events/speaker-release-agreement/",
        "thumbnails": {
          "default": {
            "url": "https://i.ytimg.com/vi/38uCu6ZEvfo/default.jpg",
            "width": 120,
            "height": 90
          },
          "medium": {
            "url": "https://i.ytimg.com/vi/38uCu6ZEvfo/mqdefault.jpg",
            "width": 320,
            "height": 180
          },
          "high": {
            "url": "https://i.ytimg.com/vi/38uCu6ZEvfo/hqdefault.jpg",
            "width": 480,
            "height": 360
          },
          "standard": {
            "url": "https://i.ytimg.com/vi/38uCu6ZEvfo/sddefault.jpg",
            "width": 640,
            "height": 480
          },
          "maxres": {
            "url": "https://i.ytimg.com/vi/38uCu6ZEvfo/maxresdefault.jpg",
            "width": 1280,
            "height": 720
          }
        },
        "channelTitle": "Donald Thompson",
        "playlistId": "PLIjhfluhNd98zSpKsf69arDUm1Dqbe0bn",
        "position": 44,
        "resourceId": {
          "kind": "youtube#video",
          "videoId": "38uCu6ZEvfo"
        },
        "videoOwnerChannelTitle": "EuroPython Conference",
        "videoOwnerChannelId": "UC98CzaYuFNAA_gOINFB0e4Q"
      },
      "contentDetails": {
        "videoId": "38uCu6ZEvfo",
        "videoPublishedAt": "2019-09-23T18:20:48Z"
      }
    },
    {
      "kind": "youtube#playlistItem",
      "etag": "zdufokw7fVH0a-OlAdnboWiX_i0",
      "id": "UExJamhmbHVoTmQ5OHpTcEtzZjY5YXJEVW0xRHFiZTBibi5EQkE3RTJCQTJEQkFBQTcz",
      "snippet": {
        "publishedAt": "2021-08-26T14:13:45Z",
        "channelId": "UCqsUJL5xIWuidR7sIrPLhAw",
        "title": "How to Create Background Tasks in Fast API",
        "description": "In this video I will show you how to create background tasks in Fast API.\n\nGet the code here: https://prettyprinted.com/l/uhL\n\nWeb Development Courses: https://prettyprinted.com\n\n\u2b50  Kite is a free AI-powered coding assistant that will help you code faster and smarter. The Kite plugin integrates with all the top editors and IDEs to give you smart completions and documentation while you\u2019re typing. I've been using Kite for VS Code and I love it! https://www.kite.com/get-kite/?utm_medium=referral&utm_source=youtube&utm_campaign=prettyprinted&utm_content=description-only\n\nSubscribe: http://www.youtube.com/channel/UC-QDfvrRIDB6F0bIO4I4HkQ?sub_confirmation=\nTwitter: https://twitter.com/pretty_printed\nGithub: https://github.com/prettyprinted",
        "thumbnails": {
          "default": {
            "url": "https://i.ytimg.com/vi/_yXOJvr5vOM/default.jpg",
            "width": 120,
            "height": 90
          },
          "medium": {
            "url": "https://i.ytimg.com/vi/_yXOJvr5vOM/mqdefault.jpg",
            "width": 320,
            "height": 180
          },
          "high": {
            "url": "https://i.ytimg.com/vi/_yXOJvr5vOM/hqdefault.jpg",
            "width": 480,
            "height": 360
          },
          "standard": {
            "url": "https://i.ytimg.com/vi/_yXOJvr5vOM/sddefault.jpg",
            "width": 640,
            "height": 480
          },
          "maxres": {
            "url": "https://i.ytimg.com/vi/_yXOJvr5vOM/maxresdefault.jpg",
            "width": 1280,
            "height": 720
          }
        },
        "channelTitle": "Donald Thompson",
        "playlistId": "PLIjhfluhNd98zSpKsf69arDUm1Dqbe0bn",
        "position": 45,
        "resourceId": {
          "kind": "youtube#video",
          "videoId": "_yXOJvr5vOM"
        },
        "videoOwnerChannelTitle": "Pretty Printed",
        "videoOwnerChannelId": "UC-QDfvrRIDB6F0bIO4I4HkQ"
      },
      "contentDetails": {
        "videoId": "_yXOJvr5vOM",
        "videoPublishedAt": "2021-04-11T02:44:00Z"
      }
    },
    {
      "kind": "youtube#playlistItem",
      "etag": "Bbb7yQv_k6P7SjHhDGF2NNmer6c",
      "id": "UExJamhmbHVoTmQ5OHpTcEtzZjY5YXJEVW0xRHFiZTBibi4yQzk4QTA5QjkzMTFFOEI1",
      "snippet": {
        "publishedAt": "2021-08-26T14:13:45Z",
        "channelId": "UCqsUJL5xIWuidR7sIrPLhAw",
        "title": "How to Call a Flask API in React",
        "description": "Learn how to build a React frontend that gets data from a Flask API.\n\nCode: https://github.com/benawad/react-movie-list\n\nWatch Anthony's video first: https://youtu.be/Urx8Kj00zsI\n\n----\nIf you like cooking, checkout my side project: https://www.mysaffronapp.com/\n\n----\nJoin the Discord:  https://discord.gg/Vehs99V\n\n----\nPatreon: https://www.patreon.com/benawad\n\n----\nFollow Me Online Here:\n\n\nTwitch: https://www.twitch.tv/benawad\nGitHub: https://github.com/benawad\nLinkedIn: https://www.linkedin.com/in/benawad/\nInstagram: http://instagram.com/benawad97\nTwitter: https://twitter.com/benawad\n#benawad\nTikTok: https://www.tiktok.com/@benawad",
        "thumbnails": {
          "default": {
            "url": "https://i.ytimg.com/vi/06pWsB_hoD4/default.jpg",
            "width": 120,
            "height": 90
          },
          "medium": {
            "url": "https://i.ytimg.com/vi/06pWsB_hoD4/mqdefault.jpg",
            "width": 320,
            "height": 180
          },
          "high": {
            "url": "https://i.ytimg.com/vi/06pWsB_hoD4/hqdefault.jpg",
            "width": 480,
            "height": 360
          },
          "standard": {
            "url": "https://i.ytimg.com/vi/06pWsB_hoD4/sddefault.jpg",
            "width": 640,
            "height": 480
          },
          "maxres": {
            "url": "https://i.ytimg.com/vi/06pWsB_hoD4/maxresdefault.jpg",
            "width": 1280,
            "height": 720
          }
        },
        "channelTitle": "Donald Thompson",
        "playlistId": "PLIjhfluhNd98zSpKsf69arDUm1Dqbe0bn",
        "position": 46,
        "resourceId": {
          "kind": "youtube#video",
          "videoId": "06pWsB_hoD4"
        },
        "videoOwnerChannelTitle": "Ben Awad",
        "videoOwnerChannelId": "UC-8QAzbLcRglXeN_MY9blyw"
      },
      "contentDetails": {
        "videoId": "06pWsB_hoD4",
        "videoPublishedAt": "2019-05-09T14:00:01Z"
      }
    },
    {
      "kind": "youtube#playlistItem",
      "etag": "RdBSodprXRFTInuV8ZJiR9vCowU",
      "id": "UExJamhmbHVoTmQ5OHpTcEtzZjY5YXJEVW0xRHFiZTBibi45NDlDQUFFOThDMTAxQjUw",
      "snippet": {
        "publishedAt": "2021-08-26T14:13:45Z",
        "channelId": "UCqsUJL5xIWuidR7sIrPLhAw",
        "title": "Python - Asyncio and Websockets a match made in heaven   simple client and server",
        "description": "This video is a getting started guide for those of you interessted in the Asyncio and Websockets world of python.\nThis is based on the official documentation with some additional side notes.\n\nGithub: https://github.com/r3ap3rpy/async-websockets/tree/master/Part_1\nPatreon: https://www.patreon.com/r3ap3rpy/creators",
        "thumbnails": {
          "default": {
            "url": "https://i.ytimg.com/vi/7i0-lYjtvIE/default.jpg",
            "width": 120,
            "height": 90
          },
          "medium": {
            "url": "https://i.ytimg.com/vi/7i0-lYjtvIE/mqdefault.jpg",
            "width": 320,
            "height": 180
          },
          "high": {
            "url": "https://i.ytimg.com/vi/7i0-lYjtvIE/hqdefault.jpg",
            "width": 480,
            "height": 360
          },
          "standard": {
            "url": "https://i.ytimg.com/vi/7i0-lYjtvIE/sddefault.jpg",
            "width": 640,
            "height": 480
          },
          "maxres": {
            "url": "https://i.ytimg.com/vi/7i0-lYjtvIE/maxresdefault.jpg",
            "width": 1280,
            "height": 720
          }
        },
        "channelTitle": "Donald Thompson",
        "playlistId": "PLIjhfluhNd98zSpKsf69arDUm1Dqbe0bn",
        "position": 47,
        "resourceId": {
          "kind": "youtube#video",
          "videoId": "7i0-lYjtvIE"
        },
        "videoOwnerChannelTitle": "R3ap3rPy",
        "videoOwnerChannelId": "UC1qkMXH8d2I9DDAtBSeEHqg"
      },
      "contentDetails": {
        "videoId": "7i0-lYjtvIE",
        "videoPublishedAt": "2018-10-29T07:42:03Z"
      }
    },
    {
      "kind": "youtube#playlistItem",
      "etag": "EdG_Iv0uOAT9uUVCK-z0LWWdkCk",
      "id": "UExJamhmbHVoTmQ5OHpTcEtzZjY5YXJEVW0xRHFiZTBibi4xN0Y2QjVBOEI2MzQ5OUM5",
      "snippet": {
        "publishedAt": "2021-08-26T14:13:45Z",
        "channelId": "UCqsUJL5xIWuidR7sIrPLhAw",
        "title": "import asyncio: Learn Python's AsyncIO #1 - The Async Ecosystem",
        "description": "This series of videos introduces AsyncIO to Python programmers who haven't used it yet. The first episode is a high-level view on the async ecosystem. We cover:\n\n- why you'd want to use asynchronous code at all; \n- how latency drives the user experience;\n- what the difference between concurrency and parallelism is;\n- some of the problems you can encounter with threads, and with threads in Python in particular;\n- a short story about select, the OG of async calls; and\n- the history of asynchronous programming in Python that led to AsyncIO.",
        "thumbnails": {
          "default": {
            "url": "https://i.ytimg.com/vi/Xbl7XjFYsN4/default.jpg",
            "width": 120,
            "height": 90
          },
          "medium": {
            "url": "https://i.ytimg.com/vi/Xbl7XjFYsN4/mqdefault.jpg",
            "width": 320,
            "height": 180
          },
          "high": {
            "url": "https://i.ytimg.com/vi/Xbl7XjFYsN4/hqdefault.jpg",
            "width": 480,
            "height": 360
          },
          "standard": {
            "url": "https://i.ytimg.com/vi/Xbl7XjFYsN4/sddefault.jpg",
            "width": 640,
            "height": 480
          },
          "maxres": {
            "url": "https://i.ytimg.com/vi/Xbl7XjFYsN4/maxresdefault.jpg",
            "width": 1280,
            "height": 720
          }
        },
        "channelTitle": "Donald Thompson",
        "playlistId": "PLIjhfluhNd98zSpKsf69arDUm1Dqbe0bn",
        "position": 48,
        "resourceId": {
          "kind": "youtube#video",
          "videoId": "Xbl7XjFYsN4"
        },
        "videoOwnerChannelTitle": "EdgeDB",
        "videoOwnerChannelId": "UCRF82wX0EPwqvKMBwvB4fQg"
      },
      "contentDetails": {
        "videoId": "Xbl7XjFYsN4",
        "videoPublishedAt": "2020-04-15T04:51:14Z"
      }
    },
    {
      "kind": "youtube#playlistItem",
      "etag": "qdvTkSc3ZmKUMGhDRfPb-1Tv89s",
      "id": "UExJamhmbHVoTmQ5OHpTcEtzZjY5YXJEVW0xRHFiZTBibi5FQUY2Qzk4RUFDN0ZFRkZF",
      "snippet": {
        "publishedAt": "2021-08-26T14:13:45Z",
        "channelId": "UCqsUJL5xIWuidR7sIrPLhAw",
        "title": "Pyramid [ Python Framework ] : Start Small, Finish Big !",
        "description": "Hey guys \ud83d\udc4b\nIn this tutorial, you will know the fundamental blocks in Pyramid framework, we're going to see : \n\n0 - Getting started (introduction)                                     00:00\n1 - How to run a minimal \" Hello, World! \" app               07:23    \n2 - How to render JSON data                                           11:55\n3 - How to render static files (assets) CSS & Images  15:29 \n\nSources \ud83c\udf10 \n--------------\nSource Code                  : https://github.com/BekBrace/Pyramid_Framework_Tutorial\nPyramid Site                  : \u200bhttps://trypyramid.com\nPyramid Github             : https://github.com/Pylons/pyramid\nDebugtoolbar                : https://docs.pylonsproject.org/projects/pyramid_debugtoolbar/en/latest/\n\nSocial Media \ud83d\udd17 \n--------------\nFacebook                       : https://www.facebook.com/bekbrace\u200b \nDEV profile                     : https://dev.to/bekbrace\u200b\nGithub profile                 : https://github.com/BekBrace",
        "thumbnails": {
          "default": {
            "url": "https://i.ytimg.com/vi/wgMj6ZsCiBk/default.jpg",
            "width": 120,
            "height": 90
          },
          "medium": {
            "url": "https://i.ytimg.com/vi/wgMj6ZsCiBk/mqdefault.jpg",
            "width": 320,
            "height": 180
          },
          "high": {
            "url": "https://i.ytimg.com/vi/wgMj6ZsCiBk/hqdefault.jpg",
            "width": 480,
            "height": 360
          },
          "standard": {
            "url": "https://i.ytimg.com/vi/wgMj6ZsCiBk/sddefault.jpg",
            "width": 640,
            "height": 480
          },
          "maxres": {
            "url": "https://i.ytimg.com/vi/wgMj6ZsCiBk/maxresdefault.jpg",
            "width": 1280,
            "height": 720
          }
        },
        "channelTitle": "Donald Thompson",
        "playlistId": "PLIjhfluhNd98zSpKsf69arDUm1Dqbe0bn",
        "position": 49,
        "resourceId": {
          "kind": "youtube#video",
          "videoId": "wgMj6ZsCiBk"
        },
        "videoOwnerChannelTitle": "Bek Brace",
        "videoOwnerChannelId": "UC7EVSn5inapL20oPSwAwEUg"
      },
      "contentDetails": {
        "videoId": "wgMj6ZsCiBk",
        "videoPublishedAt": "2021-01-24T12:44:53Z"
      }
    },
    {
      "kind": "youtube#playlistItem",
      "etag": "3iRC8ks2M69cVLR2K8Yc4KGgeQg",
      "id": "UExJamhmbHVoTmQ5OHpTcEtzZjY5YXJEVW0xRHFiZTBibi41OURENDc2NEM1MDI5Mjky",
      "snippet": {
        "publishedAt": "2021-08-26T14:12:57Z",
        "channelId": "UCqsUJL5xIWuidR7sIrPLhAw",
        "title": "5 Things You're Doing Wrong When Programming in Python",
        "description": "Python is a great language but I've seen many novices make some very fundamental mistakes and in this video I'm presenting 5 of them which cause immense pain and head scratching. I present the mistakes, their symptoms, as well as how to fix them.\n\n(Thank you Timotej Bernat for compiling timestamps)\n\n0:00 - Intro\n0:22 - Not using if _name_ = \u201c__main__\u201d\n2:12 - Using bare excepts\n4:40 - Not logging errors correctly\n6:57 - Using lists when you should use sets/dicts\n9:02 - Mutable defaults\n\nSOME OF MY OTHER VIDOES:\n\u25cb Explaining RL to a baby: https://www.youtube.com/watch?v=GFIKtFSl1XQ\n\u25cb Reinforcement Learning Hello World: https://www.youtube.com/watch?v=psDlXfbe6ok\n\u25cb Coding on an Android: https://www.youtube.com/watch?v=bNx2dNKeerA\n\u25cb Learning programming language Julia: https://www.youtube.com/watch?v=TNoShNPoEak\n\u25cb Making Python fast: https://www.youtube.com/watch?v=XW32lPcWOxg\n\nTWITTER: https://twitter.com/safijari\n\n#python #programming #mistakes",
        "thumbnails": {
          "default": {
            "url": "https://i.ytimg.com/vi/fMRzuwlqfzs/default.jpg",
            "width": 120,
            "height": 90
          },
          "medium": {
            "url": "https://i.ytimg.com/vi/fMRzuwlqfzs/mqdefault.jpg",
            "width": 320,
            "height": 180
          },
          "high": {
            "url": "https://i.ytimg.com/vi/fMRzuwlqfzs/hqdefault.jpg",
            "width": 480,
            "height": 360
          },
          "standard": {
            "url": "https://i.ytimg.com/vi/fMRzuwlqfzs/sddefault.jpg",
            "width": 640,
            "height": 480
          },
          "maxres": {
            "url": "https://i.ytimg.com/vi/fMRzuwlqfzs/maxresdefault.jpg",
            "width": 1280,
            "height": 720
          }
        },
        "channelTitle": "Donald Thompson",
        "playlistId": "PLIjhfluhNd98zSpKsf69arDUm1Dqbe0bn",
        "position": 50,
        "resourceId": {
          "kind": "youtube#video",
          "videoId": "fMRzuwlqfzs"
        },
        "videoOwnerChannelTitle": "Jack of Some",
        "videoOwnerChannelId": "UCe6ABcJkH_Gso9HJOt4x9fg"
      },
      "contentDetails": {
        "videoId": "fMRzuwlqfzs",
        "videoPublishedAt": "2020-02-05T21:39:29Z"
      }
    },
    {
      "kind": "youtube#playlistItem",
      "etag": "WgFEOqH6-A-zA9ajMg1WJeIh67E",
      "id": "UExJamhmbHVoTmQ5OHpTcEtzZjY5YXJEVW0xRHFiZTBibi42QzdBMzlBQzQzRjQ0QkQy",
      "snippet": {
        "publishedAt": "2021-08-26T02:42:54Z",
        "channelId": "UCqsUJL5xIWuidR7sIrPLhAw",
        "title": "Deep Learning With PyTorch - Full Course",
        "description": "In this course you learn all the fundamentals to get started with PyTorch and Deep Learning.\n\u2b50 Check out Tabnine, the FREE AI-powered code completion tool I use to help me code faster: https://www.tabnine.com/?utm_source=youtube.com&utm_campaign=PythonEngineer *\n\nGet my Free NumPy Handbook:\nhttps://www.python-engineer.com/numpybook\n\nIf you enjoyed this video, please subscribe to the channel: https://www.youtube.com/channel/UCbXgNpp0jedKWcQiULLbDTA?sub_confirmation=1\n\nCode: https://github.com/python-engineer/pytorchTutorial\nPlaylist with single videos: https://www.youtube.com/watch?v=EMXfZB8FVUA&list=PLqnslRFeH2UrcDBWF5mfPGpqQDSta6VK4\n \n~~~~~~~~~~~~~~~ CONNECT ~~~~~~~~~~~~~~~\n\n\ud83d\udda5\ufe0f Website: https://www.python-engineer.com\n\ud83d\udc26 Twitter - https://twitter.com/python_engineer\n\ud83d\udcf8 Instagram - https://www.instagram.com/patloeber\n\ud83e\uddbe Discord: https://discord.gg/FHMg9tKFSN\n\ud83d\udcbb GitHub: https://github.com/python-engineer\n\n~~~~~~~~~~~~~~ SUPPORT ME  ~~~~~~~~~~~~~~\n\n\ud83c\udd7f Patreon - https://www.patreon.com/patrickloeber\n\n#Python #PyTorch\n\nTimeline:\n00:00 - Intro\n01:42 - 1 Installation\n07:30 - 2 Tensor Basics\n26:02 - 3 Autograd\n42:00 - 4 Backpropagation\n55:18 - 5 Gradient Descent\n1:12:53 - 6 Training Pipeline\n1:27:14 - 7 Linear Regression\n1:39:30 - 8 Logistic Regression\n1:57:56 - 9 Dataset and Dataloader\n2:13:28 - 10 Dataset Transforms\n2:24:14 - 11 Softmax and Crossentropy\n2:42:36 - 12 Activation Functions\n2:52:40 - 13 Feed Forward Net\n3:14:18 - 14 CNN\n3:36:30 - 15 Transfer Learning\n3:51:30 - 16 Tensorboard\n4:17:14 - 17 Save & Load Models\n\n----------------------------------------------------------------------------------------------------------\n* This is a sponsored link. By clicking on it you will not have any additional costs, instead you will support me and my project. Thank you so much for the support! \ud83d\ude4f",
        "thumbnails": {
          "default": {
            "url": "https://i.ytimg.com/vi/c36lUUr864M/default.jpg",
            "width": 120,
            "height": 90
          },
          "medium": {
            "url": "https://i.ytimg.com/vi/c36lUUr864M/mqdefault.jpg",
            "width": 320,
            "height": 180
          },
          "high": {
            "url": "https://i.ytimg.com/vi/c36lUUr864M/hqdefault.jpg",
            "width": 480,
            "height": 360
          },
          "standard": {
            "url": "https://i.ytimg.com/vi/c36lUUr864M/sddefault.jpg",
            "width": 640,
            "height": 480
          },
          "maxres": {
            "url": "https://i.ytimg.com/vi/c36lUUr864M/maxresdefault.jpg",
            "width": 1280,
            "height": 720
          }
        },
        "channelTitle": "Donald Thompson",
        "playlistId": "PLIjhfluhNd98zSpKsf69arDUm1Dqbe0bn",
        "position": 51,
        "resourceId": {
          "kind": "youtube#video",
          "videoId": "c36lUUr864M"
        },
        "videoOwnerChannelTitle": "Python Engineer",
        "videoOwnerChannelId": "UCbXgNpp0jedKWcQiULLbDTA"
      },
      "contentDetails": {
        "videoId": "c36lUUr864M",
        "videoPublishedAt": "2021-02-24T15:00:15Z"
      }
    },
    {
      "kind": "youtube#playlistItem",
      "etag": "YVy3NU-Kk22wsuNuxNaTpy_qhwE",
      "id": "UExJamhmbHVoTmQ5OHpTcEtzZjY5YXJEVW0xRHFiZTBibi41NTZEOThBNThFOUVGQkVB",
      "snippet": {
        "publishedAt": "2021-08-25T10:04:42Z",
        "channelId": "UCqsUJL5xIWuidR7sIrPLhAw",
        "title": "Python MongoDB Tutorial using PyMongo",
        "description": "MongoDB is a simple and easy to use database. This tutorial will show you how to use MongoDB with python and the python module pymongo. Pymongo is the offical MongoDB API that allows for you to easily perfor mdatabse operations.\n\nPlease Note: This is simply the basics of MongoDB in python, it is meant to get you started and give you an introduction. MongoDB is capable of much more and I encourage you to read more information from tehe links listed below.\n\n\nMongoDB Website: https://www.mongodb.com/\nPyMongo Docs: https://api.mongodb.com/python/current/api/pymongo/collection.html\nPyMongo Update Operators: https://docs.mongodb.com/manual/reference/operator/update/\n\n\n\u25fe\u25fe\u25fe\u25fe\u25fe\n\ud83d\udcbb Enroll in The Fundamentals of Programming w/ Python \nhttps://tech-with-tim.teachable.com/p...\n\n\ud83d\udcf8 Instagram: https://www.instagram.com/tech_with_tim\n\ud83c\udf0e Website https://techwithtim.net\n\ud83d\udcf1 Twitter: https://twitter.com/TechWithTimm\n\u2b50 Discord: https://discord.gg/pr2k55t\n\ud83d\udcdd LinkedIn: https://www.linkedin.com/in/tim-rusci...\n\ud83d\udcc2 GitHub: https://github.com/techwithtim\n\ud83d\udd0a Podcast: https://anchor.fm/tech-with-tim\n\n\ud83d\udcb5 One-Time Donations: https://www.paypal.com/donate/?token=...\n\ud83d\udcb0 Patreon: https://www.patreon.com/techwithtim\n\u25fe\u25fe\u25fe\u25fe\u25fe\u25fe\n\n\u26a1 Please leave a LIKE and SUBSCRIBE for more content! \u26a1\n\nTags:\n- Pymongo Tutorial\n- Python MongoDB Tutorial\n- MongoDB with Python\n- Pymongo MongoDB\n- MongoDB Tutorial\n- MongoDB\n- How to use MongoDB\n- How to use Pymongo\n\n#mongodb #python #pymongo",
        "thumbnails": {
          "default": {
            "url": "https://i.ytimg.com/vi/rE_bJl2GAY8/default.jpg",
            "width": 120,
            "height": 90
          },
          "medium": {
            "url": "https://i.ytimg.com/vi/rE_bJl2GAY8/mqdefault.jpg",
            "width": 320,
            "height": 180
          },
          "high": {
            "url": "https://i.ytimg.com/vi/rE_bJl2GAY8/hqdefault.jpg",
            "width": 480,
            "height": 360
          },
          "standard": {
            "url": "https://i.ytimg.com/vi/rE_bJl2GAY8/sddefault.jpg",
            "width": 640,
            "height": 480
          },
          "maxres": {
            "url": "https://i.ytimg.com/vi/rE_bJl2GAY8/maxresdefault.jpg",
            "width": 1280,
            "height": 720
          }
        },
        "channelTitle": "Donald Thompson",
        "playlistId": "PLIjhfluhNd98zSpKsf69arDUm1Dqbe0bn",
        "position": 52,
        "resourceId": {
          "kind": "youtube#video",
          "videoId": "rE_bJl2GAY8"
        },
        "videoOwnerChannelTitle": "Tech With Tim",
        "videoOwnerChannelId": "UC4JX40jDee_tINbkjycV4Sg"
      },
      "contentDetails": {
        "videoId": "rE_bJl2GAY8",
        "videoPublishedAt": "2019-06-21T19:00:06Z"
      }
    },
    {
      "kind": "youtube#playlistItem",
      "etag": "rabmNNaHLG5GTKquj11hZbfCOoc",
      "id": "UExJamhmbHVoTmQ5OHpTcEtzZjY5YXJEVW0xRHFiZTBibi5GNjAwN0Y0QTFGOTVDMEMy",
      "snippet": {
        "publishedAt": "2021-08-25T10:04:42Z",
        "channelId": "UCqsUJL5xIWuidR7sIrPLhAw",
        "title": "Connecting to a MongoDB in Flask Using Flask-PyMongo (2019)",
        "description": "If you want to use a MongoDB in Flask, then this video is for you. I will show you how to connect to a MongoDB using Flask and how to create a collection on the fly and add data to it.\n\nGet the cheat sheet here: https://prettyprinted.com/flaskcheatsheet\n\nJoin my free course on the basics of Flask: https://prettyprinted.com/introflask\n\nGet the code here: https://prettyprinted.com/l/yfP\n\n\n\u2b50  Kite is a free AI-powered coding assistant that will help you code faster and smarter. The Kite plugin integrates with all the top editors and IDEs to give you smart completions and documentation while you\u2019re typing. I've been using Kite for VS Code and I love it! https://www.kite.com/get-kite/?utm_medium=referral&utm_source=youtube&utm_campaign=prettyprinted&utm_content=description-only\n\nWeb Development Courses: https://prettyprinted.com\n\nSubscribe: http://www.youtube.com/channel/UC-QDfvrRIDB6F0bIO4I4HkQ?sub_confirmation=\nTwitter: https://twitter.com/pretty_printed\nGithub: https://github.com/prettyprinted",
        "thumbnails": {
          "default": {
            "url": "https://i.ytimg.com/vi/3ZS7LEH_XBg/default.jpg",
            "width": 120,
            "height": 90
          },
          "medium": {
            "url": "https://i.ytimg.com/vi/3ZS7LEH_XBg/mqdefault.jpg",
            "width": 320,
            "height": 180
          },
          "high": {
            "url": "https://i.ytimg.com/vi/3ZS7LEH_XBg/hqdefault.jpg",
            "width": 480,
            "height": 360
          },
          "standard": {
            "url": "https://i.ytimg.com/vi/3ZS7LEH_XBg/sddefault.jpg",
            "width": 640,
            "height": 480
          },
          "maxres": {
            "url": "https://i.ytimg.com/vi/3ZS7LEH_XBg/maxresdefault.jpg",
            "width": 1280,
            "height": 720
          }
        },
        "channelTitle": "Donald Thompson",
        "playlistId": "PLIjhfluhNd98zSpKsf69arDUm1Dqbe0bn",
        "position": 53,
        "resourceId": {
          "kind": "youtube#video",
          "videoId": "3ZS7LEH_XBg"
        },
        "videoOwnerChannelTitle": "Pretty Printed",
        "videoOwnerChannelId": "UC-QDfvrRIDB6F0bIO4I4HkQ"
      },
      "contentDetails": {
        "videoId": "3ZS7LEH_XBg",
        "videoPublishedAt": "2019-05-29T19:00:02Z"
      }
    },
    {
      "kind": "youtube#playlistItem",
      "etag": "oNzscGVoP3etddSZSsYt7eK7O84",
      "id": "UExJamhmbHVoTmQ5OHpTcEtzZjY5YXJEVW0xRHFiZTBibi5CQkEwRDA0MDkwNUM2MDY1",
      "snippet": {
        "publishedAt": "2021-08-25T10:04:42Z",
        "channelId": "UCqsUJL5xIWuidR7sIrPLhAw",
        "title": "MongoDB with Python Crash Course - Tutorial for Beginners",
        "description": "Learn the most popular NoSQL / document database: MongoDB. In this quickstart tutorial, you'll be up and running with MongoDB and Python.\n\n\ud83d\udcbbCode: https://github.com/mikeckennedy/mongodb-quickstart-course\n\n\u2b50\ufe0fCourse Contents\u2b50\ufe0f\n\u2328\ufe0f (0:00:00) Welcome\n\u2328\ufe0f (0:04:33) Intro to MongoDB\n\u2328\ufe0f (0:07:49) How do document DBs work?\n\u2328\ufe0f (0:10:34) Who uses MongoDB\n\u2328\ufe0f (0:13:02) Data modeling\n\u2328\ufe0f (0:16:30) Modeling guidelines\n\u2328\ufe0f (0:22:11) Integration database\n\u2328\ufe0f (0:24:23) Getting demo code\n\u2328\ufe0f (0:30:07) How ODMs work?\n\u2328\ufe0f (0:32:55) Introduction to mongoengine\n\u2328\ufe0f (0:34:01) Demo: Registering connections with MongoEngine\n\u2328\ufe0f (0:37:20) Concept: Registering connections\n\u2328\ufe0f (0:39:14) Demo: Defining mongoengine entities (classes)\n\u2328\ufe0f (0:45:22) Concept: mongoengine entities\n\u2328\ufe0f (0:49:03) Demo: Create a new account\n\u2328\ufe0f (0:56:55) Demo: Robo 3T for viewing and managing data\n\u2328\ufe0f (0:58:18) Demo: Login\n\u2328\ufe0f (1:00:07) Demo: Register a cage\n\u2328\ufe0f (1:10:28) Demo: Add a bookable time as a host\n\u2328\ufe0f (1:16:13) Demo: Managing your snakes as a guest\n\u2328\ufe0f (1:19:18) Demo: Book a cage as a guest\n\u2328\ufe0f (1:33:41) Demo: View your bookings as guest\n\u2328\ufe0f (1:41:29) Demo: View bookings as host\n\u2328\ufe0f (1:46:18) Concept: Inserting documents\n\u2328\ufe0f (1:47:28) Concept: Queries\n\u2328\ufe0f (1:48:09) Concept: Querying subdocuments with mongoengine\n\u2328\ufe0f (1:49:37) Concept: Query using operators\n\u2328\ufe0f (1:50:24) Concept: Updating via whole documents\n\u2328\ufe0f (1:51:46) Concept: Updating via in-place operators\n\u2328\ufe0f (1:54:01) Conclusion \n\nThanks to Michael Kennedy for letting us post his course. Check out his other content:\n\ud83d\udd17 MongoDB for Developers with Python Full Course: https://training.talkpython.fm/courses/explore_mongodb_for_python_developers_course/mongodb-for-python-for-developers-featuring-orm-odm-mongoengine\n\ud83d\udd17 Python Jumpstart by Building 10 Apps: https://training.talkpython.fm/courses/explore_python_jumpstart/python-language-jumpstart-building-10-apps\n\ud83d\udd17 Main course page: https://freemongodbcourse.com/\n\n--\n\nLearn to code for free and get a developer job: https://www.freecodecamp.org\n\nRead hundreds of articles on programming: https://medium.freecodecamp.org\n\nAnd subscribe for new videos on technology: https://youtube.com/subscription_center?add_user=freecodecamp",
        "thumbnails": {
          "default": {
            "url": "https://i.ytimg.com/vi/E-1xI85Zog8/default.jpg",
            "width": 120,
            "height": 90
          },
          "medium": {
            "url": "https://i.ytimg.com/vi/E-1xI85Zog8/mqdefault.jpg",
            "width": 320,
            "height": 180
          },
          "high": {
            "url": "https://i.ytimg.com/vi/E-1xI85Zog8/hqdefault.jpg",
            "width": 480,
            "height": 360
          },
          "standard": {
            "url": "https://i.ytimg.com/vi/E-1xI85Zog8/sddefault.jpg",
            "width": 640,
            "height": 480
          },
          "maxres": {
            "url": "https://i.ytimg.com/vi/E-1xI85Zog8/maxresdefault.jpg",
            "width": 1280,
            "height": 720
          }
        },
        "channelTitle": "Donald Thompson",
        "playlistId": "PLIjhfluhNd98zSpKsf69arDUm1Dqbe0bn",
        "position": 54,
        "resourceId": {
          "kind": "youtube#video",
          "videoId": "E-1xI85Zog8"
        },
        "videoOwnerChannelTitle": "freeCodeCamp.org",
        "videoOwnerChannelId": "UC8butISFwT-Wl7EV0hUK0BQ"
      },
      "contentDetails": {
        "videoId": "E-1xI85Zog8",
        "videoPublishedAt": "2019-02-21T15:53:46Z"
      }
    },
    {
      "kind": "youtube#playlistItem",
      "etag": "JpBN1pgWvUzCnsxpX2eIM5KC06s",
      "id": "UExJamhmbHVoTmQ5OHpTcEtzZjY5YXJEVW0xRHFiZTBibi4wNEU1MTI4NkZEMzVBN0JF",
      "snippet": {
        "publishedAt": "2021-08-25T10:04:42Z",
        "channelId": "UCqsUJL5xIWuidR7sIrPLhAw",
        "title": "Python MongoDB Tutorial | MongoDB With Python using PyMongo | Python and MongoDB | Edureka",
        "description": "\ud83d\udd25Edureka Python Programming Certification Course: https://www.edureka.co/python-programming-certification-training\nThis Edureka video on Python MongoDB Tutorial will give you a brief understanding of working with MongoDB and how it can be connected to database using python. Following pointers are covered in this Python MongoDB Tutorial:\n00:00:00 What is a DataBase \n00:03:15 NoSQL vs SQL\n00:05:44 Introduction to MongoDB \n00:07:07 Installation of MongoDB \n00:08:02 Working with DataBase and Collection \n00:30:08 MongoDB cloud \n00:40:42 Connecting Python to MongoDB database using PyMongo\n\n\n\ud83d\udd25 Full-Stack Web Development Internship Program: http://bit.ly/fs-internship\n\ud83d\udd25 MongoDB Certification Training - https://www.edureka.co/mongodb  \n---------------------------------------------------------------------------------------------------------\n\n\ud83d\udd34Do subscribe to our channel and hit the bell icon to never miss an update from us in the future: https://goo.gl/6ohpTV\n\nInstagram: https://www.instagram.com/edureka_learning/\nFacebook: https://www.facebook.com/edurekaIN/ \nTwitter: https://twitter.com/edurekain \nLinkedIn: https://www.linkedin.com/company/edureka \nTelegram: https://t.me/edurekaupdates\nSlideShare: https://www.slideshare.net/EdurekaIN\nMeetup: https://www.meetup.com/edureka/    \n\n---------------------------------\nHow it Works?\n1. This is a 5 Week Instructor-led Online Course,40 hours of assignment and 20 hours of project work\n2. We have a 24x7 One-on-One LIVE Technical Support to help you with any problems you might face or any clarifications you may require during the course.\n3. At the end of the training, you will be working on a real-time project for which we will provide you a Grade and a Verifiable Certificate!\n\n- - - - - - - - - - - - - - - - -\n\nAbout the Course\n\nEdureka's Python Online Certification Training will make you an expert in Python programming. It will also help you learn Python the Big data way with integration of Machine learning, Pig, Hive and Web Scraping through beautiful soup. During our Python Certification training, our instructors will help you:\n\n1. Master the Basic and Advanced Concepts of Python\n2. Understand Python Scripts on UNIX/Windows, Python Editors and IDEs\n3. Master the Concepts of Sequences and File operations\n4. Learn how to use and create functions, sorting different elements, Lambda function, error handling techniques and Regular expressions ans using modules in Python\n5. Gain expertise in machine learning using Python and build a Real Life Machine Learning application\n6. Understand the supervised and unsupervised learning and concepts of Scikit-Learn\n7. Master the concepts of MapReduce in Hadoop\n8. Learn to write Complex MapReduce programs\n9. Understand what is PIG and HIVE, Streaming feature in Hadoop, MapReduce job running with Python \n10. Implementing a PIG UDF in Python, Writing a HIVE UDF in Python, Pydoop and/Or MRjob Basics\n11. Master the concepts of Web scraping in Python\n12. Work on a Real Life Project on Big Data Analytics using Python and gain Hands-on Project Experience\n\n- - - - - - - - - - - - - - - - - - -\n\nWhy learn Python?\n\nProgrammers love Python because of how fast and easy it is to use. Python cuts development time in half with its simple to read syntax and easy compilation feature. Debugging your programs is a breeze in Python with its built in debugger. Using Python makes Programmers more productive and their programs ultimately better. Python continues to be a favorite option for data scientists who use it for building and using Machine learning applications and other scientific computations.\nPython runs on Windows, Linux/Unix, Mac OS and has been ported to Java and .NET virtual machines. Python is free to use, even for the commercial products, because of its OSI-approved open source license. \nPython has evolved as the most preferred Language for Data Analytics and the increasing search trends on python also indicates that Python is the next \"Big Thing\" and a must for Professionals in the Data Analytics domain. \n\nWho should go for python?\n\nEdureka\u2019s Data Science certification course in Python is a good fit for the below professionals:\n\n\u00b7         Programmers, Developers, Technical Leads, Architects\n\n\u00b7         Developers aspiring to be a \u2018Machine Learning Engineer'\n\n\u00b7         Analytics Managers who are leading a team of analysts\n\n\u00b7         Business Analysts who want to understand Machine Learning (ML) Techniques\n\n\u00b7         Information Architects who want to gain expertise in Predictive Analytics\n\n\u00b7         'Python' professionals who want to design automatic predictive models\n\nFor more information, Please write back to us at sales@edureka.in or call us at IND: 9606058406 / US: 18338555775 (toll free)",
        "thumbnails": {
          "default": {
            "url": "https://i.ytimg.com/vi/t16g4qbkOBA/default.jpg",
            "width": 120,
            "height": 90
          },
          "medium": {
            "url": "https://i.ytimg.com/vi/t16g4qbkOBA/mqdefault.jpg",
            "width": 320,
            "height": 180
          },
          "high": {
            "url": "https://i.ytimg.com/vi/t16g4qbkOBA/hqdefault.jpg",
            "width": 480,
            "height": 360
          },
          "standard": {
            "url": "https://i.ytimg.com/vi/t16g4qbkOBA/sddefault.jpg",
            "width": 640,
            "height": 480
          },
          "maxres": {
            "url": "https://i.ytimg.com/vi/t16g4qbkOBA/maxresdefault.jpg",
            "width": 1280,
            "height": 720
          }
        },
        "channelTitle": "Donald Thompson",
        "playlistId": "PLIjhfluhNd98zSpKsf69arDUm1Dqbe0bn",
        "position": 55,
        "resourceId": {
          "kind": "youtube#video",
          "videoId": "t16g4qbkOBA"
        },
        "videoOwnerChannelTitle": "edureka!",
        "videoOwnerChannelId": "UCkw4JCwteGrDHIsyIIKo4tQ"
      },
      "contentDetails": {
        "videoId": "t16g4qbkOBA",
        "videoPublishedAt": "2021-04-10T12:00:17Z"
      }
    },
    {
      "kind": "youtube#playlistItem",
      "etag": "EqnKzkzSx9ZGcHfQRBKvcQwx4f4",
      "id": "UExJamhmbHVoTmQ5OHpTcEtzZjY5YXJEVW0xRHFiZTBibi4wMTYxQzVBRDI1NEVDQUZE",
      "snippet": {
        "publishedAt": "2021-08-25T10:04:42Z",
        "channelId": "UCqsUJL5xIWuidR7sIrPLhAw",
        "title": "Beginner Flask Project: Create a Todo App With Flask and MongoDB",
        "description": "In this video I will create a todo app in Flask using PyMongo to connect to a Mongo database.\n\nGet the code here: https://prettyprinted.com/l/LTT\n\nWeb Development Courses: https://prettyprinted.com\n\n\n\u2b50  Kite is a free AI-powered coding assistant that will help you code faster and smarter. The Kite plugin integrates with all the top editors and IDEs to give you smart completions and documentation while you\u2019re typing. I've been using Kite for VS Code and I love it! https://www.kite.com/get-kite/?utm_medium=referral&utm_source=youtube&utm_campaign=prettyprinted&utm_content=description-only\n\nSubscribe: http://www.youtube.com/channel/UC-QDfvrRIDB6F0bIO4I4HkQ?sub_confirmation=\nTwitter: https://twitter.com/pretty_printed\nGithub: https://github.com/prettyprinted",
        "thumbnails": {
          "default": {
            "url": "https://i.ytimg.com/vi/xjHEcmjlD-Y/default.jpg",
            "width": 120,
            "height": 90
          },
          "medium": {
            "url": "https://i.ytimg.com/vi/xjHEcmjlD-Y/mqdefault.jpg",
            "width": 320,
            "height": 180
          },
          "high": {
            "url": "https://i.ytimg.com/vi/xjHEcmjlD-Y/hqdefault.jpg",
            "width": 480,
            "height": 360
          },
          "standard": {
            "url": "https://i.ytimg.com/vi/xjHEcmjlD-Y/sddefault.jpg",
            "width": 640,
            "height": 480
          },
          "maxres": {
            "url": "https://i.ytimg.com/vi/xjHEcmjlD-Y/maxresdefault.jpg",
            "width": 1280,
            "height": 720
          }
        },
        "channelTitle": "Donald Thompson",
        "playlistId": "PLIjhfluhNd98zSpKsf69arDUm1Dqbe0bn",
        "position": 56,
        "resourceId": {
          "kind": "youtube#video",
          "videoId": "xjHEcmjlD-Y"
        },
        "videoOwnerChannelTitle": "Pretty Printed",
        "videoOwnerChannelId": "UC-QDfvrRIDB6F0bIO4I4HkQ"
      },
      "contentDetails": {
        "videoId": "xjHEcmjlD-Y",
        "videoPublishedAt": "2020-09-01T17:31:30Z"
      }
    },
    {
      "kind": "youtube#playlistItem",
      "etag": "kRxqx2HEleVUVL4hD2WdF5NV28o",
      "id": "UExJamhmbHVoTmQ5OHpTcEtzZjY5YXJEVW0xRHFiZTBibi4zMUEyMkQwOTk0NTg4MDgw",
      "snippet": {
        "publishedAt": "2021-08-25T10:04:42Z",
        "channelId": "UCqsUJL5xIWuidR7sIrPLhAw",
        "title": "Build a User Login System with Flask and MongoDB - Part 1",
        "description": "Learn how to build a basic user login system using Python, Flask, and MongoDB.\n\nYou can find the CSS and JavaScript files for this project on GitHub: https://github.com/LukePeters/user-login-system-assets\n\nPart 1: You're watching this now!\nPart 2: https://www.youtube.com/watch?v=mISFEwojJmE\nPart 3: https://www.youtube.com/watch?v=tIoiR3N34i8\nPart 4: https://www.youtube.com/watch?v=5oC4-j3WWIk\nHow to Deploy a Flask App: https://youtu.be/w0QDAg85Oow\n\nCheck out the finished application source code on GitHub: https://github.com/LukePeters/User-Login-System-Tutorial\n\nFollow me on Twitter: https://twitter.com/MoonlightLuke\n\n---------------------------------------------------------------\nMY DESK SETUP GEAR\n\n\u2328\ufe0f  Keyboard \u2013 https://amzn.to/3sR3WEK\n\n\ud83d\uddb1  Mouse \u2013 https://amzn.to/3aEBvnc\n\n\ud83d\udda5  Monitor \u2013 https://amzn.to/30pmuzd\n\n\ud83e\uddbe  Monitor Mount/Arm \u2013 https://amzn.to/3sLd3Xu\n\n\ud83c\udfa4  Microphone \u2013 https://amzn.to/3sRfxUb\n\n\ud83e\uddbe  Microphone Arm \u2013 https://amzn.to/3xrxImT\n\n\ud83c\udf9b  Microphone Processor \u2013 https://amzn.to/3gConme\n\n\u26a1\ufe0f  Thunderbolt Dock \u2013 https://amzn.to/3aE8aJC\n\n\ud83d\udd0a  Speakers \u2013 https://amzn.to/3nip0D0\n\n\ud83c\udfa7  Headphones \u2013 https://amzn.to/3xoCVfm\n\n\ud83e\ude91  Chair \u2013 https://amzn.to/3eBIw9I",
        "thumbnails": {
          "default": {
            "url": "https://i.ytimg.com/vi/w1STSSumoVk/default.jpg",
            "width": 120,
            "height": 90
          },
          "medium": {
            "url": "https://i.ytimg.com/vi/w1STSSumoVk/mqdefault.jpg",
            "width": 320,
            "height": 180
          },
          "high": {
            "url": "https://i.ytimg.com/vi/w1STSSumoVk/hqdefault.jpg",
            "width": 480,
            "height": 360
          },
          "standard": {
            "url": "https://i.ytimg.com/vi/w1STSSumoVk/sddefault.jpg",
            "width": 640,
            "height": 480
          },
          "maxres": {
            "url": "https://i.ytimg.com/vi/w1STSSumoVk/maxresdefault.jpg",
            "width": 1280,
            "height": 720
          }
        },
        "channelTitle": "Donald Thompson",
        "playlistId": "PLIjhfluhNd98zSpKsf69arDUm1Dqbe0bn",
        "position": 57,
        "resourceId": {
          "kind": "youtube#video",
          "videoId": "w1STSSumoVk"
        },
        "videoOwnerChannelTitle": "Luke Peters",
        "videoOwnerChannelId": "UC6Oowe4rpbQXo6AmRHmDMYg"
      },
      "contentDetails": {
        "videoId": "w1STSSumoVk",
        "videoPublishedAt": "2020-05-10T06:00:09Z"
      }
    },
    {
      "kind": "youtube#playlistItem",
      "etag": "6mUzgoBSNzCRQC4fMhN07tDigNg",
      "id": "UExJamhmbHVoTmQ5OHpTcEtzZjY5YXJEVW0xRHFiZTBibi42Qzk5MkEzQjVFQjYwRDA4",
      "snippet": {
        "publishedAt": "2021-08-25T09:34:26Z",
        "channelId": "UCqsUJL5xIWuidR7sIrPLhAw",
        "title": "Python for Everybody - Full University Python Course",
        "description": "This Python 3 tutorial course aims to teach everyone the basics of programming computers using Python. The course has no pre-requisites and avoids all but the simplest mathematics. \n\n\ud83d\udd17 Sample Code Zip: https://www.py4e.com/code3.zip\n\ud83d\udd17 Lecture Slides and Handouts: https://www.py4e.com/lectures3/\n\ud83d\udd17 Free Textbook: https://www.py4e.com/book.php\n\ud83d\udd17 Course Website: https://www.py4e.com/\n\n\u2b50\ufe0f Course Contents \u2b50\ufe0f\n\u2328\ufe0f (0:00:00) Why Program?\n\u2328\ufe0f (0:12:21) Why Program? - Hardware Architecture\n\u2328\ufe0f (0:24:24) Python 3 Windows Installation\n\u2328\ufe0f (0:32:34) Python 3 Mac Installation\n\u2328\ufe0f (0:36:41) Why Program? - Python as a Language\n\u2328\ufe0f (0:44:17) Why Program? - What do we say?\n\n\u2328\ufe0f (0:56:55) Variables, Expressions, and Statements\n\u2328\ufe0f (1:06:20) Variables, Expressions, and Statements - Expressions\n\n\u2328\ufe0f (1:26:00) Conditional Execution\n\u2328\ufe0f (1:39:13) Conditional Execution - More Conditional Structures\n\n\u2328\ufe0f (1:52:48) Functions\n\u2328\ufe0f (2:03:02) Functions - Functions of our own\n\n\u2328\ufe0f (2:15:21) Loops and Iteration\n\u2328\ufe0f (2:25:04) Loops and Iteration - Definite Loops\n\u2328\ufe0f (2:31:40) Loops and Iteration - Loop Idioms\n\u2328\ufe0f (2:40:07) Loops and Iteration - More Loop Patterns\n\n\u2328\ufe0f (2:58:39) Strings\n\u2328\ufe0f (3:09:06) Strings - More String Operations\n\n\u2328\ufe0f (3:27:33) Reading Files\n\u2328\ufe0f (3:35:12) Reading Files - Reading Files in Python\n\n\u2328\ufe0f (3:48:42) Python Lists\n\u2328\ufe0f (3:59:27) Python Lists - Loop Operations\n\u2328\ufe0f (4:08:52) Python Lists - Strings vs. Lists\n\u2328\ufe0f (4:16:42) Python Lists - Strings, Files, Lists & the Guardian Pattern\n\n\u2328\ufe0f (4:28:44) Dictionaries\n\u2328\ufe0f (4:36:32) Dictionaries - Counting\n\u2328\ufe0f (4:45:43) Dictionaries - Counting Words in Text\n\u2328\ufe0f (4:58:21) Dictionaries - Counting Word Frequency Using a Dictionary\n\n\u2328\ufe0f (5:22:46) Tuples\n\u2328\ufe0f (5:32:18) Tuples - Sorting\n\u2328\ufe0f (5:44:26) Tuples - Sorting a Dictionary Using Tuples\n\n\u2328\ufe0f (5:54:56) Regular Expressions\n\u2328\ufe0f (6:05:21) Regular Expressions - From Matching to Extracting\n\u2328\ufe0f (6:13:47) Regular Expressions - String Parsing\n\n\u2328\ufe0f (6:22:17) Networked Programs\n\u2328\ufe0f (6:29:45) Networked Programs - Application Protocols\n\u2328\ufe0f (6:38:56) Networked Programs - Write a Web Browser\n\u2328\ufe0f (6:43:10) Networked Programs - Code Example: socket1.py\n\u2328\ufe0f (6:48:58) Networked Programs - Characters and Strings\n\u2328\ufe0f (6:59:57) Networked Programs - urllib\n\u2328\ufe0f (7:05:10) Networked Programs - Code Example: urllib1.py, urlwords.py\n\u2328\ufe0f (7:08:25) Networked Programs - Parsing HTML\n\u2328\ufe0f (7:14:48) Networked Programs - Code Example: urllinks.py\n\n\u2328\ufe0f (7:23:43) Using Web Services\n\u2328\ufe0f (7:26:35) Using Web Services - XML\n\u2328\ufe0f (7:32:02) Using Web Services - Code Example: xml1.py, xml2.py\n\u2328\ufe0f (7:37:40) Using Web Services - XML Schema\n\u2328\ufe0f (7:51:32) Using Web Services - JavaScipt Notation\n\u2328\ufe0f (7:57:45) Using Web Services - Code Example: json1.py, json2.py\n\u2328\ufe0f (8:03:08) Using Web Services - Service Oriented Approach\n\u2328\ufe0f (8:04:44) Using Web Services - Web Services\n\u2328\ufe0f (8:11:33) Using Web Services - Code Example: geojson.py\n\u2328\ufe0f (8:18:49) Using Web Services - API Security & Rate Limiting\n\u2328\ufe0f (8:28:45) Using Web Services - Code Example: twitter1.py, twitter2.py\n\n\u2328\ufe0f (8:48:01) Python Objects\n\u2328\ufe0f (8:58:28) Python Objects - Sample Code\n\u2328\ufe0f (9:06:50) Python Objects - Object Lifecycle\n\u2328\ufe0f (9:13:19) Python Objects - Inheritance\n\n\u2328\ufe0f (9:20:44) Databases\n\u2328\ufe0f (9:35:55) Databases - SQLite Browser\n\u2328\ufe0f (9:45:40) Databases - Code Sample: emaildb.py\n\u2328\ufe0f (9:58:55) Databases - Code Sample: twspider.py\n\u2328\ufe0f (10:08:06) Databases - Database Design\n\u2328\ufe0f (10:16:29) Databases - Representing Relationships\n\u2328\ufe0f (10:20:37) Databases - Relationship Building\n\u2328\ufe0f (10:33:05) Databases - Join Operation\n\u2328\ufe0f (10:43:13) Databases - Code Sample: tracks.py\n\u2328\ufe0f (10:57:45) Databases - Many-to-Many Relationships\n\u2328\ufe0f (11:09:37) Databases - Code Sample: roster.py\n\u2328\ufe0f (11:20:40) Databases - Code Sample: twspider.py\n\n\u2328\ufe0f (11:20:40) Data Visualization\n\u2328\ufe0f (11:48:18) Data Visualization - Code Sample: Geodata\n\u2328\ufe0f (12:01:05) Data Visualization - Page Rank\n\u2328\ufe0f (12:12:14) Data Visualization - Code Sample: Pagerank Spidering\n\u2328\ufe0f (12:29:12) Data Visualization - Code Sample: Pagerank Computation\n\u2328\ufe0f (12:44:17) Data Visualization - Code Sample: Pagerank Visualization\n\u2328\ufe0f (12:44:17) Data Visualization - Mailing List Crawl\n\u2328\ufe0f (12:57:08) Data Visualization - Code Sample: Gmane Data Retrieval\n\u2328\ufe0f (13:13:42) Data Visualization - Code Sample: Gmane Data Modeling\n\u2328\ufe0f (13:26:04) Data Visualization - Code Sample: Gmane Data Visualization\n\nThis course was created by Dr. Charles Severance (a.k.a. Dr. Chuck). He is a Clinical Professor at the University of Michigan School of Information, where he teaches various technology-oriented courses including programming, database design, and Web development.\n\n\"Python for Everybody\" by Dr. Chuck Severance and the University of Michigan is licensed under CC BY.\n\n--\n\nLearn to code for free and get a developer job: https://www.freecodecamp.org\n\nRead hundreds of articles on programming: https://medium.freecodecamp.org\n\nAnd subscribe for new videos on technology every day: https://youtube.com/subscription_center?add_user=freecodecamp",
        "thumbnails": {
          "default": {
            "url": "https://i.ytimg.com/vi/8DvywoWv6fI/default.jpg",
            "width": 120,
            "height": 90
          },
          "medium": {
            "url": "https://i.ytimg.com/vi/8DvywoWv6fI/mqdefault.jpg",
            "width": 320,
            "height": 180
          },
          "high": {
            "url": "https://i.ytimg.com/vi/8DvywoWv6fI/hqdefault.jpg",
            "width": 480,
            "height": 360
          },
          "standard": {
            "url": "https://i.ytimg.com/vi/8DvywoWv6fI/sddefault.jpg",
            "width": 640,
            "height": 480
          },
          "maxres": {
            "url": "https://i.ytimg.com/vi/8DvywoWv6fI/maxresdefault.jpg",
            "width": 1280,
            "height": 720
          }
        },
        "channelTitle": "Donald Thompson",
        "playlistId": "PLIjhfluhNd98zSpKsf69arDUm1Dqbe0bn",
        "position": 58,
        "resourceId": {
          "kind": "youtube#video",
          "videoId": "8DvywoWv6fI"
        },
        "videoOwnerChannelTitle": "freeCodeCamp.org",
        "videoOwnerChannelId": "UC8butISFwT-Wl7EV0hUK0BQ"
      },
      "contentDetails": {
        "videoId": "8DvywoWv6fI",
        "videoPublishedAt": "2019-05-02T12:05:54Z"
      }
    },
    {
      "kind": "youtube#playlistItem",
      "etag": "nnwJDA4z7tz6m5uLvTgiXjdLCaw",
      "id": "UExJamhmbHVoTmQ5OHpTcEtzZjY5YXJEVW0xRHFiZTBibi4zMEQ1MEIyRTFGNzhDQzFB",
      "snippet": {
        "publishedAt": "2021-08-24T23:45:14Z",
        "channelId": "UCqsUJL5xIWuidR7sIrPLhAw",
        "title": "Write Python Code Properly!",
        "description": "Welcome back to another video! In this video, I am going to be showing you the proper way to write Python code. What I mean is that I will be going over the proper python conventions and the most important parts of the python style guide known as PEP8. There is a lot in PEP8 but I'll only go over the most common mistakes made.\n\n\ud83d\udcbb Thanks to HarperDB for sponsoring this video! Spin up a powerful free HarperDB instance here: https://studio.harperdb.io/sign-up?utm_source=techwithtim\n\n\ud83d\udcc4 Resources \ud83d\udcc4\nPython PEP8 Style Guide: https://www.python.org/dev/peps/pep-0008/\n\n\u2b50\ufe0f Timestamps \u2b50\ufe0f\n00:00 | Write Proper Code!\n02:27 | PEP8 Guideline\n03:00 | Installing An Auto Formatter\n05:29 | General PEP8 Guidelines \n07:01 | Naming Conventions\n10:55 | Method Parameter Naming\n12:01 | Function And Class Spacing\n13:33 | Imports\n15:42 | Single Or Double Quotes\n17:16 | Whitespaces\n21:02 | In-Line Comments\n22:12 | is None or == None\n24:05 | Try and Except\n24:46 | String Prefix and Suffix\n\n\u25fc\ufe0f\u25fc\ufe0f\u25fc\ufe0f\u25fc\ufe0f\u25fc\ufe0f\u25fc\ufe0f\u25fc\ufe0f\u25fc\ufe0f\u25fc\ufe0f\u25fc\ufe0f\u25fc\ufe0f\u25fc\ufe0f\u25fc\ufe0f\u25fc\ufe0f\n\ud83d\udcb0 Courses & Merch \ud83d\udcb0 \n\ud83d\udcbb The Fundamentals of Programming w/ Python: https://tech-with-tim.teachable.com/p/the-fundamentals-of-programming-with-python \n\ud83d\udc55 Merchandise: https://teespring.com/stores/tech-with-tim-merch-shop \n\n\ud83d\udd17 Social Medias \ud83d\udd17 \n\ud83d\udcf8 Instagram: https://www.instagram.com/tech_with_tim \n\ud83d\udcf1 Twitter: https://twitter.com/TechWithTimm \n\u2b50 Discord: https://discord.gg/twt\n\ud83d\udcdd LinkedIn: https://www.linkedin.com/in/tim-ruscica-82631b179/ \n\ud83c\udf0e Website: https://techwithtim.net \n\ud83d\udcc2 GitHub: https://github.com/techwithtim \n\ud83d\udd0a Podcast: https://anchor.fm/tech-with-tim \n\n\ud83c\udfac My YouTube Gear \ud83c\udfac \n\ud83c\udfa5 Main Camera (EOS Canon 90D): https://amzn.to/3cY23y9 \n\ud83c\udfa5 Secondary Camera (Panasonic Lumix G7): https://amzn.to/3fl2iEV \n\ud83d\udcf9 Main Lens (EFS 24mm f/2.8): https://amzn.to/2Yuol5r \n\ud83d\udd79 Tripod: https://amzn.to/3hpSprv \n\ud83c\udfa4 Main Microphone (Rode NT1): https://amzn.to/2HrZxXc\n\ud83c\udfa4 Secondary Microphone (Synco Wireless Lapel System): https://amzn.to/3e07Swl \n\ud83c\udfa4 Third Microphone (Rode NTG4+): https://amzn.to/3oi0v8Z\n\u2600\ufe0f Lights: https://amzn.to/2ApeiXr \n\u2328 Keyboard (Daskeyboard 4Q): https://amzn.to/2YpN5vm \n\ud83d\uddb1 Mouse (Logitech MX Master): https://amzn.to/2HsmRDN\n\ud83d\udcf8 Webcam (Logitech 1080p Pro): https://amzn.to/2B2IXcQ \n\ud83d\udce2 Speaker (Beats Pill): https://amzn.to/2XYc5ef \n\ud83c\udfa7 Headphones (Bose Quiet Comfort 35): https://amzn.to/2MWbl3e \n\ud83c\udf1e Lamp (BenQ E-reading Lamp): https://amzn.to/3e0UCr8 \n\ud83c\udf1e Secondary Lamp (BenQ Screenbar Plus): https://amzn.to/30Dtafi \n\ud83d\udcbb Monitor (BenQ EX2780Q): https://amzn.to/2HsmUPZ\n\ud83d\udcbb Monitor (LG Ultrawide 34WN750): https://amzn.to/3dSD7tS\n\ud83c\udf99 Mic Boom Arm (Rode PSA 1): https://amzn.to/30EZw9m \n\ud83c\udf9a Audio Interface (Focusrite Scarlet 4i4): https://amzn.to/2TjXsih\n\n\ud83d\udcb8 Donations \ud83d\udcb8 \n\ud83d\udcb5 One-Time Donations: https://www.paypal.com/donate?hosted_button_id=CU9FV329ADNT8\n\ud83d\udcb0 Patreon: https://www.patreon.com/techwithtim\n\u25fc\ufe0f\u25fc\ufe0f\u25fc\ufe0f\u25fc\ufe0f\u25fc\ufe0f\u25fc\ufe0f\u25fc\ufe0f\u25fc\ufe0f\u25fc\ufe0f\u25fc\ufe0f\u25fc\ufe0f\u25fc\ufe0f\u25fc\ufe0f\u25fc\ufe0f\n\n\u2b50\ufe0f Tags \u2b50\ufe0f\n-Tech With Tim\n- Python\n- Code\n- Write Code Properly\n- Pep8\n- HarperD8\n\n\u2b50\ufe0f Hashtags \u2b50\ufe0f\n#TechWithTim #Python",
        "thumbnails": {
          "default": {
            "url": "https://i.ytimg.com/vi/D4_s3q038I0/default.jpg",
            "width": 120,
            "height": 90
          },
          "medium": {
            "url": "https://i.ytimg.com/vi/D4_s3q038I0/mqdefault.jpg",
            "width": 320,
            "height": 180
          },
          "high": {
            "url": "https://i.ytimg.com/vi/D4_s3q038I0/hqdefault.jpg",
            "width": 480,
            "height": 360
          }
        },
        "channelTitle": "Donald Thompson",
        "playlistId": "PLIjhfluhNd98zSpKsf69arDUm1Dqbe0bn",
        "position": 59,
        "resourceId": {
          "kind": "youtube#video",
          "videoId": "D4_s3q038I0"
        },
        "videoOwnerChannelTitle": "Tech With Tim",
        "videoOwnerChannelId": "UC4JX40jDee_tINbkjycV4Sg"
      },
      "contentDetails": {
        "videoId": "D4_s3q038I0",
        "videoPublishedAt": "2021-08-24T15:00:04Z"
      }
    },
    {
      "kind": "youtube#playlistItem",
      "etag": "ibAe2NsmaVDHuL1mYSVHuoBCM64",
      "id": "UExJamhmbHVoTmQ5OHpTcEtzZjY5YXJEVW0xRHFiZTBibi4xMzgwMzBERjQ4NjEzNUE5",
      "snippet": {
        "publishedAt": "2021-08-24T13:37:32Z",
        "channelId": "UCqsUJL5xIWuidR7sIrPLhAw",
        "title": "Raymond Hettinger - Dataclasses:  The code generator to end all code generators - PyCon 2018",
        "description": "Speaker: Raymond Hettinger\n\nThe PEP 557 dataclasses module is available in starting in Python 3.7.   It will become an essential part of every Python programmer's toolkit.  This talk shows what problem the module solves, explains its key design decisions, and provides practical examples of how to put it to work.\n\nDataclasses are shown to be the next step in a progression of data aggregation tools: tuple, dict, simple class, bunch recipe, named tuples, records, attrs, and then dataclasses. Each builds upon the one that came before, adding expressiveness at the expense of complexity.\n\nDataclasses are unique in that they let you selectively turn-on or turn-off its various capabilities and it lets the user choose the underlying data store (either instance dictionary, instance slots, or an inherited base class).\n\nDataclasses and typing.NamedTuple both use variable annotations which were new in Python 3.6.\n\n\n\n\n\n\n\n\n\nSlides can be found at: https://speakerdeck.com/pycon2018 and https://github.com/PyCon/2018-slides",
        "thumbnails": {
          "default": {
            "url": "https://i.ytimg.com/vi/T-TwcmT6Rcw/default.jpg",
            "width": 120,
            "height": 90
          },
          "medium": {
            "url": "https://i.ytimg.com/vi/T-TwcmT6Rcw/mqdefault.jpg",
            "width": 320,
            "height": 180
          },
          "high": {
            "url": "https://i.ytimg.com/vi/T-TwcmT6Rcw/hqdefault.jpg",
            "width": 480,
            "height": 360
          },
          "standard": {
            "url": "https://i.ytimg.com/vi/T-TwcmT6Rcw/sddefault.jpg",
            "width": 640,
            "height": 480
          },
          "maxres": {
            "url": "https://i.ytimg.com/vi/T-TwcmT6Rcw/maxresdefault.jpg",
            "width": 1280,
            "height": 720
          }
        },
        "channelTitle": "Donald Thompson",
        "playlistId": "PLIjhfluhNd98zSpKsf69arDUm1Dqbe0bn",
        "position": 60,
        "resourceId": {
          "kind": "youtube#video",
          "videoId": "T-TwcmT6Rcw"
        },
        "videoOwnerChannelTitle": "PyCon 2018",
        "videoOwnerChannelId": "UCsX05-2sVSH7Nx3zuk3NYuQ"
      },
      "contentDetails": {
        "videoId": "T-TwcmT6Rcw",
        "videoPublishedAt": "2018-05-13T17:28:30Z"
      }
    },
    {
      "kind": "youtube#playlistItem",
      "etag": "8wliD4DaWAM5N3a80v68BfA_jm4",
      "id": "UExJamhmbHVoTmQ5OHpTcEtzZjY5YXJEVW0xRHFiZTBibi44QzVGQUU2QjE2NDgxM0M4",
      "snippet": {
        "publishedAt": "2021-08-24T13:37:26Z",
        "channelId": "UCqsUJL5xIWuidR7sIrPLhAw",
        "title": "Python Asynchronous Programming - AsyncIO & Async/Await",
        "description": "In today's video, I'll be talking to you about asynchronous programming in python. This Python Async tutorial will cover the 'async' and 'await' keyword, coroutines, futures and tasks, and some basic features from the asyncio module in Python. This video is for intermediate programmers, and it's recommended you have Python 3.7 or above. \n\n\ud83d\udcbb AlgoExpert is the coding interview prep platform that I used to ace my Microsoft and Shopify interviews. Check it out and get a discount on the platform using the code \"techwithtim\" https://algoexpert.io/techwithtim \n\n\ud83d\udcc4 Documentation\nAsyncIO: https://docs.python.org/3/library/asyncio.html\n\n\u2b50\ufe0f Timestamps \u2b50\ufe0f\n01:43 - Synchronous vs Asynchronous\n04:30 - Coroutines\n07:35 - Async Event-Loop\n08:58 - Async/Await Keywords\n12:12 - Tasks\n17:00 - Async Example\n\n\u25fc\ufe0f\u25fc\ufe0f\u25fc\ufe0f\u25fc\ufe0f\u25fc\ufe0f\u25fc\ufe0f\u25fc\ufe0f\u25fc\ufe0f\u25fc\ufe0f\u25fc\ufe0f\u25fc\ufe0f\u25fc\ufe0f\u25fc\ufe0f\u25fc\ufe0f\n\ud83d\udcb0 Courses & Merch \ud83d\udcb0 \n\ud83d\udcbb The Fundamentals of Programming w/ Python: https://tech-with-tim.teachable.com/p/the-fundamentals-of-programming-with-python \n\ud83d\udc55 Merchandise: https://teespring.com/stores/tech-with-tim-merch-shop \n\n\ud83d\udd17 Social Medias \ud83d\udd17 \n\ud83d\udcf8 Instagram: https://www.instagram.com/tech_with_tim \n\ud83d\udcf1 Twitter: https://twitter.com/TechWithTimm \n\u2b50 Discord: https://discord.gg/twt\n\ud83d\udcdd LinkedIn: https://www.linkedin.com/in/tim-ruscica-82631b179/ \n\ud83c\udf0e Website: https://techwithtim.net \n\ud83d\udcc2 GitHub: https://github.com/techwithtim \n\ud83d\udd0a Podcast: https://anchor.fm/tech-with-tim \n\n\ud83c\udfac My YouTube Gear \ud83c\udfac \n\ud83c\udfa5 Main Camera (EOS Canon 90D): https://amzn.to/3cY23y9 \n\ud83c\udfa5 Secondary Camera (Panasonic Lumix G7): https://amzn.to/3fl2iEV \n\ud83d\udcf9 Main Lens (EFS 24mm f/2.8): https://amzn.to/2Yuol5r \n\ud83d\udd79 Tripod: https://amzn.to/3hpSprv \n\ud83c\udfa4 Main Microphone (Rode NT1): https://amzn.to/2HrZxXc\n\ud83c\udfa4 Secondary Microphone (Synco Wireless Lapel System): https://amzn.to/3e07Swl \n\ud83c\udfa4 Third Microphone (Rode NTG4+): https://amzn.to/3oi0v8Z\n\u2600\ufe0f Lights: https://amzn.to/2ApeiXr \n\u2328 Keyboard (Daskeyboard 4Q): https://amzn.to/2YpN5vm \n\ud83d\uddb1 Mouse (Logitech MX Master): https://amzn.to/2HsmRDN\n\ud83d\udcf8 Webcam (Logitech 1080p Pro): https://amzn.to/2B2IXcQ \n\ud83d\udce2 Speaker (Beats Pill): https://amzn.to/2XYc5ef \n\ud83c\udfa7 Headphones (Bose Quiet Comfort 35): https://amzn.to/2MWbl3e \n\ud83c\udf1e Lamp (BenQ E-reading Lamp): https://amzn.to/3e0UCr8 \n\ud83c\udf1e Secondary Lamp (BenQ Screenbar Plus): https://amzn.to/30Dtafi \n\ud83d\udcbb Monitor (BenQ EX2780Q): https://amzn.to/2HsmUPZ\n\ud83d\udcbb Monitor (LG Ultrawide 34WN750): https://amzn.to/3dSD7tS\n\ud83c\udf99 Mic Boom Arm (Rode PSA 1): https://amzn.to/30EZw9m \n\ud83c\udf9a Audio Interface (Focusrite Scarlet 4i4): https://amzn.to/2TjXsih\n\n\ud83d\udcb8 Donations \ud83d\udcb8 \n\ud83d\udcb5 One-Time Donations: https://www.paypal.com/donate?hosted_button_id=CU9FV329ADNT8\n\ud83d\udcb0 Patreon: https://www.patreon.com/techwithtim\n\u25fc\ufe0f\u25fc\ufe0f\u25fc\ufe0f\u25fc\ufe0f\u25fc\ufe0f\u25fc\ufe0f\u25fc\ufe0f\u25fc\ufe0f\u25fc\ufe0f\u25fc\ufe0f\u25fc\ufe0f\u25fc\ufe0f\u25fc\ufe0f\u25fc\ufe0f\n\n\u2b50\ufe0f Tags \u2b50\ufe0f\n- Asynchronous programming\n- Coroutines\n- Futures in Python\n- Tasks in Python\n- Python tutorial\n- Tech With Tim\n\n\u2b50\ufe0f Hashtags \u2b50\ufe0f\n#Programming #Asynchronous #TechWithTim",
        "thumbnails": {
          "default": {
            "url": "https://i.ytimg.com/vi/t5Bo1Je9EmE/default.jpg",
            "width": 120,
            "height": 90
          },
          "medium": {
            "url": "https://i.ytimg.com/vi/t5Bo1Je9EmE/mqdefault.jpg",
            "width": 320,
            "height": 180
          },
          "high": {
            "url": "https://i.ytimg.com/vi/t5Bo1Je9EmE/hqdefault.jpg",
            "width": 480,
            "height": 360
          },
          "standard": {
            "url": "https://i.ytimg.com/vi/t5Bo1Je9EmE/sddefault.jpg",
            "width": 640,
            "height": 480
          },
          "maxres": {
            "url": "https://i.ytimg.com/vi/t5Bo1Je9EmE/maxresdefault.jpg",
            "width": 1280,
            "height": 720
          }
        },
        "channelTitle": "Donald Thompson",
        "playlistId": "PLIjhfluhNd98zSpKsf69arDUm1Dqbe0bn",
        "position": 61,
        "resourceId": {
          "kind": "youtube#video",
          "videoId": "t5Bo1Je9EmE"
        },
        "videoOwnerChannelTitle": "Tech With Tim",
        "videoOwnerChannelId": "UC4JX40jDee_tINbkjycV4Sg"
      },
      "contentDetails": {
        "videoId": "t5Bo1Je9EmE",
        "videoPublishedAt": "2021-04-03T15:00:19Z"
      }
    },
    {
      "kind": "youtube#playlistItem",
      "etag": "99veYJsCpUXV5UOn9ro_DQ675K4",
      "id": "UExJamhmbHVoTmQ5OHpTcEtzZjY5YXJEVW0xRHFiZTBibi5ENjI1QUI0MDI5NEQzODFE",
      "snippet": {
        "publishedAt": "2021-08-24T13:37:18Z",
        "channelId": "UCqsUJL5xIWuidR7sIrPLhAw",
        "title": "Diagnose slow Python code. (Feat. async/await)",
        "description": "How do you make your Python code faster? The first step is measuring what part is actually slow. We do this using a profiler, such a cProfile. The profiler measures how much time all your function calls take and then you can print or save these statistics to determine where you should spend your time improving. Take your profiling to the next level using a graphical tool like snakeviz to analyze the stats.\n\nI go through a simple example where I go from start to finish diagnosing and fixing some slow code using these techniques. Here we ended up using async/await to fix the problem, but the tools in this video can be used to diagnose all sorts of code problems.\n\n\u2015 mCoding with James Murphy (https://mcoding.io)\n\nSource code: https://github.com/mCodingLLC/VideosSampleCode\ncProfile docs: https://docs.python.org/3/library/profile.html\nsnakeviz: https://jiffyclub.github.io/snakeviz/\nhttpx: https://www.python-httpx.org/\n\nSUPPORT ME \u2b50\n---------------------------------------------------\nSign up on Patreon to get your donor role and early access to videos!\nhttps://patreon.com/mCoding\n\nFeeling generous but don't have a Patreon? Donate via PayPal! (No sign up needed.)\nhttps://www.paypal.com/donate/?hosted_button_id=VJY5SLZ8BJHEE\n\nWant to donate crypto? Check out the rest of my supported donations on my website!\nhttps://mcoding.io/donate\n\nTop patrons and donors:\nJohn M, Laura M, Pieter G, Vahnekie, Sigmanificient\n\nBE ACTIVE IN MY COMMUNITY \ud83d\ude04\n---------------------------------------------------\nDiscord: https://discord.gg/Ye9yJtZQuN\nGithub: https://github.com/mCodingLLC/\nReddit: https://www.reddit.com/r/mCoding/\nFacebook: https://www.facebook.com/james.mcoding\n\nCHAPTERS\n---------------------------------------------------\n0:00 Intro\n0:45 Example slow code\n2:34 Basic profiling\n4:27 Snakeviz visualizations\n6:04 Speeding up the code\n9:04 Improved profile",
        "thumbnails": {
          "default": {
            "url": "https://i.ytimg.com/vi/m_a0fN48Alw/default.jpg",
            "width": 120,
            "height": 90
          },
          "medium": {
            "url": "https://i.ytimg.com/vi/m_a0fN48Alw/mqdefault.jpg",
            "width": 320,
            "height": 180
          },
          "high": {
            "url": "https://i.ytimg.com/vi/m_a0fN48Alw/hqdefault.jpg",
            "width": 480,
            "height": 360
          }
        },
        "channelTitle": "Donald Thompson",
        "playlistId": "PLIjhfluhNd98zSpKsf69arDUm1Dqbe0bn",
        "position": 62,
        "resourceId": {
          "kind": "youtube#video",
          "videoId": "m_a0fN48Alw"
        },
        "videoOwnerChannelTitle": "mCoding",
        "videoOwnerChannelId": "UCaiL2GDNpLYH6Wokkk1VNcg"
      },
      "contentDetails": {
        "videoId": "m_a0fN48Alw",
        "videoPublishedAt": "2021-06-26T13:59:37Z"
      }
    },
    {
      "kind": "youtube#playlistItem",
      "etag": "z0rMsA-ovu2FAOr0h5jpYI0t_IY",
      "id": "UExJamhmbHVoTmQ5OHpTcEtzZjY5YXJEVW0xRHFiZTBibi41RTNBREYwMkI5QzU3RkY2",
      "snippet": {
        "publishedAt": "2021-08-21T02:32:13Z",
        "channelId": "UCqsUJL5xIWuidR7sIrPLhAw",
        "title": "Learn Python by Building Five Games - Full Course",
        "description": "Learn Python in this full tutorial course for beginners. This course takes a project-based approach. We have collected five great Python game tutorials together so you can learn Python while building five games. If you learn best by doing, this is the course for you. \n\n\ud83c\udfa5 Learn Python syntax in our other Python course: https://www.youtube.com/watch?v=rfscVS0vtbw\n\ud83c\udfa5 Learn Pygame: https://www.youtube.com/watch?v=FfWpgLFMI7w\n\n\u2b50\ufe0f Course Contents \u2b50\ufe0f\n\n\u2328\ufe0f (0:01:18) Pong\n\ud83d\udd08 Sound file: http://christianthompson.com/sites/default/files/Pong/bounce.wav \n\ud83d\udcbb Code: http://christianthompson.com/sites/default/files/Pong/pong.py\n\ud83d\udd17 Tutorial from Christian Thompson. Channel: https://www.youtube.com/channel/UC2vm-0XX5RkWCXWwtBZGOXg \n\n\u2328\ufe0f (0:45:36) Snake\n\ud83d\udcbb Code: https://pastebin.com/embed_js/jB6k06hG\n\ud83d\udd17 Tutorial from Tech with Tim. Channel: https://www.youtube.com/channel/UC4JX40jDee_tINbkjycV4Sg\n\n\u2328\ufe0f (1:34:57) Connect Four\n\ud83d\udcbb Code: https://github.com/KeithGalli/Connect4-Python\n\ud83d\udd17 Tutorial from Keith Galli. Channel: https://www.youtube.com/channel/UC4JX40jDee_tINbkjycV4Sg\n\n\u2328\ufe0f (2:42:36) Tetris\n\ud83d\udcbb Starter File: https://pastebin.com/embed_js/VztMLjCc\n\ud83d\udcbb Full Code: https://pastebin.com/embed_js/yaWTeF6y  \n\ud83d\udd17 Tutorial from Tech with Tim. Channel: https://www.youtube.com/channel/UC4JX40jDee_tINbkjycV4Sg\n\n\u2328\ufe0f (4:22:12) Online Multiplayer Game\n\ud83d\udcbb Code: https://techwithtim.net/wp-content/uploads/2019/03/networkTutrorial.zip\n\ud83d\udd17 Tutorial from Tech with Tim. Channel: https://www.youtube.com/channel/UC4JX40jDee_tINbkjycV4Sg\n\n--\n\nLearn to code for free and get a developer job: https://www.freecodecamp.org\n\nRead hundreds of articles on programming: https://freecodecamp.org/news\n\nAnd subscribe for new videos on technology: https://youtube.com/subscription_center?add_user=freecodecamp",
        "thumbnails": {
          "default": {
            "url": "https://i.ytimg.com/vi/XGf2GcyHPhc/default.jpg",
            "width": 120,
            "height": 90
          },
          "medium": {
            "url": "https://i.ytimg.com/vi/XGf2GcyHPhc/mqdefault.jpg",
            "width": 320,
            "height": 180
          },
          "high": {
            "url": "https://i.ytimg.com/vi/XGf2GcyHPhc/hqdefault.jpg",
            "width": 480,
            "height": 360
          },
          "standard": {
            "url": "https://i.ytimg.com/vi/XGf2GcyHPhc/sddefault.jpg",
            "width": 640,
            "height": 480
          },
          "maxres": {
            "url": "https://i.ytimg.com/vi/XGf2GcyHPhc/maxresdefault.jpg",
            "width": 1280,
            "height": 720
          }
        },
        "channelTitle": "Donald Thompson",
        "playlistId": "PLIjhfluhNd98zSpKsf69arDUm1Dqbe0bn",
        "position": 63,
        "resourceId": {
          "kind": "youtube#video",
          "videoId": "XGf2GcyHPhc"
        },
        "videoOwnerChannelTitle": "freeCodeCamp.org",
        "videoOwnerChannelId": "UC8butISFwT-Wl7EV0hUK0BQ"
      },
      "contentDetails": {
        "videoId": "XGf2GcyHPhc",
        "videoPublishedAt": "2019-11-06T18:00:24Z"
      }
    },
    {
      "kind": "youtube#playlistItem",
      "etag": "__MyoYCoVKsYuE4-xqTyZ1NlOCY",
      "id": "UExJamhmbHVoTmQ5OHpTcEtzZjY5YXJEVW0xRHFiZTBibi40QzRDOEU0QUYwNUIxN0M1",
      "snippet": {
        "publishedAt": "2021-08-20T20:19:40Z",
        "channelId": "UCqsUJL5xIWuidR7sIrPLhAw",
        "title": "The ultimate introduction to Pygame",
        "description": "In this tutorial you will learn to create a runner game in Python with Pygame. The game itself isn't the goal of the video. Instead, I will use the game to go through every crucial aspect of Pygame that you need to know to get started. By the end of the video, you should know all the basics to start basically any 2D game, starting from Pong and ending with the first generation of Doom and Wolfenstein \n\nLink to the project folder: https://github.com/clear-code-projects/UltimatePygameIntro\n\nLink to the background music: https://opengameart.org/content/5-chiptunes-action \nLink to the artwork: https://opengameart.org/content/platformer-art-pixel-edition\n\nTimestamps \n0:00:00 intro\n0:01:06 How games work\n0:05:06 What Pygame does\n0:08:08 Creating a blank window (+ clock)\n0:22:07 Displaying images (with surfaces)\n0:42:22 Basic animations\n0:51:28 Rectangles\n1:03:47 Collisions with rectangles (+using the mouse)\n1:15:38 Drawing with rectangles (+colors)\n1:29:35 The player character 1: Keyboard input\n1:35:58 The player character 2: Jumping & Gravity\n1:44:23 The player character 3: Creating a floor\n1:48:17 Creating different game states \n1:56:03 Displaying the score (+measuring time)\n2:06:15 Transforming surfaces \n2:23:50 Better enemy spawn logic (with timers)\n2:49:33 Animating the player, the snail and the fly\n3:09:01 Using the sprite class (OOP in Pygame)\n3:42:57 Adding music",
        "thumbnails": {
          "default": {
            "url": "https://i.ytimg.com/vi/AY9MnQ4x3zk/default.jpg",
            "width": 120,
            "height": 90
          },
          "medium": {
            "url": "https://i.ytimg.com/vi/AY9MnQ4x3zk/mqdefault.jpg",
            "width": 320,
            "height": 180
          },
          "high": {
            "url": "https://i.ytimg.com/vi/AY9MnQ4x3zk/hqdefault.jpg",
            "width": 480,
            "height": 360
          },
          "standard": {
            "url": "https://i.ytimg.com/vi/AY9MnQ4x3zk/sddefault.jpg",
            "width": 640,
            "height": 480
          },
          "maxres": {
            "url": "https://i.ytimg.com/vi/AY9MnQ4x3zk/maxresdefault.jpg",
            "width": 1280,
            "height": 720
          }
        },
        "channelTitle": "Donald Thompson",
        "playlistId": "PLIjhfluhNd98zSpKsf69arDUm1Dqbe0bn",
        "position": 64,
        "resourceId": {
          "kind": "youtube#video",
          "videoId": "AY9MnQ4x3zk"
        },
        "videoOwnerChannelTitle": "Clear Code",
        "videoOwnerChannelId": "UCznj32AM2r98hZfTxrRo9bQ"
      },
      "contentDetails": {
        "videoId": "AY9MnQ4x3zk",
        "videoPublishedAt": "2021-07-11T07:20:41Z"
      }
    },
    {
      "kind": "youtube#playlistItem",
      "etag": "XcS3_CbaHisHBFPXQwDzydL5UBw",
      "id": "UExJamhmbHVoTmQ5OHpTcEtzZjY5YXJEVW0xRHFiZTBibi4yQUJFNUVCMzVDNjcxRTlF",
      "snippet": {
        "publishedAt": "2021-08-20T07:46:49Z",
        "channelId": "UCqsUJL5xIWuidR7sIrPLhAw",
        "title": "Python GUI Development With PySimpleGUI",
        "description": "Creating a simple graphical user interface (GUI) that works across multiple platforms can be complicated. But it doesn't have to be that way. You can use Python and the PySimpleGUI package to create nice-looking user interfaces that you and your users will enjoy! PySimpleGUI is a new Python GUI library that has been gaining a lot of interest recently.\n\nClick here to learn more: https://realpython.com/courses/simplify-gui-dev-pysimplegui/",
        "thumbnails": {
          "default": {
            "url": "https://i.ytimg.com/vi/-_z2RPAH0Qk/default.jpg",
            "width": 120,
            "height": 90
          },
          "medium": {
            "url": "https://i.ytimg.com/vi/-_z2RPAH0Qk/mqdefault.jpg",
            "width": 320,
            "height": 180
          },
          "high": {
            "url": "https://i.ytimg.com/vi/-_z2RPAH0Qk/hqdefault.jpg",
            "width": 480,
            "height": 360
          },
          "standard": {
            "url": "https://i.ytimg.com/vi/-_z2RPAH0Qk/sddefault.jpg",
            "width": 640,
            "height": 480
          },
          "maxres": {
            "url": "https://i.ytimg.com/vi/-_z2RPAH0Qk/maxresdefault.jpg",
            "width": 1280,
            "height": 720
          }
        },
        "channelTitle": "Donald Thompson",
        "playlistId": "PLIjhfluhNd98zSpKsf69arDUm1Dqbe0bn",
        "position": 65,
        "resourceId": {
          "kind": "youtube#video",
          "videoId": "-_z2RPAH0Qk"
        },
        "videoOwnerChannelTitle": "Real Python",
        "videoOwnerChannelId": "UCI0vQvr9aFn27yR6Ej6n5UA"
      },
      "contentDetails": {
        "videoId": "-_z2RPAH0Qk",
        "videoPublishedAt": "2021-05-06T17:00:00Z"
      }
    },
    {
      "kind": "youtube#playlistItem",
      "etag": "LZdPZPZMG3V4-GozypMZxSdAObY",
      "id": "UExJamhmbHVoTmQ5OHpTcEtzZjY5YXJEVW0xRHFiZTBibi4yQjZFRkExQjFGODk3RUFD",
      "snippet": {
        "publishedAt": "2021-08-16T12:41:51Z",
        "channelId": "UCqsUJL5xIWuidR7sIrPLhAw",
        "title": "The Magic Of Python",
        "description": "Welcome to another YouTube video! In this video, I'll be sharing some advanced concepts in Python. This isn't a tutorial video showing how to do things in Python, but rather show what you can do once you've reached an \"expert\" level of a programming language.\n\n \ud83d\udcbb Sublime Merge is a powerful Git client from the creators of Sublime Text. It\u2019s free to evaluate, with no time limits or restrictions. Get started here:\nhttps://www.sublimemerge.com?promo=TechWithTim\n\n\ud83d\udcc4 Resources \ud83d\udcc4\nExpert Python Tutorial Series: https://www.youtube.com/watch?v=mclfteWlT2Q&list=PLzMcBGfZo4-kwmIcMDdXSuy_wSqtU-xDP&t=0s\nMetaClasses: https://www.youtube.com/watch?v=NAQEj-c2CI8&list=PLzMcBGfZo4-kwmIcMDdXSuy_wSqtU-xDP&index=3\n\n\u2b50\ufe0f Timestamps \u2b50\ufe0f\n00:00 | Introduction\n02:32 | The Magic Of Python\n13:52 | Use Cases & MetaClass Introduction\n\n\u25fc\ufe0f\u25fc\ufe0f\u25fc\ufe0f\u25fc\ufe0f\u25fc\ufe0f\u25fc\ufe0f\u25fc\ufe0f\u25fc\ufe0f\u25fc\ufe0f\u25fc\ufe0f\u25fc\ufe0f\u25fc\ufe0f\u25fc\ufe0f\u25fc\ufe0f\n\ud83d\udcb0 Courses & Merch \ud83d\udcb0 \n\ud83d\udcbb The Fundamentals of Programming w/ Python: https://tech-with-tim.teachable.com/p/the-fundamentals-of-programming-with-python \n\ud83d\udc55 Merchandise: https://teespring.com/stores/tech-with-tim-merch-shop \n\n\ud83d\udd17 Social Medias \ud83d\udd17 \n\ud83d\udcf8 Instagram: https://www.instagram.com/tech_with_tim \n\ud83d\udcf1 Twitter: https://twitter.com/TechWithTimm \n\u2b50 Discord: https://discord.gg/twt\n\ud83d\udcdd LinkedIn: https://www.linkedin.com/in/tim-ruscica-82631b179/ \n\ud83c\udf0e Website: https://techwithtim.net \n\ud83d\udcc2 GitHub: https://github.com/techwithtim \n\ud83d\udd0a Podcast: https://anchor.fm/tech-with-tim \n\n\ud83c\udfac My YouTube Gear \ud83c\udfac \n\ud83c\udfa5 Main Camera (EOS Canon 90D): https://amzn.to/3cY23y9 \n\ud83c\udfa5 Secondary Camera (Panasonic Lumix G7): https://amzn.to/3fl2iEV \n\ud83d\udcf9 Main Lens (EFS 24mm f/2.8): https://amzn.to/2Yuol5r \n\ud83d\udd79 Tripod: https://amzn.to/3hpSprv \n\ud83c\udfa4 Main Microphone (Rode NT1): https://amzn.to/2HrZxXc\n\ud83c\udfa4 Secondary Microphone (Synco Wireless Lapel System): https://amzn.to/3e07Swl \n\ud83c\udfa4 Third Microphone (Rode NTG4+): https://amzn.to/3oi0v8Z\n\u2600\ufe0f Lights: https://amzn.to/2ApeiXr \n\u2328 Keyboard (Daskeyboard 4Q): https://amzn.to/2YpN5vm \n\ud83d\uddb1 Mouse (Logitech MX Master): https://amzn.to/2HsmRDN\n\ud83d\udcf8 Webcam (Logitech 1080p Pro): https://amzn.to/2B2IXcQ \n\ud83d\udce2 Speaker (Beats Pill): https://amzn.to/2XYc5ef \n\ud83c\udfa7 Headphones (Bose Quiet Comfort 35): https://amzn.to/2MWbl3e \n\ud83c\udf1e Lamp (BenQ E-reading Lamp): https://amzn.to/3e0UCr8 \n\ud83c\udf1e Secondary Lamp (BenQ Screenbar Plus): https://amzn.to/30Dtafi \n\ud83d\udcbb Monitor (BenQ EX2780Q): https://amzn.to/2HsmUPZ\n\ud83d\udcbb Monitor (LG Ultrawide 34WN750): https://amzn.to/3dSD7tS\n\ud83c\udf99 Mic Boom Arm (Rode PSA 1): https://amzn.to/30EZw9m \n\ud83c\udf9a Audio Interface (Focusrite Scarlet 4i4): https://amzn.to/2TjXsih\n\n\ud83d\udcb8 Donations \ud83d\udcb8 \n\ud83d\udcb5 One-Time Donations: https://www.paypal.com/donate?hosted_button_id=CU9FV329ADNT8\n\ud83d\udcb0 Patreon: https://www.patreon.com/techwithtim\n\u25fc\ufe0f\u25fc\ufe0f\u25fc\ufe0f\u25fc\ufe0f\u25fc\ufe0f\u25fc\ufe0f\u25fc\ufe0f\u25fc\ufe0f\u25fc\ufe0f\u25fc\ufe0f\u25fc\ufe0f\u25fc\ufe0f\u25fc\ufe0f\u25fc\ufe0f\n\n\u2b50\ufe0f Tags \u2b50\ufe0f\n- Tech With Tim\n- Python\n- Magic of Python\n- Programming\n- \n\n\u2b50\ufe0f Hashtags \u2b50\ufe0f",
        "thumbnails": {
          "default": {
            "url": "https://i.ytimg.com/vi/ScUKeVuL7Y8/default.jpg",
            "width": 120,
            "height": 90
          },
          "medium": {
            "url": "https://i.ytimg.com/vi/ScUKeVuL7Y8/mqdefault.jpg",
            "width": 320,
            "height": 180
          },
          "high": {
            "url": "https://i.ytimg.com/vi/ScUKeVuL7Y8/hqdefault.jpg",
            "width": 480,
            "height": 360
          }
        },
        "channelTitle": "Donald Thompson",
        "playlistId": "PLIjhfluhNd98zSpKsf69arDUm1Dqbe0bn",
        "position": 66,
        "resourceId": {
          "kind": "youtube#video",
          "videoId": "ScUKeVuL7Y8"
        },
        "videoOwnerChannelTitle": "Tech With Tim",
        "videoOwnerChannelId": "UC4JX40jDee_tINbkjycV4Sg"
      },
      "contentDetails": {
        "videoId": "ScUKeVuL7Y8",
        "videoPublishedAt": "2021-07-11T15:00:27Z"
      }
    },
    {
      "kind": "youtube#playlistItem",
      "etag": "6u8p2rWPHbw6KKZg8vOIaE3rS0Y",
      "id": "UExJamhmbHVoTmQ5OHpTcEtzZjY5YXJEVW0xRHFiZTBibi41MzY4MzcwOUFFRUU3QzEx",
      "snippet": {
        "publishedAt": "2021-08-16T06:58:31Z",
        "channelId": "UCqsUJL5xIWuidR7sIrPLhAw",
        "title": "Python f-strings can do more than you thought. f'{val=}', f'{val!r}', f'{dt:%Y-%m-%d}'",
        "description": "f-strings in Python are not just a way to easily substitute variables inside strings, they come with a wide array of conversion, formatting, and debugging options which we give examples of in this video.\n\nNote: I'm trying a more informal style in this video so make sure to let me know if you like it better this way, as opposed to my usual cut-after-every-sentence editing.\n\n\u2015 mCoding with James Murphy (https://mcoding.io)\n\nSource code: https://github.com/mCodingLLC/VideosSampleCode\nf-string docs: https://docs.python.org/3/reference/lexical_analysis.html#f-strings\n\nSUPPORT ME \u2b50\n---------------------------------------------------\nSign up on Patreon to get your donor role and early access to videos!\nhttps://patreon.com/mCoding\n\nFeeling generous but don't have a Patreon? Donate via PayPal! (No sign up needed.)\nhttps://www.paypal.com/donate/?hosted_button_id=VJY5SLZ8BJHEE\n\nWant to donate crypto? Check out the rest of my supported donations on my website!\nhttps://mcoding.io/donate\n\nTop patrons and donors:\nJohn M, Laura M, Pieter G, Vahnekie, Sigmanificient\n\nBE ACTIVE IN MY COMMUNITY \ud83d\ude04\n---------------------------------------------------\nDiscord: https://discord.gg/Ye9yJtZQuN\nGithub: https://github.com/mCodingLLC/\nReddit: https://www.reddit.com/r/mCoding/\nFacebook: https://www.facebook.com/james.mcoding",
        "thumbnails": {
          "default": {
            "url": "https://i.ytimg.com/vi/BxUxX1Ku1EQ/default.jpg",
            "width": 120,
            "height": 90
          },
          "medium": {
            "url": "https://i.ytimg.com/vi/BxUxX1Ku1EQ/mqdefault.jpg",
            "width": 320,
            "height": 180
          },
          "high": {
            "url": "https://i.ytimg.com/vi/BxUxX1Ku1EQ/hqdefault.jpg",
            "width": 480,
            "height": 360
          },
          "standard": {
            "url": "https://i.ytimg.com/vi/BxUxX1Ku1EQ/sddefault.jpg",
            "width": 640,
            "height": 480
          },
          "maxres": {
            "url": "https://i.ytimg.com/vi/BxUxX1Ku1EQ/maxresdefault.jpg",
            "width": 1280,
            "height": 720
          }
        },
        "channelTitle": "Donald Thompson",
        "playlistId": "PLIjhfluhNd98zSpKsf69arDUm1Dqbe0bn",
        "position": 67,
        "resourceId": {
          "kind": "youtube#video",
          "videoId": "BxUxX1Ku1EQ"
        },
        "videoOwnerChannelTitle": "mCoding",
        "videoOwnerChannelId": "UCaiL2GDNpLYH6Wokkk1VNcg"
      },
      "contentDetails": {
        "videoId": "BxUxX1Ku1EQ",
        "videoPublishedAt": "2021-06-19T14:08:04Z"
      }
    },
    {
      "kind": "youtube#playlistItem",
      "etag": "1kknf7YgnKO_tojSwcE3VStqxRI",
      "id": "UExJamhmbHVoTmQ5OHpTcEtzZjY5YXJEVW0xRHFiZTBibi5DRUQwODMxQzUyRTlGRkY3",
      "snippet": {
        "publishedAt": "2021-08-16T06:47:46Z",
        "channelId": "UCqsUJL5xIWuidR7sIrPLhAw",
        "title": "FastAPI & React - 2 - FastAPI User JWT Authentication",
        "description": "In this series we'll be creating a Leads Manager using FastAPI (Python) and ReactJS in the Frontend.\nIn this video we'll be creating endpoints for user authentication using JWT.\n\nThe finished code can be found here:\n\ud83d\udc7e  - https://github.com/sixfwa/react-fastapi\n\n\ud83d\udc7d - Discord Server: https://discord.gg/kxhTDgbwek\n\n\ud83d\udd34  - Like and Subscribe for more content like this\n\nYou can support my work here \n\u2615\ufe0f- https://www.buymeacoffee.com/rithmic\n\nCheckout my website \ud83d\ude0e\n\ud83c\udf0d  - https://www.sixfwa.com/\u200b\n\nFollow me on my socials \ud83e\udd2a\n\ud83d\udc26  - https://twitter.com/sixfwa\u200b\n\ud83d\udcf8  - https://www.instagram.com/sixfwa/\n\n#FastAPI #ReactJS #FullStack",
        "thumbnails": {
          "default": {
            "url": "https://i.ytimg.com/vi/OYpsNaBU_O8/default.jpg",
            "width": 120,
            "height": 90
          },
          "medium": {
            "url": "https://i.ytimg.com/vi/OYpsNaBU_O8/mqdefault.jpg",
            "width": 320,
            "height": 180
          },
          "high": {
            "url": "https://i.ytimg.com/vi/OYpsNaBU_O8/hqdefault.jpg",
            "width": 480,
            "height": 360
          },
          "standard": {
            "url": "https://i.ytimg.com/vi/OYpsNaBU_O8/sddefault.jpg",
            "width": 640,
            "height": 480
          },
          "maxres": {
            "url": "https://i.ytimg.com/vi/OYpsNaBU_O8/maxresdefault.jpg",
            "width": 1280,
            "height": 720
          }
        },
        "channelTitle": "Donald Thompson",
        "playlistId": "PLIjhfluhNd98zSpKsf69arDUm1Dqbe0bn",
        "position": 68,
        "resourceId": {
          "kind": "youtube#video",
          "videoId": "OYpsNaBU_O8"
        },
        "videoOwnerChannelTitle": "rithmic",
        "videoOwnerChannelId": "UCs2HMkuPwT3xCvba20VgGuQ"
      },
      "contentDetails": {
        "videoId": "OYpsNaBU_O8",
        "videoPublishedAt": "2021-06-17T09:03:50Z"
      }
    },
    {
      "kind": "youtube#playlistItem",
      "etag": "YjtuJ9bbiP4pdnlNj5a0ZfcZ8x4",
      "id": "UExJamhmbHVoTmQ5OHpTcEtzZjY5YXJEVW0xRHFiZTBibi5DNkMwRUI2MkI4QkI4NDFG",
      "snippet": {
        "publishedAt": "2021-08-16T06:47:21Z",
        "channelId": "UCqsUJL5xIWuidR7sIrPLhAw",
        "title": "FastAPI - A python framework | Full Course",
        "description": "FastAPI is the fastest Python Web Framework\nLet's learn fastAPI by creating a full API for crud of blog with user authentication\n\nFastAPI is using Pydantic library for types and starlette framework under the hood\nFastAPI also provide amazing support for swagger API docs\n\nSource code - https://github.com/bitfumes/fastapi-course\n\n\ud83c\udf1f Course Contents \ud83c\udf1f\n\u23f3 (00:00:00) Framework Intro\n\u23f3 (00:04:51) Course Intro\n\u23f3 (00:10:09) Install and Setup\n\u23f3 (00:22:33) Break it down\n\u23f3 (00:30:47) Path Parameters\n\u23f3 (00:41:40) API Docs\n\u23f3 (00:45:55) Query Parameters\n\u23f3 (00:55:58) Request Body\n\u23f3 (01:03:58) Debugging\n\u23f3 (01:10:47) Pydantic Schemas\n\u23f3 (01:19:59) Database Connection\n\u23f3 (01:25:37) Create Model and Tables\n\u23f3 (01:33:36) Store blog to database\n\u23f3 (01:38:51) Get blog from database\n\u23f3 (01:43:29) Exception & Status Code\n\u23f3 (01:53:46) Delete a blog\n\u23f3 (02:08:02) Response Model\n\u23f3 (02:15:56) Create User\n\u23f3 (02:23:07) Hash Password\n\u23f3 (02:30:36) Show User\n\u23f3 (02:35:05) Using Doc Tags\n\u23f3 (02:37:58) Relationship\n\u23f3 (02:51:13) API Router\n\u23f3 (03:04:08) API router path operators\n\u23f3 (03:07:24) Blog & User respository\n\u23f3 (03:18:08) Logn & verify Password\n\u23f3 (03:28:37) JWT Access Token\n\u23f3 (03:36:24) Route behind authentication\n\u23f3 (03:51:00) Deploy fastAPI app\n\nThere are many python web frameworks like Django and flask\nBut django and flask are python web frameworks that focus on serving files\n\nThis fastAPI, a python web framework is more focused on creating API with many modern features\n\nPython fastapi is a true solution for your next big API project\n\n\ud83c\udf1f Premium Courses \ud83c\udf1f\nCheck out 32 hours of Laravel Content at\nhttps://bit.ly/indepthlaravel\n\n\ud83d\udd25 DIGITAL OCEAN HOSTING Affiliate\nGet $100 in credit for 60 days https://m.do.co/c/a3a47da9b9a8\n\n\ud83c\udf1f Gadgets I use \ud83c\udf1f\nCamera                                   https://amzn.to/3mGikwL\nBlue Yeti Mic                          https://amzn.to/3mA6YdI\nBlue Yeti Mic Foam Cover   https://amzn.to/2GkmV8w\nCapture Card                         https://amzn.to/3ed3cnN\n\n\ud83c\udf1f Support Me ( I am full time youtuber) \ud83c\udf1f\nGithub       https://github.com/sponsors/bitfumes \nPatreon    https://patreon.com/bitfumes\nYoutube    https://www.youtube.com/channel/UC_hG9fglfmShkwex1KVydHA/join\n\n\ud83c\udf1f FOLLOW ME \ud83c\udf1f\nSubscribe for New Releases!\n\nTwitter - https://twitter.com/bitfumes\nTwitter - https://twitter.com/sarthaksavvy\nFacebook - https://www.facebook.com/Bitfumes\nInstagram - https://www.instagram.com/bitfumes\n(ask me questions!)\n\n--- QUESTIONS? ---\n\nLeave a comment below and I or someone else can help you.\nFor quick questions you may also want to ask me on Twitter, I respond almost immediately.\n\nEmail me support@bitfumes.com\nThanks for all your support",
        "thumbnails": {
          "default": {
            "url": "https://i.ytimg.com/vi/7t2alSnE2-I/default.jpg",
            "width": 120,
            "height": 90
          },
          "medium": {
            "url": "https://i.ytimg.com/vi/7t2alSnE2-I/mqdefault.jpg",
            "width": 320,
            "height": 180
          },
          "high": {
            "url": "https://i.ytimg.com/vi/7t2alSnE2-I/hqdefault.jpg",
            "width": 480,
            "height": 360
          },
          "standard": {
            "url": "https://i.ytimg.com/vi/7t2alSnE2-I/sddefault.jpg",
            "width": 640,
            "height": 480
          },
          "maxres": {
            "url": "https://i.ytimg.com/vi/7t2alSnE2-I/maxresdefault.jpg",
            "width": 1280,
            "height": 720
          }
        },
        "channelTitle": "Donald Thompson",
        "playlistId": "PLIjhfluhNd98zSpKsf69arDUm1Dqbe0bn",
        "position": 69,
        "resourceId": {
          "kind": "youtube#video",
          "videoId": "7t2alSnE2-I"
        },
        "videoOwnerChannelTitle": "Bitfumes",
        "videoOwnerChannelId": "UC_hG9fglfmShkwex1KVydHA"
      },
      "contentDetails": {
        "videoId": "7t2alSnE2-I",
        "videoPublishedAt": "2021-02-15T14:00:02Z"
      }
    },
    {
      "kind": "youtube#playlistItem",
      "etag": "E5T7qfvGUM1Jg-rIlNXpuAnMoYc",
      "id": "UExJamhmbHVoTmQ5OHpTcEtzZjY5YXJEVW0xRHFiZTBibi45NkVENTkxRDdCQUFBMDY4",
      "snippet": {
        "publishedAt": "2021-08-16T06:47:11Z",
        "channelId": "UCqsUJL5xIWuidR7sIrPLhAw",
        "title": "Introducing the FARM Stack - FastAPI, React, & MongoDB",
        "description": "Learn how to create highly performant, asynchronous, modern, web applications in Python with MongoDB.\n\nIn this tutorial, we'll cover the complete FARM stack; create a FastAPI server, persist and fetch data asynchronously from MongoDB Atlas, and finally render it in the browser with React.\n\nExperience performance on-par or better than a MERN stack, but without switching all your development from Python to Node.js.\n\nSubscribe to MongoDB \u25ba\u25ba\u25ba https://bit.ly/3bpg1Z1\n\nConnect with MongoDB:\nWebsite: https://bit.ly/2LjtNBZ\nTwitter: https://bit.ly/3fH87gR\nFacebook: https://bit.ly/3fEaIsd\nLinkedin: https://bit.ly/2SY9w90\nInstagram: https://bit.ly/3bn9bDv\nCommunity Forums: https://bit.ly/2I8VCi5\nTikTok: https://bit.ly/3fHoqdJ",
        "thumbnails": {
          "default": {
            "url": "https://i.ytimg.com/vi/IKmv0AuBwp0/default.jpg",
            "width": 120,
            "height": 90
          },
          "medium": {
            "url": "https://i.ytimg.com/vi/IKmv0AuBwp0/mqdefault.jpg",
            "width": 320,
            "height": 180
          },
          "high": {
            "url": "https://i.ytimg.com/vi/IKmv0AuBwp0/hqdefault.jpg",
            "width": 480,
            "height": 360
          },
          "standard": {
            "url": "https://i.ytimg.com/vi/IKmv0AuBwp0/sddefault.jpg",
            "width": 640,
            "height": 480
          },
          "maxres": {
            "url": "https://i.ytimg.com/vi/IKmv0AuBwp0/maxresdefault.jpg",
            "width": 1280,
            "height": 720
          }
        },
        "channelTitle": "Donald Thompson",
        "playlistId": "PLIjhfluhNd98zSpKsf69arDUm1Dqbe0bn",
        "position": 70,
        "resourceId": {
          "kind": "youtube#video",
          "videoId": "IKmv0AuBwp0"
        },
        "videoOwnerChannelTitle": "MongoDB",
        "videoOwnerChannelId": "UCK_m2976Yvbx-TyDLw7n1WA"
      },
      "contentDetails": {
        "videoId": "IKmv0AuBwp0",
        "videoPublishedAt": "2021-07-14T21:01:28Z"
      }
    },
    {
      "kind": "youtube#playlistItem",
      "etag": "9ctI67Nj_TAjW5wDcl2vPg6R9_4",
      "id": "UExJamhmbHVoTmQ5OHpTcEtzZjY5YXJEVW0xRHFiZTBibi4zQzFBN0RGNzNFREFCMjBE",
      "snippet": {
        "publishedAt": "2021-08-16T06:47:04Z",
        "channelId": "UCqsUJL5xIWuidR7sIrPLhAw",
        "title": "FastAPI & React - 1 - Creating Models with SQLAlchemy",
        "description": "In this series we'll be creating a Leads Manager using FastAPI (Python) and ReactJS in the Frontend. To start off we'll set up the backend and create the Models and Schemas before moving onto creating the API itself.\n\nThe finished code can be found here:\n\ud83d\udc7e  - https://github.com/sixfwa/react-fastapi\n\n\ud83d\udc7d - Discord Server: https://discord.gg/kxhTDgbwek\n\n\ud83d\udd34  - Like and Subscribe for more content like this\n\nYou can support my work here \n\u2615\ufe0f- https://www.buymeacoffee.com/rithmic\n\nCheckout my website \ud83d\ude0e\n\ud83c\udf0d  - https://www.sixfwa.com/\u200b\n\nFollow me on my socials \ud83e\udd2a\n\ud83d\udc26  - https://twitter.com/sixfwa\u200b\n\ud83d\udcf8  - https://www.instagram.com/sixfwa/\n\nDocs for FastAPI - https://fastapi.tiangolo.com/\n\n#FastAPI #ReactJS #FullStack",
        "thumbnails": {
          "default": {
            "url": "https://i.ytimg.com/vi/UbSONbZ8t4g/default.jpg",
            "width": 120,
            "height": 90
          },
          "medium": {
            "url": "https://i.ytimg.com/vi/UbSONbZ8t4g/mqdefault.jpg",
            "width": 320,
            "height": 180
          },
          "high": {
            "url": "https://i.ytimg.com/vi/UbSONbZ8t4g/hqdefault.jpg",
            "width": 480,
            "height": 360
          }
        },
        "channelTitle": "Donald Thompson",
        "playlistId": "PLIjhfluhNd98zSpKsf69arDUm1Dqbe0bn",
        "position": 71,
        "resourceId": {
          "kind": "youtube#video",
          "videoId": "UbSONbZ8t4g"
        },
        "videoOwnerChannelTitle": "rithmic",
        "videoOwnerChannelId": "UCs2HMkuPwT3xCvba20VgGuQ"
      },
      "contentDetails": {
        "videoId": "UbSONbZ8t4g",
        "videoPublishedAt": "2021-06-15T10:24:11Z"
      }
    },
    {
      "kind": "youtube#playlistItem",
      "etag": "-K9SPJFyPoxwCe7mFIcCEtSXPNc",
      "id": "UExJamhmbHVoTmQ5OHpTcEtzZjY5YXJEVW0xRHFiZTBibi5GNDg1Njc1QzZERjlFRjE5",
      "snippet": {
        "publishedAt": "2021-08-16T06:46:41Z",
        "channelId": "UCqsUJL5xIWuidR7sIrPLhAw",
        "title": "Python FAST API Tutorial",
        "description": "Welcome back to my channel! In this video, I will be showing you FastAPI which is a Python framework. As the name suggests, this allows us to make APIs in Python.\n\n\ud83d\udcbb Checkout Intel's OpenVINO toolkit for FREE and start building and deploying AI/ML applications with the DevCloud for the edge! https://intel.ly/3whdRWo #sponsored\n\n\ud83d\udcc4 Resources \ud83d\udcc4\nFAST-API Docs: https://fastapi.tiangolo.com/\nFix Pip (Windows): https://www.youtube.com/watch?v=AdUZArA-kZw\nFix Pip (Mac/Linux): https://www.youtube.com/watch?v=E-WhAS6qzsU&t=4s\n\n\u2b50\ufe0f Timestamps \u2b50\ufe0f\n00:00 | Introduction\n02:22 | FAST-API Advantages\n04:49 | Installing FastAPI\n06:26 | Writing Our First FAST-API API\n10:58 | Running Our API\n14:00 | What is an API\n16:35 | JSON Explanation\n18:16 | Creating More Endpoints & GET Method\n19:19 | Path/Endpoint Parameters\n27:19 | Query Parameters\n35:19 | Request Body & POST Method\n44:12 | PUT Method\n50:42 | Delete Method\n53:15 | Status Codes and Error Responses\n\n\u25fc\ufe0f\u25fc\ufe0f\u25fc\ufe0f\u25fc\ufe0f\u25fc\ufe0f\u25fc\ufe0f\u25fc\ufe0f\u25fc\ufe0f\u25fc\ufe0f\u25fc\ufe0f\u25fc\ufe0f\u25fc\ufe0f\u25fc\ufe0f\u25fc\ufe0f\n\ud83d\udcb0 Courses & Merch \ud83d\udcb0 \n\ud83d\udcbb The Fundamentals of Programming w/ Python: https://tech-with-tim.teachable.com/p/the-fundamentals-of-programming-with-python \n\ud83d\udc55 Merchandise: https://teespring.com/stores/tech-with-tim-merch-shop \n\n\ud83d\udd17 Social Medias \ud83d\udd17 \n\ud83d\udcf8 Instagram: https://www.instagram.com/tech_with_tim \n\ud83d\udcf1 Twitter: https://twitter.com/TechWithTimm \n\u2b50 Discord: https://discord.gg/twt\n\ud83d\udcdd LinkedIn: https://www.linkedin.com/in/tim-ruscica-82631b179/ \n\ud83c\udf0e Website: https://techwithtim.net \n\ud83d\udcc2 GitHub: https://github.com/techwithtim \n\ud83d\udd0a Podcast: https://anchor.fm/tech-with-tim \n\n\ud83c\udfac My YouTube Gear \ud83c\udfac \n\ud83c\udfa5 Main Camera (EOS Canon 90D): https://amzn.to/3cY23y9 \n\ud83c\udfa5 Secondary Camera (Panasonic Lumix G7): https://amzn.to/3fl2iEV \n\ud83d\udcf9 Main Lens (EFS 24mm f/2.8): https://amzn.to/2Yuol5r \n\ud83d\udd79 Tripod: https://amzn.to/3hpSprv \n\ud83c\udfa4 Main Microphone (Rode NT1): https://amzn.to/2HrZxXc\n\ud83c\udfa4 Secondary Microphone (Synco Wireless Lapel System): https://amzn.to/3e07Swl \n\ud83c\udfa4 Third Microphone (Rode NTG4+): https://amzn.to/3oi0v8Z\n\u2600\ufe0f Lights: https://amzn.to/2ApeiXr \n\u2328 Keyboard (Daskeyboard 4Q): https://amzn.to/2YpN5vm \n\ud83d\uddb1 Mouse (Logitech MX Master): https://amzn.to/2HsmRDN\n\ud83d\udcf8 Webcam (Logitech 1080p Pro): https://amzn.to/2B2IXcQ \n\ud83d\udce2 Speaker (Beats Pill): https://amzn.to/2XYc5ef \n\ud83c\udfa7 Headphones (Bose Quiet Comfort 35): https://amzn.to/2MWbl3e \n\ud83c\udf1e Lamp (BenQ E-reading Lamp): https://amzn.to/3e0UCr8 \n\ud83c\udf1e Secondary Lamp (BenQ Screenbar Plus): https://amzn.to/30Dtafi \n\ud83d\udcbb Monitor (BenQ EX2780Q): https://amzn.to/2HsmUPZ\n\ud83d\udcbb Monitor (LG Ultrawide 34WN750): https://amzn.to/3dSD7tS\n\ud83c\udf99 Mic Boom Arm (Rode PSA 1): https://amzn.to/30EZw9m \n\ud83c\udf9a Audio Interface (Focusrite Scarlet 4i4): https://amzn.to/2TjXsih\n\n\ud83d\udcb8 Donations \ud83d\udcb8 \n\ud83d\udcb5 One-Time Donations: https://www.paypal.com/donate?hosted_button_id=CU9FV329ADNT8\n\ud83d\udcb0 Patreon: https://www.patreon.com/techwithtim\n\u25fc\ufe0f\u25fc\ufe0f\u25fc\ufe0f\u25fc\ufe0f\u25fc\ufe0f\u25fc\ufe0f\u25fc\ufe0f\u25fc\ufe0f\u25fc\ufe0f\u25fc\ufe0f\u25fc\ufe0f\u25fc\ufe0f\u25fc\ufe0f\u25fc\ufe0f\n\n\u2b50\ufe0f Tags \u2b50\ufe0f\n-Tech With Tim\n- Fast API\n- Fast API Tutorial\n- Python API\n- Python FastAPI Tutorial\n\n\u2b50\ufe0f Hashtags \u2b50\ufe0f\n#TechWithTiim #FastAPITutorial",
        "thumbnails": {
          "default": {
            "url": "https://i.ytimg.com/vi/-ykeT6kk4bk/default.jpg",
            "width": 120,
            "height": 90
          },
          "medium": {
            "url": "https://i.ytimg.com/vi/-ykeT6kk4bk/mqdefault.jpg",
            "width": 320,
            "height": 180
          },
          "high": {
            "url": "https://i.ytimg.com/vi/-ykeT6kk4bk/hqdefault.jpg",
            "width": 480,
            "height": 360
          },
          "standard": {
            "url": "https://i.ytimg.com/vi/-ykeT6kk4bk/sddefault.jpg",
            "width": 640,
            "height": 480
          },
          "maxres": {
            "url": "https://i.ytimg.com/vi/-ykeT6kk4bk/maxresdefault.jpg",
            "width": 1280,
            "height": 720
          }
        },
        "channelTitle": "Donald Thompson",
        "playlistId": "PLIjhfluhNd98zSpKsf69arDUm1Dqbe0bn",
        "position": 72,
        "resourceId": {
          "kind": "youtube#video",
          "videoId": "-ykeT6kk4bk"
        },
        "videoOwnerChannelTitle": "Tech With Tim",
        "videoOwnerChannelId": "UC4JX40jDee_tINbkjycV4Sg"
      },
      "contentDetails": {
        "videoId": "-ykeT6kk4bk",
        "videoPublishedAt": "2021-05-29T15:00:00Z"
      }
    },
    {
      "kind": "youtube#playlistItem",
      "etag": "npIyJDPMB9I-BxVlGC8TmJl0x9Y",
      "id": "UExJamhmbHVoTmQ5OHpTcEtzZjY5YXJEVW0xRHFiZTBibi4xOTEzQzhBQzU3MDNDNjcz",
      "snippet": {
        "publishedAt": "2021-08-16T06:46:29Z",
        "channelId": "UCqsUJL5xIWuidR7sIrPLhAw",
        "title": "FastAPI and React Full-stack Application: Introduction to Project",
        "description": "Get started with React and FastAPI fullstack application crash course. We will be building an inventory management system for small shops using FastAPI(Python) and React js frontend. We'll learn components, props, state, hooks, working with an API and more. This is the first video in the series.\n#ReactJS #FastAPI #FullstackProject #JavaScritp #Python #API\n\n- React js\n- FastAPI\n- JavaScript\n- JSX\n- ES6 syntax\n- Python\n- Pydantic models\n-  CRUD API\n\nChannel main page: https://www.youtube.com/channel/UCQf9\u200b\u200b\u200b...\n\npandas series: https://youtube.com/playlist?list=PLU\u200b\u200b\u200b...\n\nSeaborn: https://youtu.be/RXRwcKlntjk\u200b\u200b\u200b\n\nMachine Learning: https://youtube.com/playlist?list=PLU\u200b\u200b\u200b...\n\nInstagram: https://www.instagram.com/codehouse2\u200b\u200b\u200b\ntwitter: https://www.twitter.com/codehouse\u200b\u200b\u200b\nChannel main page: https://www.youtube.com/c/CodeWithPri...\u200b\n\nPlease like, share and subscribe to this channel for more of such videos",
        "thumbnails": {
          "default": {
            "url": "https://i.ytimg.com/vi/kBbKf9wliuc/default.jpg",
            "width": 120,
            "height": 90
          },
          "medium": {
            "url": "https://i.ytimg.com/vi/kBbKf9wliuc/mqdefault.jpg",
            "width": 320,
            "height": 180
          },
          "high": {
            "url": "https://i.ytimg.com/vi/kBbKf9wliuc/hqdefault.jpg",
            "width": 480,
            "height": 360
          },
          "standard": {
            "url": "https://i.ytimg.com/vi/kBbKf9wliuc/sddefault.jpg",
            "width": 640,
            "height": 480
          },
          "maxres": {
            "url": "https://i.ytimg.com/vi/kBbKf9wliuc/maxresdefault.jpg",
            "width": 1280,
            "height": 720
          }
        },
        "channelTitle": "Donald Thompson",
        "playlistId": "PLIjhfluhNd98zSpKsf69arDUm1Dqbe0bn",
        "position": 73,
        "resourceId": {
          "kind": "youtube#video",
          "videoId": "kBbKf9wliuc"
        },
        "videoOwnerChannelTitle": "Code With Prince",
        "videoOwnerChannelId": "UCQf9BYcqr8pzKrY14ZyMsbg"
      },
      "contentDetails": {
        "videoId": "kBbKf9wliuc",
        "videoPublishedAt": "2021-05-02T07:00:09Z"
      }
    },
    {
      "kind": "youtube#playlistItem",
      "etag": "UbaXLNt-9xP--jKnBFu81tQVLxc",
      "id": "UExJamhmbHVoTmQ5OHpTcEtzZjY5YXJEVW0xRHFiZTBibi5BRjJDODk5REM0NjkzMUIy",
      "snippet": {
        "publishedAt": "2021-08-16T06:46:11Z",
        "channelId": "UCqsUJL5xIWuidR7sIrPLhAw",
        "title": "FastAPI + React Tutorial",
        "description": "This tutorial shows how to set-up FastAPI with a React app.\n\nedit: this is p bad, i may remake...\n\ninsta: @cmonyeba\n\nsubscribbeeeeeee",
        "thumbnails": {
          "default": {
            "url": "https://i.ytimg.com/vi/0JaCS6xcIBM/default.jpg",
            "width": 120,
            "height": 90
          },
          "medium": {
            "url": "https://i.ytimg.com/vi/0JaCS6xcIBM/mqdefault.jpg",
            "width": 320,
            "height": 180
          },
          "high": {
            "url": "https://i.ytimg.com/vi/0JaCS6xcIBM/hqdefault.jpg",
            "width": 480,
            "height": 360
          },
          "standard": {
            "url": "https://i.ytimg.com/vi/0JaCS6xcIBM/sddefault.jpg",
            "width": 640,
            "height": 480
          },
          "maxres": {
            "url": "https://i.ytimg.com/vi/0JaCS6xcIBM/maxresdefault.jpg",
            "width": 1280,
            "height": 720
          }
        },
        "channelTitle": "Donald Thompson",
        "playlistId": "PLIjhfluhNd98zSpKsf69arDUm1Dqbe0bn",
        "position": 74,
        "resourceId": {
          "kind": "youtube#video",
          "videoId": "0JaCS6xcIBM"
        },
        "videoOwnerChannelTitle": "cmon yeba",
        "videoOwnerChannelId": "UCODuS8Jo1Mylhb3KHCK-RMw"
      },
      "contentDetails": {
        "videoId": "0JaCS6xcIBM",
        "videoPublishedAt": "2020-08-13T23:45:00Z"
      }
    },
    {
      "kind": "youtube#playlistItem",
      "etag": "FjwjQzygzw-CLXqd99WJV1T7gks",
      "id": "UExJamhmbHVoTmQ5OHpTcEtzZjY5YXJEVW0xRHFiZTBibi40QTA3NTU2RkM1QzlCMzYx",
      "snippet": {
        "publishedAt": "2021-08-16T06:46:05Z",
        "channelId": "UCqsUJL5xIWuidR7sIrPLhAw",
        "title": "FARM Stack Course  ( FastAPI , React js ,  mongoDB ) in 1 Hour [Presented in FreeCodeCamp as well]",
        "description": "Howdy friends \ud83d\udc4b\nThis is the only FARM Stack Course on YouTube , and I'm really happy \nI did it for you guys.\nNow,  the prerequisites to follow along is to have the basic understanding of the following  :\n\n1- HTTP request methods\n2- Async/Await Syntax\n3- Python language in general and FASTAPI in particular\n4- JavaScript ES6 and React JS basics\n5- Database systems, and specially NOSQL\n6- Fundamentals of MongoDB\n7- How client talks to the server ( Axios / HTTP methods )\n\nWe have also created a CRUD Application, where you will understand :\nHow to connect FastAPI - where your server side code lives - with mongoDB database. \nAnd together we can connect the backend to the frontend where React can send and receive HTTP requests to and from the server.\nIn case of any questions, don't be shy and drop it/them in the comments or contact me on : info@bekbrace.com\n\nProject Contents:\n\nFARM STACK Explained (Theory)            [ 00:00 ] \nBackend build (FastAPI)                           [ 11:20 ] \nMongoDB Queries                                      [ 39:39 ]\nFrontend Design                                         [ 42:15 ] \nApp Testing                                                 [ 58:03 ]\n\nSources \ud83c\udf10 \n--------------\nFastAPI                             : https://fastapi.tiangolo.com\nReactJS                            : https://reactjs.org\u200b\u200b\u200b\nmongoDB                         : https://www.mongodb.com\ncreate-react-app              : https://github.com/facebook/create-react-app\nReact ( GitHub )               : https://github.com/facebook/react\nAxios ( GitHub )               : https://github.com/axios/axios\u200b\u200b\u200b\n\nThe Stack overflow survey for 2020 : \nhttps://insights.stackoverflow.com/survey/2020\n\nSource Code                     \nhttps://github.com/BekBrace/FARM-Stack-Course\n\nSocial Media \ud83d\udd17 \n--------------\nFacebook: https://www.facebook.com/bekbrace\nDev Blog: \u200b\u200b\u200b\u200bhttps://dev.to/bekbrace\nGithub profile: \u200b\u200b\u200bhttps://github.com/bekbrace\n\n*******************************************************************",
        "thumbnails": {
          "default": {
            "url": "https://i.ytimg.com/vi/oGwszbCH5Z4/default.jpg",
            "width": 120,
            "height": 90
          },
          "medium": {
            "url": "https://i.ytimg.com/vi/oGwszbCH5Z4/mqdefault.jpg",
            "width": 320,
            "height": 180
          },
          "high": {
            "url": "https://i.ytimg.com/vi/oGwszbCH5Z4/hqdefault.jpg",
            "width": 480,
            "height": 360
          },
          "standard": {
            "url": "https://i.ytimg.com/vi/oGwszbCH5Z4/sddefault.jpg",
            "width": 640,
            "height": 480
          },
          "maxres": {
            "url": "https://i.ytimg.com/vi/oGwszbCH5Z4/maxresdefault.jpg",
            "width": 1280,
            "height": 720
          }
        },
        "channelTitle": "Donald Thompson",
        "playlistId": "PLIjhfluhNd98zSpKsf69arDUm1Dqbe0bn",
        "position": 75,
        "resourceId": {
          "kind": "youtube#video",
          "videoId": "oGwszbCH5Z4"
        },
        "videoOwnerChannelTitle": "Bek Brace",
        "videoOwnerChannelId": "UC7EVSn5inapL20oPSwAwEUg"
      },
      "contentDetails": {
        "videoId": "oGwszbCH5Z4",
        "videoPublishedAt": "2021-06-16T18:43:28Z"
      }
    },
    {
      "kind": "youtube#playlistItem",
      "etag": "yKbAMWx-T-36n5Mf3J8hMko9A5k",
      "id": "UExJamhmbHVoTmQ5OHpTcEtzZjY5YXJEVW0xRHFiZTBibi45RjNFMDhGQ0Q2RkFCQTc1",
      "snippet": {
        "publishedAt": "2021-08-16T06:45:58Z",
        "channelId": "UCqsUJL5xIWuidR7sIrPLhAw",
        "title": "\"Introducing the FARM stack - FastAPI, React, & MongoDB\" - Aaron Bassett (PyCascades 2021)",
        "description": "(Aaron Bassett) Learn how to create highly performant, asynchronous, modern, web applications in Python. In this talk, we'll look at how you can combine FastAPI with React and MongoDB to create a full-stack that makes it fun and fast to build web applications.\n\nhttps://pretalx.com/pycascades-2021/talk/BQGDAG/\n\nAfter three amazing in-person conferences, this time we're moving PyCascades online.\r\n\r\nPyCascades is a regional PyCon in the Pacific Northwest, celebrating the west coast Python developer and user community. Our organizing team includes members of the Vancouver, Seattle, and Portland Python user groups.\r\n\r\nVideos are released as CC BY-NC-SA 4.0.\n\nProduced by Next Day Video Australia: https://nextdayvideo.com.au\n\n#pycascades #pycon #python #conference\n\nSat Feb 20 14:55:00 2021 at Interactive Track",
        "thumbnails": {
          "default": {
            "url": "https://i.ytimg.com/vi/ZE7D-fX6j30/default.jpg",
            "width": 120,
            "height": 90
          },
          "medium": {
            "url": "https://i.ytimg.com/vi/ZE7D-fX6j30/mqdefault.jpg",
            "width": 320,
            "height": 180
          },
          "high": {
            "url": "https://i.ytimg.com/vi/ZE7D-fX6j30/hqdefault.jpg",
            "width": 480,
            "height": 360
          },
          "standard": {
            "url": "https://i.ytimg.com/vi/ZE7D-fX6j30/sddefault.jpg",
            "width": 640,
            "height": 480
          },
          "maxres": {
            "url": "https://i.ytimg.com/vi/ZE7D-fX6j30/maxresdefault.jpg",
            "width": 1280,
            "height": 720
          }
        },
        "channelTitle": "Donald Thompson",
        "playlistId": "PLIjhfluhNd98zSpKsf69arDUm1Dqbe0bn",
        "position": 76,
        "resourceId": {
          "kind": "youtube#video",
          "videoId": "ZE7D-fX6j30"
        },
        "videoOwnerChannelTitle": "PyCascades",
        "videoOwnerChannelId": "UCtWI06j1EADmEOGj2iJhSyA"
      },
      "contentDetails": {
        "videoId": "ZE7D-fX6j30",
        "videoPublishedAt": "2021-02-23T13:06:01Z"
      }
    },
    {
      "kind": "youtube#playlistItem",
      "etag": "pToKtkBomJ3GJGTK6DOo0z4-8aA",
      "id": "UExJamhmbHVoTmQ5OHpTcEtzZjY5YXJEVW0xRHFiZTBibi42MTI4Njc2QjM1RjU1MjlG",
      "snippet": {
        "publishedAt": "2021-08-16T06:33:22Z",
        "channelId": "UCqsUJL5xIWuidR7sIrPLhAw",
        "title": "Python: How Decorators Function",
        "description": "Have you ever seen those \u201c@\u201d tags on top of Python functions and classes? Those are called decorators. Decorators, in their simplest form, wrap functions around functions. That might sound confusing at first, but it\u2019s actually pretty useful. A simple decorator could measure execution times, add startup steps, or automatically repeat calls. Decorators are one of Python\u2019s niftiest language features, and they help programmers write DRY (Don\u2019t Repeat Yourself) code.\n\nIn this talk, we\u2019ll learn all about decorators:\n\nHow they wrap functions\nHow to write our own decorators\nHow to do cool tricks with arguments, classes, and nesting\nHow to use popular decorators\nHow to decide when decorators are (and aren\u2019t) the right solution\nWe\u2019ll walk through plenty of example code together. We\u2019ll also touch lightly on Functional Programming (FP) and Aspect-Oriented Programming (AOP) concepts to build a firm understanding about how decorators work. After this talk, you should be able to use decorators effectively in your own Python projects!\n\nPUBLICATION PERMISSIONS:\nOriginal video was published with the Creative Commons Attribution license (reuse allowed). Link: https://www.youtube.com/watch?v=WuVDEcwv9Xk",
        "thumbnails": {
          "default": {
            "url": "https://i.ytimg.com/vi/vtoXyxcfmUo/default.jpg",
            "width": 120,
            "height": 90
          },
          "medium": {
            "url": "https://i.ytimg.com/vi/vtoXyxcfmUo/mqdefault.jpg",
            "width": 320,
            "height": 180
          },
          "high": {
            "url": "https://i.ytimg.com/vi/vtoXyxcfmUo/hqdefault.jpg",
            "width": 480,
            "height": 360
          },
          "standard": {
            "url": "https://i.ytimg.com/vi/vtoXyxcfmUo/sddefault.jpg",
            "width": 640,
            "height": 480
          },
          "maxres": {
            "url": "https://i.ytimg.com/vi/vtoXyxcfmUo/maxresdefault.jpg",
            "width": 1280,
            "height": 720
          }
        },
        "channelTitle": "Donald Thompson",
        "playlistId": "PLIjhfluhNd98zSpKsf69arDUm1Dqbe0bn",
        "position": 77,
        "resourceId": {
          "kind": "youtube#video",
          "videoId": "vtoXyxcfmUo"
        },
        "videoOwnerChannelTitle": "Coding Tech",
        "videoOwnerChannelId": "UCtxCXg-UvSnTKPOzLH4wJaQ"
      },
      "contentDetails": {
        "videoId": "vtoXyxcfmUo",
        "videoPublishedAt": "2021-08-14T19:17:09Z"
      }
    },
    {
      "kind": "youtube#playlistItem",
      "etag": "gjkwC4KSi_47anzdJT2B0TQ7a3I",
      "id": "UExJamhmbHVoTmQ5OHpTcEtzZjY5YXJEVW0xRHFiZTBibi5CMEQ2Mjk5NTc3NDZFRUNB",
      "snippet": {
        "publishedAt": "2021-08-16T06:17:42Z",
        "channelId": "UCqsUJL5xIWuidR7sIrPLhAw",
        "title": "Quarantine Coding - 5 Programming Project Ideas",
        "description": "Stuck inside? What better time to start working on some programming projects. These coding project ideas are meant to give you something to do during these boring times. Whether you're building a website, implementing some fancy algorithms or creating robots there is always something you can be doing.\n\n\u2b50 Thanks to Simpillearn for sponsoring this video! Check out their *Data Scientist Masters Course* here: https://www.simplilearn.com/big-data-and-analytics/senior-data-scientist-masters-program-training?utm_source=Tim&utm_medium=affiliate-cpm&utm_campaign=product_review_Mar2020\n\n\u25fe\u25fe\u25fe\u25fe\u25fe\n\ud83d\udcbb Enroll in The Fundamentals of Programming w/ Python \nhttps://tech-with-tim.teachable.com/p/the-fundamentals-of-programming-with-python\n\n\ud83d\udcf8 Instagram: https://www.instagram.com/tech_with_tim\n\ud83c\udf0e Website https://techwithtim.net\n\ud83d\udcf1 Twitter: https://twitter.com/TechWithTimm\n\u2b50 Discord: https://discord.gg/pr2k55t\n\ud83d\udcdd LinkedIn: https://www.linkedin.com/in/tim-ruscica-82631b179/\n\ud83d\udcc2 GitHub: https://github.com/techwithtim\n\ud83d\udd0a Podcast: https://anchor.fm/tech-with-tim\n\n\ud83d\udcb5 One-Time Donations: https://www.paypal.com/donate/?token=m_JfrPK7DsK4PLk0CxNnv4VPutjqSldorAmgQIQnMozUwwQw93vdul-yhU06IwAuig15uG&country.x=CA&locale.x=\n\ud83d\udcb0 Patreon: https://www.patreon.com/techwithtim\n\u25fe\u25fe\u25fe\u25fe\u25fe\u25fe\n\n\u26a1 Please leave a LIKE and SUBSCRIBE for more content! \u26a1\n\n\u2b50 Tags \u2b50\n- Tech With Tim\n- Coding Project Ideas\n- Project Ideas Coding\n- Programming project ideas\n- Coding Projects for Beginners\n- Quarantine Coding\n\n\u2b50 Hashtags \u2b50\n#ProjectIdeas #Coding #Programming",
        "thumbnails": {
          "default": {
            "url": "https://i.ytimg.com/vi/II7UCUbxOus/default.jpg",
            "width": 120,
            "height": 90
          },
          "medium": {
            "url": "https://i.ytimg.com/vi/II7UCUbxOus/mqdefault.jpg",
            "width": 320,
            "height": 180
          },
          "high": {
            "url": "https://i.ytimg.com/vi/II7UCUbxOus/hqdefault.jpg",
            "width": 480,
            "height": 360
          },
          "standard": {
            "url": "https://i.ytimg.com/vi/II7UCUbxOus/sddefault.jpg",
            "width": 640,
            "height": 480
          },
          "maxres": {
            "url": "https://i.ytimg.com/vi/II7UCUbxOus/maxresdefault.jpg",
            "width": 1280,
            "height": 720
          }
        },
        "channelTitle": "Donald Thompson",
        "playlistId": "PLIjhfluhNd98zSpKsf69arDUm1Dqbe0bn",
        "position": 78,
        "resourceId": {
          "kind": "youtube#video",
          "videoId": "II7UCUbxOus"
        },
        "videoOwnerChannelTitle": "Tech With Tim",
        "videoOwnerChannelId": "UC4JX40jDee_tINbkjycV4Sg"
      },
      "contentDetails": {
        "videoId": "II7UCUbxOus",
        "videoPublishedAt": "2020-03-25T13:31:36Z"
      }
    },
    {
      "kind": "youtube#playlistItem",
      "etag": "i_YJrbiCaL_wke86AVh5LLcUcSg",
      "id": "UExJamhmbHVoTmQ5OHpTcEtzZjY5YXJEVW0xRHFiZTBibi4zRDBDOEZDOUM0MDY5NEEz",
      "snippet": {
        "publishedAt": "2021-08-15T21:58:11Z",
        "channelId": "UCqsUJL5xIWuidR7sIrPLhAw",
        "title": "The Hottest New Feature Coming In Python 3.10 - Structural Pattern Matching / Match Statement",
        "description": "In this video we see my take on what I think will be the most important new feature in the upcoming Python 3.10, the match statement and structural pattern matching.\n\n\u2015 mCoding with James Murphy (https://mcoding.io)\n\nSource code: https://github.com/mCodingLLC/VideosSampleCode\nPEP-634:  https://www.python.org/dev/peps/pep-0634/\n\nSUPPORT ME \u2b50\n---------------------------------------------------\nSign up on Patreon to get your donor role and early access to videos!\nhttps://patreon.com/mCoding\n\nFeeling generous but don't have a Patreon? Donate via PayPal! (No sign up needed.)\nhttps://www.paypal.com/donate/?hosted_button_id=VJY5SLZ8BJHEE\n\nWant to donate crypto? Check out the rest of my supported donations on my website!\nhttps://mcoding.io/donate\n\nBE ACTIVE IN MY COMMUNITY \ud83d\ude04\n---------------------------------------------------\nDiscord: https://discord.gg/Ye9yJtZQuN\nGithub: https://github.com/mCodingLLC/\nReddit: https://www.reddit.com/r/mCoding/\nFacebook: https://www.facebook.com/james.mcoding",
        "thumbnails": {
          "default": {
            "url": "https://i.ytimg.com/vi/-79HGfWmH_w/default.jpg",
            "width": 120,
            "height": 90
          },
          "medium": {
            "url": "https://i.ytimg.com/vi/-79HGfWmH_w/mqdefault.jpg",
            "width": 320,
            "height": 180
          },
          "high": {
            "url": "https://i.ytimg.com/vi/-79HGfWmH_w/hqdefault.jpg",
            "width": 480,
            "height": 360
          },
          "standard": {
            "url": "https://i.ytimg.com/vi/-79HGfWmH_w/sddefault.jpg",
            "width": 640,
            "height": 480
          },
          "maxres": {
            "url": "https://i.ytimg.com/vi/-79HGfWmH_w/maxresdefault.jpg",
            "width": 1280,
            "height": 720
          }
        },
        "channelTitle": "Donald Thompson",
        "playlistId": "PLIjhfluhNd98zSpKsf69arDUm1Dqbe0bn",
        "position": 79,
        "resourceId": {
          "kind": "youtube#video",
          "videoId": "-79HGfWmH_w"
        },
        "videoOwnerChannelTitle": "mCoding",
        "videoOwnerChannelId": "UCaiL2GDNpLYH6Wokkk1VNcg"
      },
      "contentDetails": {
        "videoId": "-79HGfWmH_w",
        "videoPublishedAt": "2021-03-18T13:00:00Z"
      }
    },
    {
      "kind": "youtube#playlistItem",
      "etag": "NYOZMdN1kzMhVRYU2mSkpqj2nks",
      "id": "UExJamhmbHVoTmQ5OHpTcEtzZjY5YXJEVW0xRHFiZTBibi41QUZGQTY5OTE4QTREQUU4",
      "snippet": {
        "publishedAt": "2021-08-15T21:57:29Z",
        "channelId": "UCqsUJL5xIWuidR7sIrPLhAw",
        "title": "The Single Most Useful Decorator in Python",
        "description": "In this video we learn about what is in my opinion the single most useful decorator in Python, the @cache decorator from the functools library (and a similar variant called @lru_cache). This decorator was introduced in Python 3.9, but lru_cache has been available since 3.2. Often times, the cache decorator can be used to automatically do dynamic programming algorithms.\n\n\u2015 mCoding with James Murphy (https://mcoding.io)\n\nSource code: https://github.com/mCodingLLC/VideosSampleCode\n\nSUPPORT ME \u2b50\n---------------------------------------------------\nSign up on Patreon to get your donor role and early access to videos!\nhttps://patreon.com/mCoding\n\nFeeling generous but don't have a Patreon? Donate via PayPal! (No sign up needed.)\nhttps://www.paypal.com/donate/?hosted_button_id=VJY5SLZ8BJHEE\n\nWant to donate crypto? Check out the rest of my supported donations on my website!\nhttps://mcoding.io/donate\n\nBE ACTIVE IN MY COMMUNITY \ud83d\ude04\n---------------------------------------------------\nDiscord: https://discord.gg/Ye9yJtZQuN\nGithub: https://github.com/mCodingLLC/\nReddit: https://www.reddit.com/r/mCoding/\nFacebook: https://www.facebook.com/james.mcoding",
        "thumbnails": {
          "default": {
            "url": "https://i.ytimg.com/vi/DnKxKFXB4NQ/default.jpg",
            "width": 120,
            "height": 90
          },
          "medium": {
            "url": "https://i.ytimg.com/vi/DnKxKFXB4NQ/mqdefault.jpg",
            "width": 320,
            "height": 180
          },
          "high": {
            "url": "https://i.ytimg.com/vi/DnKxKFXB4NQ/hqdefault.jpg",
            "width": 480,
            "height": 360
          },
          "standard": {
            "url": "https://i.ytimg.com/vi/DnKxKFXB4NQ/sddefault.jpg",
            "width": 640,
            "height": 480
          },
          "maxres": {
            "url": "https://i.ytimg.com/vi/DnKxKFXB4NQ/maxresdefault.jpg",
            "width": 1280,
            "height": 720
          }
        },
        "channelTitle": "Donald Thompson",
        "playlistId": "PLIjhfluhNd98zSpKsf69arDUm1Dqbe0bn",
        "position": 80,
        "resourceId": {
          "kind": "youtube#video",
          "videoId": "DnKxKFXB4NQ"
        },
        "videoOwnerChannelTitle": "mCoding",
        "videoOwnerChannelId": "UCaiL2GDNpLYH6Wokkk1VNcg"
      },
      "contentDetails": {
        "videoId": "DnKxKFXB4NQ",
        "videoPublishedAt": "2020-12-12T16:00:13Z"
      }
    },
    {
      "kind": "youtube#playlistItem",
      "etag": "0UKSmHTVSMI3DZNYAVxbglsGq1U",
      "id": "UExJamhmbHVoTmQ5OHpTcEtzZjY5YXJEVW0xRHFiZTBibi43NDhFRTgwOTRERTU4Rjg3",
      "snippet": {
        "publishedAt": "2021-08-15T21:57:23Z",
        "channelId": "UCqsUJL5xIWuidR7sIrPLhAw",
        "title": "The Fastest Way to Loop in Python - An Unfortunate Truth",
        "description": "What is faster, a for loop, a while loop, or something else? In this video, we try several different ways to accomplish a looping task and discover which is fastest.\n\n\u2015 mCoding with James Murphy (https://mcoding.io)\n\nSource code: https://github.com/mCodingLLC/VideosSampleCode\n\nAFFILIATES AND REFERRALS\n---------------------------------------------------\nAutomatically Improve Python Code Quality: https://sourcery.ai/?utm_source=YouTube&utm_campaign=mcoding&utm_medium=aff\n\nSUPPORT ME \u2b50\n---------------------------------------------------\nSign up on Patreon to get your donor role and early access to videos!\nhttps://patreon.com/mCoding\n\nFeeling generous but don't have a Patreon? Donate via PayPal! (No sign up needed.)\nhttps://www.paypal.com/donate/?hosted_button_id=VJY5SLZ8BJHEE\n\nWant to donate crypto? Check out the rest of my supported donations on my website!\nhttps://mcoding.io/donate\n\nBE ACTIVE IN MY COMMUNITY \ud83d\ude04\n---------------------------------------------------\nDiscord: https://discord.gg/Ye9yJtZQuN\nGithub: https://github.com/mCodingLLC/\nReddit: https://www.reddit.com/r/mCoding/\nFacebook: https://www.facebook.com/james.mcoding",
        "thumbnails": {
          "default": {
            "url": "https://i.ytimg.com/vi/Qgevy75co8c/default.jpg",
            "width": 120,
            "height": 90
          },
          "medium": {
            "url": "https://i.ytimg.com/vi/Qgevy75co8c/mqdefault.jpg",
            "width": 320,
            "height": 180
          },
          "high": {
            "url": "https://i.ytimg.com/vi/Qgevy75co8c/hqdefault.jpg",
            "width": 480,
            "height": 360
          },
          "standard": {
            "url": "https://i.ytimg.com/vi/Qgevy75co8c/sddefault.jpg",
            "width": 640,
            "height": 480
          },
          "maxres": {
            "url": "https://i.ytimg.com/vi/Qgevy75co8c/maxresdefault.jpg",
            "width": 1280,
            "height": 720
          }
        },
        "channelTitle": "Donald Thompson",
        "playlistId": "PLIjhfluhNd98zSpKsf69arDUm1Dqbe0bn",
        "position": 81,
        "resourceId": {
          "kind": "youtube#video",
          "videoId": "Qgevy75co8c"
        },
        "videoOwnerChannelTitle": "mCoding",
        "videoOwnerChannelId": "UCaiL2GDNpLYH6Wokkk1VNcg"
      },
      "contentDetails": {
        "videoId": "Qgevy75co8c",
        "videoPublishedAt": "2020-12-19T15:00:09Z"
      }
    },
    {
      "kind": "youtube#playlistItem",
      "etag": "qbMGzL6aMq80RxWVCxF809E0ddA",
      "id": "UExJamhmbHVoTmQ5OHpTcEtzZjY5YXJEVW0xRHFiZTBibi44Mjc5REFBRUE2MTdFRDU0",
      "snippet": {
        "publishedAt": "2021-08-15T21:57:17Z",
        "channelId": "UCqsUJL5xIWuidR7sIrPLhAw",
        "title": "Python dataclasses will save you HOURS, also featuring attrs",
        "description": "In this video we learn about dataclasses and how to use them, as well as the related attrs library that dataclasses were based on.\n\nNote: As of Python 3.10 dataclasses DO support slots.\n\n\u2015 mCoding with James Murphy (https://mcoding.io)\n\nSource code: https://github.com/mCodingLLC/VideosSampleCode\nattrs library: https://www.attrs.org/en/stable/examples.html\n\nSUPPORT ME \u2b50\n---------------------------------------------------\nSign up on Patreon to get your donor role and early access to videos!\nhttps://patreon.com/mCoding\n\nFeeling generous but don't have a Patreon? Donate via PayPal! (No sign up needed.)\nhttps://www.paypal.com/donate/?hosted_button_id=VJY5SLZ8BJHEE\n\nWant to donate crypto? Check out the rest of my supported donations on my website!\nhttps://mcoding.io/donate\n\nBE ACTIVE IN MY COMMUNITY \ud83d\ude04\n---------------------------------------------------\nDiscord: https://discord.gg/Ye9yJtZQuN\nGithub: https://github.com/mCodingLLC/\nReddit: https://www.reddit.com/r/mCoding/\nFacebook: https://www.facebook.com/james.mcoding",
        "thumbnails": {
          "default": {
            "url": "https://i.ytimg.com/vi/vBH6GRJ1REM/default.jpg",
            "width": 120,
            "height": 90
          },
          "medium": {
            "url": "https://i.ytimg.com/vi/vBH6GRJ1REM/mqdefault.jpg",
            "width": 320,
            "height": 180
          },
          "high": {
            "url": "https://i.ytimg.com/vi/vBH6GRJ1REM/hqdefault.jpg",
            "width": 480,
            "height": 360
          },
          "standard": {
            "url": "https://i.ytimg.com/vi/vBH6GRJ1REM/sddefault.jpg",
            "width": 640,
            "height": 480
          },
          "maxres": {
            "url": "https://i.ytimg.com/vi/vBH6GRJ1REM/maxresdefault.jpg",
            "width": 1280,
            "height": 720
          }
        },
        "channelTitle": "Donald Thompson",
        "playlistId": "PLIjhfluhNd98zSpKsf69arDUm1Dqbe0bn",
        "position": 82,
        "resourceId": {
          "kind": "youtube#video",
          "videoId": "vBH6GRJ1REM"
        },
        "videoOwnerChannelTitle": "mCoding",
        "videoOwnerChannelId": "UCaiL2GDNpLYH6Wokkk1VNcg"
      },
      "contentDetails": {
        "videoId": "vBH6GRJ1REM",
        "videoPublishedAt": "2021-04-04T13:00:16Z"
      }
    },
    {
      "kind": "youtube#playlistItem",
      "etag": "_HySmJIb1UE8IhdE5xloQYf1Eek",
      "id": "UExJamhmbHVoTmQ5OHpTcEtzZjY5YXJEVW0xRHFiZTBibi5DMkU4NTY1QUFGQTYwMDE3",
      "snippet": {
        "publishedAt": "2021-08-15T18:10:00Z",
        "channelId": "UCqsUJL5xIWuidR7sIrPLhAw",
        "title": "Python Generators Explained",
        "description": "Welcome back to another YouTube video! In this video, I will be talking about generators in Python. Generators are similar to iterators but a more advanced concept in the Python language. However, they are not too complicated and anyone should be able to follow along.\n\n\ud83d\udcbb Thanks to HiCounselor for sponsoring this video! Apply to their next cohort to land your dream job in tech here: https://hicounselor.com/ HiCounsoler not only provides great learning resources but also has great interview prep material!\n\n\u2b50\ufe0f Timestamps \u2b50\ufe0f\n00:00 | Overview\n01:43 | Generators vs Iterators\n02:40 | Iterators Explained\n08:33 | next()\n13:58 | iter()\n15:24 | Creating Legacy Iterators\n19:22 | Creating Generators\n23:15 | Generators Use Case\n26:58 | Generator Comprehensions\n\n\u25fc\ufe0f\u25fc\ufe0f\u25fc\ufe0f\u25fc\ufe0f\u25fc\ufe0f\u25fc\ufe0f\u25fc\ufe0f\u25fc\ufe0f\u25fc\ufe0f\u25fc\ufe0f\u25fc\ufe0f\u25fc\ufe0f\u25fc\ufe0f\u25fc\ufe0f\n\ud83d\udcb0 Courses & Merch \ud83d\udcb0 \n\ud83d\udcbb The Fundamentals of Programming w/ Python: https://tech-with-tim.teachable.com/p/the-fundamentals-of-programming-with-python \n\ud83d\udc55 Merchandise: https://teespring.com/stores/tech-with-tim-merch-shop \n\n\ud83d\udd17 Social Medias \ud83d\udd17 \n\ud83d\udcf8 Instagram: https://www.instagram.com/tech_with_tim \n\ud83d\udcf1 Twitter: https://twitter.com/TechWithTimm \n\u2b50 Discord: https://discord.gg/twt\n\ud83d\udcdd LinkedIn: https://www.linkedin.com/in/tim-ruscica-82631b179/ \n\ud83c\udf0e Website: https://techwithtim.net \n\ud83d\udcc2 GitHub: https://github.com/techwithtim \n\ud83d\udd0a Podcast: https://anchor.fm/tech-with-tim \n\n\ud83c\udfac My YouTube Gear \ud83c\udfac \n\ud83c\udfa5 Main Camera (EOS Canon 90D): https://amzn.to/3cY23y9 \n\ud83c\udfa5 Secondary Camera (Panasonic Lumix G7): https://amzn.to/3fl2iEV \n\ud83d\udcf9 Main Lens (EFS 24mm f/2.8): https://amzn.to/2Yuol5r \n\ud83d\udd79 Tripod: https://amzn.to/3hpSprv \n\ud83c\udfa4 Main Microphone (Rode NT1): https://amzn.to/2HrZxXc\n\ud83c\udfa4 Secondary Microphone (Synco Wireless Lapel System): https://amzn.to/3e07Swl \n\ud83c\udfa4 Third Microphone (Rode NTG4+): https://amzn.to/3oi0v8Z\n\u2600\ufe0f Lights: https://amzn.to/2ApeiXr \n\u2328 Keyboard (Daskeyboard 4Q): https://amzn.to/2YpN5vm \n\ud83d\uddb1 Mouse (Logitech MX Master): https://amzn.to/2HsmRDN\n\ud83d\udcf8 Webcam (Logitech 1080p Pro): https://amzn.to/2B2IXcQ \n\ud83d\udce2 Speaker (Beats Pill): https://amzn.to/2XYc5ef \n\ud83c\udfa7 Headphones (Bose Quiet Comfort 35): https://amzn.to/2MWbl3e \n\ud83c\udf1e Lamp (BenQ E-reading Lamp): https://amzn.to/3e0UCr8 \n\ud83c\udf1e Secondary Lamp (BenQ Screenbar Plus): https://amzn.to/30Dtafi \n\ud83d\udcbb Monitor (BenQ EX2780Q): https://amzn.to/2HsmUPZ\n\ud83d\udcbb Monitor (LG Ultrawide 34WN750): https://amzn.to/3dSD7tS\n\ud83c\udf99 Mic Boom Arm (Rode PSA 1): https://amzn.to/30EZw9m \n\ud83c\udf9a Audio Interface (Focusrite Scarlet 4i4): https://amzn.to/2TjXsih\n\n\ud83d\udcb8 Donations \ud83d\udcb8 \n\ud83d\udcb5 One-Time Donations: https://www.paypal.com/donate?hosted_button_id=CU9FV329ADNT8\n\ud83d\udcb0 Patreon: https://www.patreon.com/techwithtim\n\u25fc\ufe0f\u25fc\ufe0f\u25fc\ufe0f\u25fc\ufe0f\u25fc\ufe0f\u25fc\ufe0f\u25fc\ufe0f\u25fc\ufe0f\u25fc\ufe0f\u25fc\ufe0f\u25fc\ufe0f\u25fc\ufe0f\u25fc\ufe0f\u25fc\ufe0f\n\n\u2b50\ufe0f Tags \u2b50\ufe0f\n- Tech With Tim\n- Generators\n- Generators Explained\n- Iterators\n- Python\n- HiCounselor\n\n\u2b50\ufe0f Hashtags \u2b50\ufe0f\n#TechWithTim #Generators1",
        "thumbnails": {
          "default": {
            "url": "https://i.ytimg.com/vi/u3T7hmLthUU/default.jpg",
            "width": 120,
            "height": 90
          },
          "medium": {
            "url": "https://i.ytimg.com/vi/u3T7hmLthUU/mqdefault.jpg",
            "width": 320,
            "height": 180
          },
          "high": {
            "url": "https://i.ytimg.com/vi/u3T7hmLthUU/hqdefault.jpg",
            "width": 480,
            "height": 360
          },
          "standard": {
            "url": "https://i.ytimg.com/vi/u3T7hmLthUU/sddefault.jpg",
            "width": 640,
            "height": 480
          },
          "maxres": {
            "url": "https://i.ytimg.com/vi/u3T7hmLthUU/maxresdefault.jpg",
            "width": 1280,
            "height": 720
          }
        },
        "channelTitle": "Donald Thompson",
        "playlistId": "PLIjhfluhNd98zSpKsf69arDUm1Dqbe0bn",
        "position": 83,
        "resourceId": {
          "kind": "youtube#video",
          "videoId": "u3T7hmLthUU"
        },
        "videoOwnerChannelTitle": "Tech With Tim",
        "videoOwnerChannelId": "UC4JX40jDee_tINbkjycV4Sg"
      },
      "contentDetails": {
        "videoId": "u3T7hmLthUU",
        "videoPublishedAt": "2021-08-03T15:00:37Z"
      }
    },
    {
      "kind": "youtube#playlistItem",
      "etag": "RaMZ3HXXzhKaFpITj440SLLx2ws",
      "id": "UExJamhmbHVoTmQ5OHpTcEtzZjY5YXJEVW0xRHFiZTBibi4yQUE2Q0JEMTk4NTM3RTZC",
      "snippet": {
        "publishedAt": "2021-08-15T12:00:35Z",
        "channelId": "UCqsUJL5xIWuidR7sIrPLhAw",
        "title": "Python Algorithms for Interviews",
        "description": "Learn about common algorithm concepts in Python and how to solve algorithm challenges you may encounter in an interview.\n\n\u2b50\ufe0fContents\u2b50\ufe0f\n\u2328\ufe0f (0:00:00) Big O Notation\n\u2328\ufe0f (0:22:08) Big O Examples\n\u2328\ufe0f (0:43:01) Array Sequences\n\u2328\ufe0f (0:53:23) Dynamic Arrays\n\u2328\ufe0f (1:06:26) Array Algorithms\n\u2328\ufe0f (1:20:40) Largest Sum\n\u2328\ufe0f (1:31:27) How to Reverse a String\n\u2328\ufe0f (1:57:32) Array Analysis\n\u2328\ufe0f (2:00:00) Array Common Elements\n\u2328\ufe0f (2:28:54) Minesweeper\n\u2328\ufe0f (3:08:16) Frequent Count\n\u2328\ufe0f (3:16:58) Unique Characters in Strings\n\u2328\ufe0f (3:28:35) Non-Repeat Elements in Array\n\nTutorial from CupofCode 01. Check out their YouTube channel: https://www.youtube.com/channel/UCwptawgtdrxkG2kWY0OO5mQ\n\n--\n\nLearn to code for free and get a developer job: https://www.freecodecamp.org\n\nRead hundreds of articles on programming: https://medium.freecodecamp.org\n\nAnd subscribe for new videos on technology: https://youtube.com/subscription_center?add_user=freecodecamp",
        "thumbnails": {
          "default": {
            "url": "https://i.ytimg.com/vi/p65AHm9MX80/default.jpg",
            "width": 120,
            "height": 90
          },
          "medium": {
            "url": "https://i.ytimg.com/vi/p65AHm9MX80/mqdefault.jpg",
            "width": 320,
            "height": 180
          },
          "high": {
            "url": "https://i.ytimg.com/vi/p65AHm9MX80/hqdefault.jpg",
            "width": 480,
            "height": 360
          },
          "standard": {
            "url": "https://i.ytimg.com/vi/p65AHm9MX80/sddefault.jpg",
            "width": 640,
            "height": 480
          },
          "maxres": {
            "url": "https://i.ytimg.com/vi/p65AHm9MX80/maxresdefault.jpg",
            "width": 1280,
            "height": 720
          }
        },
        "channelTitle": "Donald Thompson",
        "playlistId": "PLIjhfluhNd98zSpKsf69arDUm1Dqbe0bn",
        "position": 84,
        "resourceId": {
          "kind": "youtube#video",
          "videoId": "p65AHm9MX80"
        },
        "videoOwnerChannelTitle": "freeCodeCamp.org",
        "videoOwnerChannelId": "UC8butISFwT-Wl7EV0hUK0BQ"
      },
      "contentDetails": {
        "videoId": "p65AHm9MX80",
        "videoPublishedAt": "2019-02-19T13:52:50Z"
      }
    },
    {
      "kind": "youtube#playlistItem",
      "etag": "nRaf0peLOsehj73cY9aE8iP8jKs",
      "id": "UExJamhmbHVoTmQ5OHpTcEtzZjY5YXJEVW0xRHFiZTBibi5DQ0MyQ0Y4Mzg0M0VGOEYw",
      "snippet": {
        "publishedAt": "2021-08-15T07:31:29Z",
        "channelId": "UCqsUJL5xIWuidR7sIrPLhAw",
        "title": "How To Master Python",
        "description": "How To Master Python\nCheck out Kite: https://kite.com/download/?utm_medium=referral&utm_source=youtube&utm_campaign=kallehallden&utm_content=how-to-master-python\n\nGet access to my programming courses: https://patreon.com/hallden\n\nFollow me on instagram: https://www.instagram.com/kallehallden/\n\nLiveCoder channel: https://www.youtube.com/channel/UCxv8jMd-ABJboKo1a_LtuNA\n\n\"Clean Code Friday\"\nIf you want to receive one short email from me every week, where I go through a few of the most useful things I have explored and discovered this week. Things like; favourite apps, articles, podcasts, books, coding tips and tricks. Then feel free to join https://kalletech.com/cleancode/\n\nCONTACT: contact@kalletech.com\n\nFollow me on:\n\nTWITCH: https://www.twitch.tv/kallehallden\nINSTAGRAM: https://www.instagram.com/kallehallden/\nTWITTER: https://twitter.com/kallehallden\nGITHUB: https://github.com/kallehallden\nDISCORD: https://discord.gg/BvXYMdVdCz\nPATREON:  https://patreon.com/hallden \n\nVIDEO EDITOR: https://editingmachine.com (use coupon code KALLE to get 50% off your first month)\n\n\n--------------------------------------------------------------------------------------------------------\nGEAR:\nhttps://kalletech.com/tech/\n\n\nScript Writer Jane Tracy's Blog: https://dev.to/tracycss\n\nResources:\nAutomate the boring stuff with Python - https://amzn.to/2KVBh0Q\nFreecodecamp - https://www.freecodecamp.org/news/best-python-tutorial/\nPython.org tutorial - https://www.python.org/about/gettingstarted/\nPython documentation - https://www.python.org/doc/\n\nOpen source projects:\nTensorFlow - https://github.com/tensorflow/models\nFlask - https://github.com/pallets/flask \nDjango - https://github.com/django/django\nKeras - https://github.com/keras-team/keras\nYoutube-dl - https://github.com/rg3/youtube-dl\nFace Recognition - https://github.com/informramiz/opencv-face-recognition-python\nAnsible - https://github.com/ansible/ansible\nHttpie - https://github.com/jakubroztocil/httpie \nPandas - https://github.com/pandas-dev/pandas\nScikit - https://github.com/scikit-learn",
        "thumbnails": {
          "default": {
            "url": "https://i.ytimg.com/vi/IUZTbEaDo0U/default.jpg",
            "width": 120,
            "height": 90
          },
          "medium": {
            "url": "https://i.ytimg.com/vi/IUZTbEaDo0U/mqdefault.jpg",
            "width": 320,
            "height": 180
          },
          "high": {
            "url": "https://i.ytimg.com/vi/IUZTbEaDo0U/hqdefault.jpg",
            "width": 480,
            "height": 360
          },
          "standard": {
            "url": "https://i.ytimg.com/vi/IUZTbEaDo0U/sddefault.jpg",
            "width": 640,
            "height": 480
          },
          "maxres": {
            "url": "https://i.ytimg.com/vi/IUZTbEaDo0U/maxresdefault.jpg",
            "width": 1280,
            "height": 720
          }
        },
        "channelTitle": "Donald Thompson",
        "playlistId": "PLIjhfluhNd98zSpKsf69arDUm1Dqbe0bn",
        "position": 85,
        "resourceId": {
          "kind": "youtube#video",
          "videoId": "IUZTbEaDo0U"
        },
        "videoOwnerChannelTitle": "Kalle Hallden",
        "videoOwnerChannelId": "UCWr0mx597DnSGLFk1WfvSkQ"
      },
      "contentDetails": {
        "videoId": "IUZTbEaDo0U",
        "videoPublishedAt": "2020-12-25T11:00:16Z"
      }
    },
    {
      "kind": "youtube#playlistItem",
      "etag": "MNflpvhdwownoaTmjohPE8T1-cc",
      "id": "UExJamhmbHVoTmQ5OHpTcEtzZjY5YXJEVW0xRHFiZTBibi43MTI1NDIwOTMwQjIxMzNG",
      "snippet": {
        "publishedAt": "2021-08-15T07:29:22Z",
        "channelId": "UCqsUJL5xIWuidR7sIrPLhAw",
        "title": "An Introduction to Software Design - With Python",
        "description": "This video is designed to introduce you to software design principles in python. This software design tutorial is aimed towards beginner python programmers looking to step up their knowledge and advance to the next level. This is merely an introduction and meant to get you thinking about a few principles and patterns that you can apply to write better, cleaner code.\n\n\ud83d\udcda The reference for this video is the book: \"Practices of the Python Pro\" by Dane Hillard. \n\ud83d\udd17 Get it here: https://www.manning.com/books/practices-of-the-python-pro?a_aid=techwithtim&a_bid=3ff2fffc\nI've started reading it and must say I'm impressed. It teaches software design in python and covers design principles and design patterns not covered in this video.\n\n\u25fe\u25fe\u25fe\u25fe\u25fe\n\ud83d\udcbb Enroll in The Fundamentals of Programming w/ Python \nhttps://tech-with-tim.teachable.com/p/the-fundamentals-of-programming-with-python\n\n\ud83d\udcf8 Instagram: https://www.instagram.com/tech_with_tim\n\ud83c\udf0e Website https://techwithtim.net\n\ud83d\udcf1 Twitter: https://twitter.com/TechWithTimm\n\u2b50 Discord: https://discord.gg/pr2k55t\n\ud83d\udcdd LinkedIn: https://www.linkedin.com/in/tim-ruscica-82631b179/\n\ud83d\udcc2 GitHub: https://github.com/techwithtim\n\ud83d\udd0a Podcast: https://anchor.fm/tech-with-tim\n\n\ud83d\udcb5 One-Time Donations: https://www.paypal.com/donate/?token=m_JfrPK7DsK4PLk0CxNnv4VPutjqSldorAmgQIQnMozUwwQw93vdul-yhU06IwAuig15uG&country.x=CA&locale.x=\n\ud83d\udcb0 Patreon: https://www.patreon.com/techwithtim\n\u25fe\u25fe\u25fe\u25fe\u25fe\u25fe\n\n\u26a1 Please leave a LIKE and SUBSCRIBE for more content! \u26a1\n\n\u2b50 Tags \u2b50\n- Tech With Tim\n- Python Tutorials\n- Software Design\n- Design Principles Python\n- Python Software Design\n- Designing Programs in Python\n- Design Patterns\n\n\u2b50 Hashtags \u2b50\n#Python #SoftwareDesign",
        "thumbnails": {
          "default": {
            "url": "https://i.ytimg.com/vi/-njsRb8Tn70/default.jpg",
            "width": 120,
            "height": 90
          },
          "medium": {
            "url": "https://i.ytimg.com/vi/-njsRb8Tn70/mqdefault.jpg",
            "width": 320,
            "height": 180
          },
          "high": {
            "url": "https://i.ytimg.com/vi/-njsRb8Tn70/hqdefault.jpg",
            "width": 480,
            "height": 360
          },
          "standard": {
            "url": "https://i.ytimg.com/vi/-njsRb8Tn70/sddefault.jpg",
            "width": 640,
            "height": 480
          },
          "maxres": {
            "url": "https://i.ytimg.com/vi/-njsRb8Tn70/maxresdefault.jpg",
            "width": 1280,
            "height": 720
          }
        },
        "channelTitle": "Donald Thompson",
        "playlistId": "PLIjhfluhNd98zSpKsf69arDUm1Dqbe0bn",
        "position": 86,
        "resourceId": {
          "kind": "youtube#video",
          "videoId": "-njsRb8Tn70"
        },
        "videoOwnerChannelTitle": "Tech With Tim",
        "videoOwnerChannelId": "UC4JX40jDee_tINbkjycV4Sg"
      },
      "contentDetails": {
        "videoId": "-njsRb8Tn70",
        "videoPublishedAt": "2020-04-02T13:00:01Z"
      }
    },
    {
      "kind": "youtube#playlistItem",
      "etag": "BWQboGb2sKYF5PbKxo-S5Rb7pr0",
      "id": "UExJamhmbHVoTmQ5OHpTcEtzZjY5YXJEVW0xRHFiZTBibi5DNzE1RjZEMUZCMjA0RDBB",
      "snippet": {
        "publishedAt": "2021-08-15T07:15:17Z",
        "channelId": "UCqsUJL5xIWuidR7sIrPLhAw",
        "title": "Neural Networks from Scratch - P.9 Introducing Optimization and derivatives",
        "description": "Introducing the challenge of optimization and the concepts of derivatives\n\nNNFS series playlist: https://www.youtube.com/playlist?list=PLQVvvaa0QuDcjD5BAw2DxE6OF2tius3V3\n\nNeural Networks from Scratch book: https://nnfs.io\n\nChannel membership: https://www.youtube.com/channel/UCfzlCWGWYyIQ0aLC5w48gBQ/join\nDiscord: https://discord.gg/sentdex\nReddit: https://www.reddit.com/r/sentdex/ \nSupport the content: https://pythonprogramming.net/support-donate/\nTwitter: https://twitter.com/sentdex\nInstagram: https://instagram.com/sentdex\nFacebook: https://www.facebook.com/pythonprogramming.net/\nTwitch: https://www.twitch.tv/sentdex\n\n#deeplearning #machinelearning #nnfs",
        "thumbnails": {
          "default": {
            "url": "https://i.ytimg.com/vi/txh3TQDwP1g/default.jpg",
            "width": 120,
            "height": 90
          },
          "medium": {
            "url": "https://i.ytimg.com/vi/txh3TQDwP1g/mqdefault.jpg",
            "width": 320,
            "height": 180
          },
          "high": {
            "url": "https://i.ytimg.com/vi/txh3TQDwP1g/hqdefault.jpg",
            "width": 480,
            "height": 360
          },
          "standard": {
            "url": "https://i.ytimg.com/vi/txh3TQDwP1g/sddefault.jpg",
            "width": 640,
            "height": 480
          },
          "maxres": {
            "url": "https://i.ytimg.com/vi/txh3TQDwP1g/maxresdefault.jpg",
            "width": 1280,
            "height": 720
          }
        },
        "channelTitle": "Donald Thompson",
        "playlistId": "PLIjhfluhNd98zSpKsf69arDUm1Dqbe0bn",
        "position": 87,
        "resourceId": {
          "kind": "youtube#video",
          "videoId": "txh3TQDwP1g"
        },
        "videoOwnerChannelTitle": "sentdex",
        "videoOwnerChannelId": "UCfzlCWGWYyIQ0aLC5w48gBQ"
      },
      "contentDetails": {
        "videoId": "txh3TQDwP1g",
        "videoPublishedAt": "2021-08-02T22:08:08Z"
      }
    },
    {
      "kind": "youtube#playlistItem",
      "etag": "2Pd5sXY6WSc0-EHyfe1gZELuew8",
      "id": "UExJamhmbHVoTmQ5OHpTcEtzZjY5YXJEVW0xRHFiZTBibi45NzUwQkI1M0UxNThBMkU0",
      "snippet": {
        "publishedAt": "2021-08-15T07:14:27Z",
        "channelId": "UCqsUJL5xIWuidR7sIrPLhAw",
        "title": "You should put this in all your Python scripts",
        "description": "Python's favorite unexplained incantation: def main if name main. In this video I explain why your Python scripts should use this idiom. It's not strictly necessary, but you will be a better Python coder if you follow established conventions that improve the readability of your code.\n\n\u2015 mCoding with James Murphy (https://mcoding.io)\n\nSource code: https://github.com/mCodingLLC/VideosSampleCode\nStackOverflow on the topic: https://stackoverflow.com/questions/419163/what-does-if-name-main-do\nPython docs: https://docs.python.org/3/reference/toplevel_components.html#complete-python-programs\n\nSUPPORT ME \u2b50\n---------------------------------------------------\nSign up on Patreon to get your donor role and early access to videos!\nhttps://patreon.com/mCoding\n\nFeeling generous but don't have a Patreon? Donate via PayPal! (No sign up needed.)\nhttps://www.paypal.com/donate/?hosted_button_id=VJY5SLZ8BJHEE\n\nWant to donate crypto? Check out the rest of my supported donations on my website!\nhttps://mcoding.io/donate\n\nTop patrons and donors:\nJameson, John M, Laura M, Pieter G, Vahnekie, Sigmanificient\n\nBE ACTIVE IN MY COMMUNITY \ud83d\ude04\n---------------------------------------------------\nDiscord: https://discord.gg/Ye9yJtZQuN\nGithub: https://github.com/mCodingLLC/\nReddit: https://www.reddit.com/r/mCoding/\nFacebook: https://www.facebook.com/james.mcoding\n\nCHAPTERS\n---------------------------------------------------\n0:00 Intro\n0:58 Dunder name\n1:47 Why if name main\n3:36 Why def main\n4:59 Pickle example\n5:42 Multiprocessing example\n6:42 Main function entry point\n7:07 Outro",
        "thumbnails": {
          "default": {
            "url": "https://i.ytimg.com/vi/g_wlZ9IhbTs/default.jpg",
            "width": 120,
            "height": 90
          },
          "medium": {
            "url": "https://i.ytimg.com/vi/g_wlZ9IhbTs/mqdefault.jpg",
            "width": 320,
            "height": 180
          },
          "high": {
            "url": "https://i.ytimg.com/vi/g_wlZ9IhbTs/hqdefault.jpg",
            "width": 480,
            "height": 360
          }
        },
        "channelTitle": "Donald Thompson",
        "playlistId": "PLIjhfluhNd98zSpKsf69arDUm1Dqbe0bn",
        "position": 88,
        "resourceId": {
          "kind": "youtube#video",
          "videoId": "g_wlZ9IhbTs"
        },
        "videoOwnerChannelTitle": "mCoding",
        "videoOwnerChannelId": "UCaiL2GDNpLYH6Wokkk1VNcg"
      },
      "contentDetails": {
        "videoId": "g_wlZ9IhbTs",
        "videoPublishedAt": "2021-07-24T13:21:44Z"
      }
    },
    {
      "kind": "youtube#playlistItem",
      "etag": "uHiN_JKM8PE8F53Z_9fnlV_Mhq8",
      "id": "UExJamhmbHVoTmQ5OHpTcEtzZjY5YXJEVW0xRHFiZTBibi4zRjM0MkVCRTg0MkYyQTM0",
      "snippet": {
        "publishedAt": "2021-08-15T07:13:43Z",
        "channelId": "UCqsUJL5xIWuidR7sIrPLhAw",
        "title": "The Complete Python Course For Beginners",
        "description": "This python course is designed to take you from beginner to pro in the python language. This python course is designed to teach you everything you need to know about python. It assumes no prior knowledge and is a perfect python tutorial for beginners. This course is split into 4 main sections: Beginner Python Programming, Object Oriented Programming, Intermediate Python Programming and Expert Python Features.\n\n\ud83c\udf99 Subscribe to my second channel for weekly podcasts! https://www.youtube.com/channel/UCSATlCAUi7R0Ik-wsZb2gOA\n\n\ud83d\udd17 Python Download: https://www.python.org/downloads/\n\nNote: There may be some missing links and resources. Leave a comment if so and I'll try my best to add them!\n\n\u2b50\ufe0f Time Stamps \u2b50\ufe0f\n\n\ud83d\udcd5 Beginner Python Programming \ud83d\udcd5\n(00:00:00) Introduction\n(00:01:12) Variables & Data Types\n(00:12:21) Basic Operators & Input\n(00:24:11) Conditions\n(00:32:54) if-elif-else\n(00:45:56) Chained Conditionals & Nested Statements\n(00:53:29) For Loops\n(00:59:29) While Loops\n(01:05:51) List's and Tuples\n(01:14:09) Iteration by Item\n(01:20:13) String Methods\n(01:26:38) Slice Operator\n(01:33:41) Functions\n(01:42:10) How to Read a Text File\n(01:50:31) Writing to a Text File\n(01:54:50) Using .count() and .find()\n(02:01:47) Introduction to Modular Programming\n(02:09:28) Optional Parameters\n(02:15:36) Try and Except (Error Handling)\n(02:20:29) Global vs Local Variables\n\n\ud83d\udcd7 Object Oriented Programming \ud83d\udcd7\n(02:29:16) Introduction to Objects\n(02:39:02) Creating Classes\n(02:50:37) Inheritance\n(03:03:13) Overloading Methods\n(03:16:01) Static Methods and Class Methods\n(03:25:44) Private and Public Classes\n\n\ud83d\udcd8 Intermediate Python \ud83d\udcd8\n(03:31:40) Optional Parameters\n(03:41:13) Static and Class Methods\n(03:50:24) Map Function\n(03:56:15) Filter Function\n(04:03:12) Lambda Function\n(04:10:12) Introduction to Collections\n(04:22:17) Named Tuple\n(04:30:20) Deque\n\n\ud83d\udcd9 Advanced Python \ud83d\udcd9\n(04:40:12) Overview of Python\n(04:58:34) Dunder/Magic Methods\n(05:12:23) Metaclasses\n(05:34:10) Decorators\n(05:50:29) Generators\n(06:04:32) Context Managers\n\n\u25fe\u25fe\u25fe\u25fe\u25fe\n\ud83d\udcbb Enroll in The Fundamentals of Programming w/ Python \nhttps://tech-with-tim.teachable.com/p/the-fundamentals-of-programming-with-python\n\n\ud83d\udcf8 Instagram: https://www.instagram.com/tech_with_tim\n\ud83c\udf0e Website https://techwithtim.net\n\ud83d\udcf1 Twitter: https://twitter.com/TechWithTimm\n\u2b50 Discord: https://discord.gg/pr2k55t\n\ud83d\udcdd LinkedIn: https://www.linkedin.com/in/tim-ruscica-82631b179/\n\ud83d\udcc2 GitHub: https://github.com/techwithtim\n\ud83d\udd0a Podcast: https://anchor.fm/tech-with-tim\n\n\ud83d\udcb5 One-Time Donations: https://www.paypal.com/donate/?token=m_JfrPK7DsK4PLk0CxNnv4VPutjqSldorAmgQIQnMozUwwQw93vdul-yhU06IwAuig15uG&country.x=CA&locale.x=\n\ud83d\udcb0 Patreon: https://www.patreon.com/techwithtim\n\u25fe\u25fe\u25fe\u25fe\u25fe\u25fe\n\n\u26a1 Please leave a LIKE and SUBSCRIBE for more content! \u26a1\n\n\u2b50 Tags \u2b50\n- Tech With Tim\n- Python Tutorials\n- Python Course\n- Learn Python\n- Complete Python Tutorial\n\n\u2b50 Hashtags \u2b50\n#python",
        "thumbnails": {
          "default": {
            "url": "https://i.ytimg.com/vi/sxTmJE4k0ho/default.jpg",
            "width": 120,
            "height": 90
          },
          "medium": {
            "url": "https://i.ytimg.com/vi/sxTmJE4k0ho/mqdefault.jpg",
            "width": 320,
            "height": 180
          },
          "high": {
            "url": "https://i.ytimg.com/vi/sxTmJE4k0ho/hqdefault.jpg",
            "width": 480,
            "height": 360
          },
          "standard": {
            "url": "https://i.ytimg.com/vi/sxTmJE4k0ho/sddefault.jpg",
            "width": 640,
            "height": 480
          },
          "maxres": {
            "url": "https://i.ytimg.com/vi/sxTmJE4k0ho/maxresdefault.jpg",
            "width": 1280,
            "height": 720
          }
        },
        "channelTitle": "Donald Thompson",
        "playlistId": "PLIjhfluhNd98zSpKsf69arDUm1Dqbe0bn",
        "position": 89,
        "resourceId": {
          "kind": "youtube#video",
          "videoId": "sxTmJE4k0ho"
        },
        "videoOwnerChannelTitle": "Tech With Tim",
        "videoOwnerChannelId": "UC4JX40jDee_tINbkjycV4Sg"
      },
      "contentDetails": {
        "videoId": "sxTmJE4k0ho",
        "videoPublishedAt": "2020-05-08T13:00:36Z"
      }
    },
    {
      "kind": "youtube#playlistItem",
      "etag": "4l6Vx-3b_wKflNRdxI7qeZM5R5U",
      "id": "UExJamhmbHVoTmQ5OHpTcEtzZjY5YXJEVW0xRHFiZTBibi5GM0Q3M0MzMzY5NTJFNTdE",
      "snippet": {
        "publishedAt": "2021-08-15T07:13:36Z",
        "channelId": "UCqsUJL5xIWuidR7sIrPLhAw",
        "title": "5 Mini Python Projects - For Beginners",
        "description": "Welcome back to another video! In this video, I will be showing 5 mini python projects for beginners.\nI'll be showing you how I would create a template from scratch. Using this template, you can keep building and practicing your programming skills.\n\n\ud83d\udcbb AlgoExpert is the coding interview prep platform that I used to ace my Microsoft and Shopify interviews. Check it out and get a discount on the platform using the code \"techwithtim\" https://algoexpert.io/techwithtim\n\n\ud83d\udcc4 Resources \ud83d\udcc4\nProjects Code Download: https://github.com/techwithtim/5-Python-Projects-For-Beginners\nDownload VSCode: https://code.visualstudio.com/\nFix Pip (Windows): https://www.youtube.com/watch?v=AdUZArA-kZw\nFix Pip (Mac/Linux): https://www.youtube.com/watch?v=E-WhAS6qzsU&t=4s\nFernet Cryptography Documentation: https://cryptography.io/en/latest/fernet/\n\n\u2b50\ufe0f Timestamps \u2b50\ufe0f\n00:00 | Introduction\n02:09 | List of Projects\n02:53 | Environment Setup\n04:51 | Project #1 - Quiz Game\n25:05 | Project #2 - Number Guessing Game\n42:53 | Project #3 - Rock, Paper, Scissors\n57:44 | Project #4 - Choose Your Own Adventure \n01:09:53 | Project #5 - Password Managers (Most Advanced) \n\n\u25fc\ufe0f\u25fc\ufe0f\u25fc\ufe0f\u25fc\ufe0f\u25fc\ufe0f\u25fc\ufe0f\u25fc\ufe0f\u25fc\ufe0f\u25fc\ufe0f\u25fc\ufe0f\u25fc\ufe0f\u25fc\ufe0f\u25fc\ufe0f\u25fc\ufe0f\n\ud83d\udcb0 Courses & Merch \ud83d\udcb0 \n\ud83d\udcbb The Fundamentals of Programming w/ Python: https://tech-with-tim.teachable.com/p/the-fundamentals-of-programming-with-python \n\ud83d\udc55 Merchandise: https://teespring.com/stores/tech-with-tim-merch-shop \n\n\ud83d\udd17 Social Medias \ud83d\udd17 \n\ud83d\udcf8 Instagram: https://www.instagram.com/tech_with_tim \n\ud83d\udcf1 Twitter: https://twitter.com/TechWithTimm \n\u2b50 Discord: https://discord.gg/twt\n\ud83d\udcdd LinkedIn: https://www.linkedin.com/in/tim-ruscica-82631b179/ \n\ud83c\udf0e Website: https://techwithtim.net \n\ud83d\udcc2 GitHub: https://github.com/techwithtim \n\ud83d\udd0a Podcast: https://anchor.fm/tech-with-tim \n\n\ud83c\udfac My YouTube Gear \ud83c\udfac \n\ud83c\udfa5 Main Camera (EOS Canon 90D): https://amzn.to/3cY23y9 \n\ud83c\udfa5 Secondary Camera (Panasonic Lumix G7): https://amzn.to/3fl2iEV \n\ud83d\udcf9 Main Lens (EFS 24mm f/2.8): https://amzn.to/2Yuol5r \n\ud83d\udd79 Tripod: https://amzn.to/3hpSprv \n\ud83c\udfa4 Main Microphone (Rode NT1): https://amzn.to/2HrZxXc\n\ud83c\udfa4 Secondary Microphone (Synco Wireless Lapel System): https://amzn.to/3e07Swl \n\ud83c\udfa4 Third Microphone (Rode NTG4+): https://amzn.to/3oi0v8Z\n\u2600\ufe0f Lights: https://amzn.to/2ApeiXr \n\u2328 Keyboard (Daskeyboard 4Q): https://amzn.to/2YpN5vm \n\ud83d\uddb1 Mouse (Logitech MX Master): https://amzn.to/2HsmRDN\n\ud83d\udcf8 Webcam (Logitech 1080p Pro): https://amzn.to/2B2IXcQ \n\ud83d\udce2 Speaker (Beats Pill): https://amzn.to/2XYc5ef \n\ud83c\udfa7 Headphones (Bose Quiet Comfort 35): https://amzn.to/2MWbl3e \n\ud83c\udf1e Lamp (BenQ E-reading Lamp): https://amzn.to/3e0UCr8 \n\ud83c\udf1e Secondary Lamp (BenQ Screenbar Plus): https://amzn.to/30Dtafi \n\ud83d\udcbb Monitor (BenQ EX2780Q): https://amzn.to/2HsmUPZ\n\ud83d\udcbb Monitor (LG Ultrawide 34WN750): https://amzn.to/3dSD7tS\n\ud83c\udf99 Mic Boom Arm (Rode PSA 1): https://amzn.to/30EZw9m \n\ud83c\udf9a Audio Interface (Focusrite Scarlet 4i4): https://amzn.to/2TjXsih\n\n\ud83d\udcb8 Donations \ud83d\udcb8 \n\ud83d\udcb5 One-Time Donations: https://www.paypal.com/donate?hosted_button_id=CU9FV329ADNT8\n\ud83d\udcb0 Patreon: https://www.patreon.com/techwithtim\n\u25fc\ufe0f\u25fc\ufe0f\u25fc\ufe0f\u25fc\ufe0f\u25fc\ufe0f\u25fc\ufe0f\u25fc\ufe0f\u25fc\ufe0f\u25fc\ufe0f\u25fc\ufe0f\u25fc\ufe0f\u25fc\ufe0f\u25fc\ufe0f\u25fc\ufe0f\n\n\u2b50\ufe0f Tags \u2b50\ufe0f\n- Tech With Tim\n- Python Projects\n- Beginner Projects\n- Python For Beginners\n- 5 Mini Python Projects\n\n\u2b50\ufe0f Hashtags \u2b50\ufe0f\n#TechWithTim #PythonProjects",
        "thumbnails": {
          "default": {
            "url": "https://i.ytimg.com/vi/DLn3jOsNRVE/default.jpg",
            "width": 120,
            "height": 90
          },
          "medium": {
            "url": "https://i.ytimg.com/vi/DLn3jOsNRVE/mqdefault.jpg",
            "width": 320,
            "height": 180
          },
          "high": {
            "url": "https://i.ytimg.com/vi/DLn3jOsNRVE/hqdefault.jpg",
            "width": 480,
            "height": 360
          },
          "standard": {
            "url": "https://i.ytimg.com/vi/DLn3jOsNRVE/sddefault.jpg",
            "width": 640,
            "height": 480
          },
          "maxres": {
            "url": "https://i.ytimg.com/vi/DLn3jOsNRVE/maxresdefault.jpg",
            "width": 1280,
            "height": 720
          }
        },
        "channelTitle": "Donald Thompson",
        "playlistId": "PLIjhfluhNd98zSpKsf69arDUm1Dqbe0bn",
        "position": 90,
        "resourceId": {
          "kind": "youtube#video",
          "videoId": "DLn3jOsNRVE"
        },
        "videoOwnerChannelTitle": "Tech With Tim",
        "videoOwnerChannelId": "UC4JX40jDee_tINbkjycV4Sg"
      },
      "contentDetails": {
        "videoId": "DLn3jOsNRVE",
        "videoPublishedAt": "2021-06-10T15:00:06Z"
      }
    },
    {
      "kind": "youtube#playlistItem",
      "etag": "O1NQ9i0-BoClmS9soxVQQzvhq9Y",
      "id": "UExJamhmbHVoTmQ5OHpTcEtzZjY5YXJEVW0xRHFiZTBibi4yMDhBMkNBNjRDMjQxQTg1",
      "snippet": {
        "publishedAt": "2021-08-15T07:12:40Z",
        "channelId": "UCqsUJL5xIWuidR7sIrPLhAw",
        "title": "A* Pathfinding Visualization Tutorial - Python A* Path Finding Tutorial",
        "description": "This A* Path Finding tutorial will show you how to implement the a* search algorithm using python. We will be building a path finding visualizer tool to visualize the a star pathfinding algorithm as it runs. This astar pathfinding algorithm is an informed search algorithm which means it is much more efficient that your standard algorithms like breadth first search or depth first search.\n\n\u2b50\ufe0f Thanks to Simplilearn for sponsoring this video! Check out their data scientist masters program here: https://www.simplilearn.com/big-data-and-analytics/senior-data-scientist-masters-program-training?utm_source=Tim&utm_medium=affiliate-cpm&utm_campaign=product_review_July2020\n\n\ud83d\udcbe Source Code: https://techwithtim.net/wp-content/uploads/2020/07/astar.zip\n\n\u2b50\ufe0f Timestamps \u2b50\ufe0f\n00:00:00 Introduction\n00:03:17 - Algorithm Explanation\n00:19:22 - Implementation\n\n\u25fe\u25fe\u25fe\u25fe\u25fe\u25fe\u25fe\u25fe\u25fe\u25fe\u25fe\u25fe\u25fe\u25fe\u25fe\u25fe\u25fe\n\ud83d\udd0a Subscribe to my second channel for weekly podcasts! https://www.youtube.com/channel/UCSATlCAUi7R0Ik-wsZb2gOA\n\n\ud83d\udcb0 Courses & Merch \ud83d\udcb0\n\ud83d\udcbb The Fundamentals of Programming w/ Python: https://tech-with-tim.teachable.com/p/the-fundamentals-of-programming-with-python\n\ud83d\udc55 Merchandise: https://teespring.com/stores/tech-with-tim-merch-shop\n\n\ud83d\udd17 Social Medias \ud83d\udd17\n\ud83d\udcf8 Instagram: https://www.instagram.com/tech_with_tim\n\ud83d\udcf1  Twitter: https://twitter.com/TechWithTimm\n\u2b50 Discord: https://discord.gg/pr2k55t\n\ud83d\udcdd LinkedIn: https://www.linkedin.com/in/tim-ruscica-82631b179/\n\ud83c\udf0e Website: https://techwithtim.net\n\ud83d\udcc2 GitHub: https://github.com/techwithtim\n\ud83d\udd0a Podcast: https://anchor.fm/tech-with-tim\n\n\ud83c\udfac My YouTube Gear \ud83c\udfac\n\ud83c\udfa5 Main Camera (EOS Canon 90D): https://amzn.to/3cY23y9\n\ud83c\udfa5 Secondary Camera (Panasonic Lumix G7): https://amzn.to/3fl2iEV\n\ud83d\udcf9 Main Lens (EFS 24mm f/2.8): https://amzn.to/2Yuol5r\n\ud83d\udd79  Tripod: https://amzn.to/3hpSprv\n\ud83c\udfa4 Main Microphone (Rode VideoMic Pro): https://amzn.to/3d0KKMG\n\ud83c\udfa4 Secondary Microphone (Synco Wireless Lapel System): https://amzn.to/3e07Swl\n\ud83c\udfa4 Third Microphone (Blue Yeti USB Mic): https://amzn.to/3hoD625\n\u2600\ufe0f Lights: https://amzn.to/2ApeiXr\n\n\u2328 Keyboard (Daskeyboard 4Q): https://amzn.to/2YpN5vm\n\ud83d\uddb1  Mouse (Steelseries Rival 300): https://amzn.to/3cVTqnD\n\ud83d\udcf8 Webcam (Logitech 1080p Pro): https://amzn.to/2B2IXcQ\n\ud83d\udce2 Speaker (Beats Pill): https://amzn.to/2XYc5ef\n\ud83c\udfa7 Headphones (Bose Quiet Comfort 35): https://amzn.to/2MWbl3e\n\ud83c\udf1e Lamp (BenQ E-reading Lamp): https://amzn.to/3e0UCr8\n\ud83c\udf1e Secondary Lamp (BenQ Screenbar Plus): https://amzn.to/30Dtafi\n\ud83d\udcbb Main Monitor (LG 4K): https://amzn.to/37ybtiH\n\ud83d\udcbb Secondary Monitor (Thinkvision 1080p): https://amzn.to/2AyHR8H\n\n\ud83c\udfa4 XLR Microphone (Rode NT1): Not available\n\ud83c\udf99 Mic Boom Arm (Rode PSA 1): https://amzn.to/30EZw9m\n\ud83c\udf9a  Audio Interface (Behringer 4 Channel): https://amzn.to/3fqm4z3\n\ud83d\udcbe Recorder (Zoom H6): https://amzn.to/2UIihVJ\n\n\u25fe \ud83d\udcb8  Donations  \ud83d\udcb8 \u25fe\n\ud83d\udcb5 One-Time Donations: https://www.paypal.com/donate/?token=m_JfrPK7DsK4PLk0CxNnv4VPutjqSldorAmgQIQnMozUwwQw93vdul-yhU06IwAuig15uG&country.x=CA&locale.x=\n\ud83d\udcb0 Patreon: https://www.patreon.com/techwithtim\n\u25fe\u25fe\u25fe\u25fe\u25fe\u25fe\u25fe\u25fe\u25fe\u25fe\u25fe\u25fe\u25fe\u25fe\u25fe\u25fe\u25fe\n\n\u26a1 Please leave a LIKE and SUBSCRIBE for more content! \u26a1\n\n\u2b50 Tags \u2b50\n- Tech With Tim\n- A* Pathfinding\n- A Star Path Finding Tutorial\n- A Star Search Algorithm\n- Path Finding A Star Tutorial\n- Python Path Finding Tutorial\n- Python A Star Path Finding Algorithm\n- Path Finding Visuallizer \n\n\u2b50 Hashtags \u2b50\n#python #pathfinding #astar",
        "thumbnails": {
          "default": {
            "url": "https://i.ytimg.com/vi/JtiK0DOeI4A/default.jpg",
            "width": 120,
            "height": 90
          },
          "medium": {
            "url": "https://i.ytimg.com/vi/JtiK0DOeI4A/mqdefault.jpg",
            "width": 320,
            "height": 180
          },
          "high": {
            "url": "https://i.ytimg.com/vi/JtiK0DOeI4A/hqdefault.jpg",
            "width": 480,
            "height": 360
          },
          "standard": {
            "url": "https://i.ytimg.com/vi/JtiK0DOeI4A/sddefault.jpg",
            "width": 640,
            "height": 480
          },
          "maxres": {
            "url": "https://i.ytimg.com/vi/JtiK0DOeI4A/maxresdefault.jpg",
            "width": 1280,
            "height": 720
          }
        },
        "channelTitle": "Donald Thompson",
        "playlistId": "PLIjhfluhNd98zSpKsf69arDUm1Dqbe0bn",
        "position": 91,
        "resourceId": {
          "kind": "youtube#video",
          "videoId": "JtiK0DOeI4A"
        },
        "videoOwnerChannelTitle": "Tech With Tim",
        "videoOwnerChannelId": "UC4JX40jDee_tINbkjycV4Sg"
      },
      "contentDetails": {
        "videoId": "JtiK0DOeI4A",
        "videoPublishedAt": "2020-07-16T19:09:44Z"
      }
    },
    {
      "kind": "youtube#playlistItem",
      "etag": "y83YlxKhaKtkfQ_t2z0Bp2RIiOM",
      "id": "UExJamhmbHVoTmQ5OHpTcEtzZjY5YXJEVW0xRHFiZTBibi5ENDU4Q0M4RDExNzM1Mjcy",
      "snippet": {
        "publishedAt": "2021-08-15T07:12:15Z",
        "channelId": "UCqsUJL5xIWuidR7sIrPLhAw",
        "title": "Top 18 Most Useful Python Modules",
        "description": "This video talks about the 18 best python modules that you should really know! I discuss modules that deal with web development, machine learning, data science and graphical user interfaces. These are the most popular python modules are will make your lives easier.\n\n\u2b50 Thanks to Simplilearn for sponsoring this video. Check out their Machine Learning Certification Course! https://www.simplilearn.com/big-data-and-analytics/machine-learning-certification-training-course?utm_source=Tim&utm_medium=affiliate-cpm&utm_campaign=product_review_March2020 \u2b50\n\nList of Modules and Documentation\n\nWeb:\nRequests: https://pypi.org/project/requests/\nDjango: https://pypi.org/project/Django/\nFlask: https://pypi.org/project/Flask/\nTwisted: https://twistedmatrix.com/trac/\nBeautifulSoup: https://pypi.org/project/beautifulsoup4/\nSelenium: https://selenium-python.readthedocs.io/\n\nData science:\nNumpy: https://numpy.org/\nPandas: https://pandas.pydata.org/\nMatplotlib: https://matplotlib.org/\nNltk: https://www.nltk.org/\nOpencv: https://opencv-python-tutroals.readthedocs.io/en/latest/py_tutorials/py_tutorials.html\n\nMachine Learning:\nTensorflow: https://www.tensorflow.org/\nKeras: https://keras.io/\nPyTorch: https://pytorch.org/\nSci-kit Learn: https://scikit-learn.org/stable/\n\nGUI:\nKivy: https://kivy.org/#home\nPyQt5: https://pypi.org/project/PyQt5/\nTkinter: https://wiki.python.org/moin/TkInter\n\nBonus:\nPygame: https://www.pygame.org/docs/\n\n\u25fe\u25fe\u25fe\u25fe\u25fe\n\ud83d\udcbb Enroll in The Fundamentals of Programming w/ Python \nhttps://tech-with-tim.teachable.com/p/the-fundamentals-of-programming-with-python\n\n\ud83d\udcf8 Instagram: https://www.instagram.com/tech_with_tim\n\ud83c\udf0e Website https://techwithtim.net\n\ud83d\udcf1 Twitter: https://twitter.com/TechWithTimm\n\u2b50 Discord: https://discord.gg/pr2k55t\n\ud83d\udcdd LinkedIn: https://www.linkedin.com/in/tim-ruscica-82631b179/\n\ud83d\udcc2 GitHub: https://github.com/techwithtim\n\ud83d\udd0a Podcast: https://anchor.fm/tech-with-tim\n\n\ud83d\udcb5 One-Time Donations: https://www.paypal.com/donate/?token=m_JfrPK7DsK4PLk0CxNnv4VPutjqSldorAmgQIQnMozUwwQw93vdul-yhU06IwAuig15uG&country.x=CA&locale.x=\n\ud83d\udcb0 Patreon: https://www.patreon.com/techwithtim\n\u25fe\u25fe\u25fe\u25fe\u25fe\u25fe\n\n\u26a1 Please leave a LIKE and SUBSCRIBE for more content! \u26a1\n\n\u2b50 Tags \u2b50\n- Tech With Tim\n- Python Tutorials\n- Python Modules\n- Best Python Modules\n- Most Useful Python Modules\n- Top Python Modules\n\n\u2b50 Hashtags \u2b50\n#Python #Pip",
        "thumbnails": {
          "default": {
            "url": "https://i.ytimg.com/vi/Vi9Y9AL13Rc/default.jpg",
            "width": 120,
            "height": 90
          },
          "medium": {
            "url": "https://i.ytimg.com/vi/Vi9Y9AL13Rc/mqdefault.jpg",
            "width": 320,
            "height": 180
          },
          "high": {
            "url": "https://i.ytimg.com/vi/Vi9Y9AL13Rc/hqdefault.jpg",
            "width": 480,
            "height": 360
          },
          "standard": {
            "url": "https://i.ytimg.com/vi/Vi9Y9AL13Rc/sddefault.jpg",
            "width": 640,
            "height": 480
          },
          "maxres": {
            "url": "https://i.ytimg.com/vi/Vi9Y9AL13Rc/maxresdefault.jpg",
            "width": 1280,
            "height": 720
          }
        },
        "channelTitle": "Donald Thompson",
        "playlistId": "PLIjhfluhNd98zSpKsf69arDUm1Dqbe0bn",
        "position": 92,
        "resourceId": {
          "kind": "youtube#video",
          "videoId": "Vi9Y9AL13Rc"
        },
        "videoOwnerChannelTitle": "Tech With Tim",
        "videoOwnerChannelId": "UC4JX40jDee_tINbkjycV4Sg"
      },
      "contentDetails": {
        "videoId": "Vi9Y9AL13Rc",
        "videoPublishedAt": "2020-03-17T15:58:17Z"
      }
    },
    {
      "kind": "youtube#playlistItem",
      "etag": "clG7SqpyzY1teYI854mk8nzD9_U",
      "id": "UExJamhmbHVoTmQ5OHpTcEtzZjY5YXJEVW0xRHFiZTBibi45RTgxNDRBMzUwRjQ0MDhC",
      "snippet": {
        "publishedAt": "2021-08-15T07:12:04Z",
        "channelId": "UCqsUJL5xIWuidR7sIrPLhAw",
        "title": "Python Beginner Project Tutorial #1 - Your First Python Project",
        "description": "In this beginner python project tutorial we will be creating our first python project! While working through this beginner python project you will learn the basics and fundamentals of python and apply those skills. This python tutorial is designed to get you up and running in python as fast as possible.\n\n\u2b50\ufe0fThanks to https://repl.it for sponsoring this video! Check out their browser based coding environment to get started coding as fast as possible! https://repl.it\n\nPlaylist: https://www.youtube.com/watch?v=7R-CfL21zIY&list=PLzMcBGfZo4-lMz6bsWzF2tt8K8iZJdLd1\n\n\ud83c\udf99 Subscribe to my second channel for weekly podcasts! https://www.youtube.com/channel/UCSATlCAUi7R0Ik-wsZb2gOA\n\n\u25fe\u25fe\u25fe\u25fe\u25fe\n\ud83d\udcbb Enroll in The Fundamentals of Programming w/ Python \nhttps://tech-with-tim.teachable.com/p/the-fundamentals-of-programming-with-python\n\n\ud83d\udcf8 Instagram: https://www.instagram.com/tech_with_tim\n\ud83c\udf0e Website https://techwithtim.net\n\ud83d\udcf1 Twitter: https://twitter.com/TechWithTimm\n\u2b50 Discord: https://discord.gg/pr2k55t\n\ud83d\udcdd LinkedIn: https://www.linkedin.com/in/tim-ruscica-82631b179/\n\ud83d\udcc2 GitHub: https://github.com/techwithtim\n\ud83d\udd0a Podcast: https://anchor.fm/tech-with-tim\n\n\ud83d\udcb5 One-Time Donations: https://www.paypal.com/donate/?token=m_JfrPK7DsK4PLk0CxNnv4VPutjqSldorAmgQIQnMozUwwQw93vdul-yhU06IwAuig15uG&country.x=CA&locale.x=\n\ud83d\udcb0 Patreon: https://www.patreon.com/techwithtim\n\u25fe\u25fe\u25fe\u25fe\u25fe\u25fe\n\n\u26a1 Please leave a LIKE and SUBSCRIBE for more content! \u26a1\n\n\u2b50 Tags \u2b50\n- Tech With Tim\n- Beginner Python Project\n- Python Project Tutorial\n- Python Tutorial\n- Python Beginner Projects\n- Beginner Python Tutorial\n\n\u2b50 Hashtags \u2b50\n#python #pythonprojects #coding",
        "thumbnails": {
          "default": {
            "url": "https://i.ytimg.com/vi/7R-CfL21zIY/default.jpg",
            "width": 120,
            "height": 90
          },
          "medium": {
            "url": "https://i.ytimg.com/vi/7R-CfL21zIY/mqdefault.jpg",
            "width": 320,
            "height": 180
          },
          "high": {
            "url": "https://i.ytimg.com/vi/7R-CfL21zIY/hqdefault.jpg",
            "width": 480,
            "height": 360
          },
          "standard": {
            "url": "https://i.ytimg.com/vi/7R-CfL21zIY/sddefault.jpg",
            "width": 640,
            "height": 480
          },
          "maxres": {
            "url": "https://i.ytimg.com/vi/7R-CfL21zIY/maxresdefault.jpg",
            "width": 1280,
            "height": 720
          }
        },
        "channelTitle": "Donald Thompson",
        "playlistId": "PLIjhfluhNd98zSpKsf69arDUm1Dqbe0bn",
        "position": 93,
        "resourceId": {
          "kind": "youtube#video",
          "videoId": "7R-CfL21zIY"
        },
        "videoOwnerChannelTitle": "Tech With Tim",
        "videoOwnerChannelId": "UC4JX40jDee_tINbkjycV4Sg"
      },
      "contentDetails": {
        "videoId": "7R-CfL21zIY",
        "videoPublishedAt": "2020-06-03T13:00:04Z"
      }
    },
    {
      "kind": "youtube#playlistItem",
      "etag": "PLvH8MwD_ogfrGMsjVf5wdjadyc",
      "id": "UExJamhmbHVoTmQ5OHpTcEtzZjY5YXJEVW0xRHFiZTBibi4yMUQyQTQzMjRDNzMyQTMy",
      "snippet": {
        "publishedAt": "2021-08-15T07:11:37Z",
        "channelId": "UCqsUJL5xIWuidR7sIrPLhAw",
        "title": "10 Python Tips and Tricks For Writing Better Code",
        "description": "This video is sponsored by Skillshare. Be one of the first 500 people to sign up with this link and get 2 free months of Skillshare Premium:\nhttps://skl.sh/coreyschafer\n\nIn this Python Programming video, we will be going over 10 tips and tricks for writing Pythonic code. Here are the timestamps for each topic we will cover...\n1) Ternary Conditionals - 0:34\n2) Underscore Placeholders - 2:13\n3) Context Managers - 4:25\n4) Enumerate - 6:50\n5) Zip - 8:52\n6) Unpacking - 13:02\n7) Setattr/Getattr - 19:08\n8) GetPass - 26:24\n9) Python dash m - 29:18\n10) Help/Dir - 33:17 \n\nContext Managers Tutorial - https://youtu.be/-aKFBoZpiqA\nSys.path Tutorial - https://youtu.be/CqvZ3vGoGs0\n\n\n\u2705 Support My Channel Through Patreon:\nhttps://www.patreon.com/coreyms\n\n\u2705 Become a Channel Member:\nhttps://www.youtube.com/channel/UCCezIgC97PvUuR4_gbFUs5g/join\n\n\u2705 One-Time Contribution Through PayPal:\nhttps://goo.gl/649HFY\n\n\u2705 Cryptocurrency Donations:\nBitcoin Wallet - 3MPH8oY2EAgbLVy7RBMinwcBntggi7qeG3\nEthereum Wallet - 0x151649418616068fB46C3598083817101d3bCD33\nLitecoin Wallet - MPvEBY5fxGkmPQgocfJbxP6EmTo5UUXMot\n\n\u2705 Corey's Public Amazon Wishlist\nhttp://a.co/inIyro1\n\n\u2705 Equipment I Use and Books I Recommend:\nhttps://www.amazon.com/shop/coreyschafer\n\n\u25b6\ufe0f You Can Find Me On:\nMy Website - http://coreyms.com/\nMy Second Channel - https://www.youtube.com/c/coreymschafer\nFacebook - https://www.facebook.com/CoreyMSchafer\nTwitter - https://twitter.com/CoreyMSchafer\nInstagram - https://www.instagram.com/coreymschafer/\n\n#Python",
        "thumbnails": {
          "default": {
            "url": "https://i.ytimg.com/vi/C-gEQdGVXbk/default.jpg",
            "width": 120,
            "height": 90
          },
          "medium": {
            "url": "https://i.ytimg.com/vi/C-gEQdGVXbk/mqdefault.jpg",
            "width": 320,
            "height": 180
          },
          "high": {
            "url": "https://i.ytimg.com/vi/C-gEQdGVXbk/hqdefault.jpg",
            "width": 480,
            "height": 360
          },
          "standard": {
            "url": "https://i.ytimg.com/vi/C-gEQdGVXbk/sddefault.jpg",
            "width": 640,
            "height": 480
          },
          "maxres": {
            "url": "https://i.ytimg.com/vi/C-gEQdGVXbk/maxresdefault.jpg",
            "width": 1280,
            "height": 720
          }
        },
        "channelTitle": "Donald Thompson",
        "playlistId": "PLIjhfluhNd98zSpKsf69arDUm1Dqbe0bn",
        "position": 94,
        "resourceId": {
          "kind": "youtube#video",
          "videoId": "C-gEQdGVXbk"
        },
        "videoOwnerChannelTitle": "Corey Schafer",
        "videoOwnerChannelId": "UCCezIgC97PvUuR4_gbFUs5g"
      },
      "contentDetails": {
        "videoId": "C-gEQdGVXbk",
        "videoPublishedAt": "2019-03-25T17:30:00Z"
      }
    },
    {
      "kind": "youtube#playlistItem",
      "etag": "JOMd50ZhafTmE3GQx7mytvn9oBU",
      "id": "UExJamhmbHVoTmQ5OHpTcEtzZjY5YXJEVW0xRHFiZTBibi41QTY1Q0UxMTVCODczNThE",
      "snippet": {
        "publishedAt": "2021-08-15T07:11:25Z",
        "channelId": "UCqsUJL5xIWuidR7sIrPLhAw",
        "title": "Python As Fast as Possible - Learn Python in ~75 Minutes",
        "description": "This python tutorial aims to teach you python as fast as possible. This python speed course will cover all the fundamentals of python and give you a quick overview of all of the main python features.\n\n\u2b50\ufe0f Thanks to Simplilearn for sponsoring this video and giving you all a 10% discount on their Data Scientist Master's program by using the code: YT10 \u2b50\ufe0f https://www.simplilearn.com/big-data-and-analytics/senior-data-scientist-masters-program-training?utm_source=Tim&utm_medium=affiliate-cpm&utm_campaign=product_review_Oct2020\n\n\ud83d\udcda Other Learning Resources \ud83d\udcda\n\ud83d\udcd5 Beginner Python Tutorial Series: https://www.youtube.com/watch?v=OFrLs22MDAw&list=PLzMcBGfZo4-mFu00qxl0a67RhjjZj3jXm\n\ud83d\udcd7 Intermediate Python Tutorial Series: https://www.youtube.com/watch?v=0VdzZQdaZ28&list=PLzMcBGfZo4-nhWva-6OVh1yKWHBs4o_tv\n\ud83d\udcd8 Expert Python Tutorial Series: https://www.youtube.com/watch?v=mclfteWlT2Q&list=PLzMcBGfZo4-kwmIcMDdXSuy_wSqtU-xDP\n\n\u2b50\ufe0f Timestamps \u2b50\ufe0f\n00:00:00 - Introduction\n00:00:40 - Setup & Installation\n00:01:34 - What Python is Used For\n00:02:14 - Data Scientist Master's Program\n00:03:03 - Data Types\n00:04:57 - Output & Printing\n00:07:32 - Variables\n00:10:20 - User Input\n00:12:38 - Arithmetic Operator\n00:18:34 - String Methods\n00:22:19 - Conditional Operators\n00:28:10 - Chained Conditionals\n00:31:26 - If/Else/Elif\n00:35:41 - List/Tuples\n00:41:32 - For Loops\n00:46:02 - While Loops\n00:47:33 - Slice Operator\n00:50:46 - Sets\n00:54:29 - Dicts\n00:57:40 - Comprehensions\n01:00:33 - Functions\n01:03:12 - *args & **kwargs\n01:09:12 - Scope & Globals\n01:10:42 - Exceptions\n01:11:28 - Handling Exceptions\n01:13:08 - Lambda\n01:14:19 - Map and Filter\n01:17:30 - F Strings\n01:18:43 - Conclusion\n\n\u25fe\u25fe\u25fe\u25fe\u25fe\u25fe\u25fe\u25fe\u25fe\u25fe\u25fe\u25fe\u25fe\u25fe\u25fe\u25fe\u25fe\n\ud83d\udd0a Subscribe to my second channel for weekly podcasts! https://www.youtube.com/channel/UCSATlCAUi7R0Ik-wsZb2gOA\n\n\ud83d\udcb0 Courses & Merch \ud83d\udcb0\n\ud83d\udcbb The Fundamentals of Programming w/ Python: https://tech-with-tim.teachable.com/p/the-fundamentals-of-programming-with-python\n\ud83d\udc55 Merchandise: https://teespring.com/stores/tech-with-tim-merch-shop\n\n\ud83d\udd17 Social Medias \ud83d\udd17\n\ud83d\udcf8 Instagram: https://www.instagram.com/tech_with_tim\n\ud83d\udcf1  Twitter: https://twitter.com/TechWithTimm\n\u2b50 Discord: https://discord.gg/pr2k55t\n\ud83d\udcdd LinkedIn: https://www.linkedin.com/in/tim-ruscica-82631b179/\n\ud83c\udf0e Website: https://techwithtim.net\n\ud83d\udcc2 GitHub: https://github.com/techwithtim\n\ud83d\udd0a Podcast: https://anchor.fm/tech-with-tim\n\n\ud83c\udfac My YouTube Gear \ud83c\udfac\n\ud83c\udfa5 Main Camera (EOS Canon 90D): https://amzn.to/3cY23y9\n\ud83c\udfa5 Secondary Camera (Panasonic Lumix G7): https://amzn.to/3fl2iEV\n\ud83d\udcf9 Main Lens (EFS 24mm f/2.8): https://amzn.to/2Yuol5r\n\ud83d\udd79  Tripod: https://amzn.to/3hpSprv\n\ud83c\udfa4 Main Microphone (Rode VideoMic Pro): https://amzn.to/3d0KKMG\n\ud83c\udfa4 Secondary Microphone (Synco Wireless Lapel System): https://amzn.to/3e07Swl\n\ud83c\udfa4 Third Microphone (Blue Yeti USB Mic): https://amzn.to/3hoD625\n\u2600\ufe0f Lights: https://amzn.to/2ApeiXr\n\n\u2328 Keyboard (Daskeyboard 4Q): https://amzn.to/2YpN5vm\n\ud83d\uddb1  Mouse (Steelseries Rival 300): https://amzn.to/3cVTqnD\n\ud83d\udcf8 Webcam (Logitech 1080p Pro): https://amzn.to/2B2IXcQ\n\ud83d\udce2 Speaker (Beats Pill): https://amzn.to/2XYc5ef\n\ud83c\udfa7 Headphones (Bose Quiet Comfort 35): https://amzn.to/2MWbl3e\n\ud83c\udf1e Lamp (BenQ E-reading Lamp): https://amzn.to/3e0UCr8\n\ud83c\udf1e Secondary Lamp (BenQ Screenbar Plus): https://amzn.to/30Dtafi\n\ud83d\udcbb Main Monitor (LG 4K): https://amzn.to/37ybtiH\n\ud83d\udcbb Secondary Monitor (Thinkvision 1080p): https://amzn.to/2AyHR8H\n\n\ud83c\udfa4 XLR Microphone (Rode NT1): Not available\n\ud83c\udf99 Mic Boom Arm (Rode PSA 1): https://amzn.to/30EZw9m\n\ud83c\udf9a  Audio Interface (Behringer 4 Channel): https://amzn.to/3fqm4z3\n\ud83d\udcbe Recorder (Zoom H6): https://amzn.to/2UIihVJ\n\n\u25fe \ud83d\udcb8  Donations  \ud83d\udcb8 \u25fe\n\ud83d\udcb5 One-Time Donations: https://www.paypal.com/donate/?token=m_JfrPK7DsK4PLk0CxNnv4VPutjqSldorAmgQIQnMozUwwQw93vdul-yhU06IwAuig15uG&country.x=CA&locale.x=\n\ud83d\udcb0 Patreon: https://www.patreon.com/techwithtim\n\u25fe\u25fe\u25fe\u25fe\u25fe\u25fe\u25fe\u25fe\u25fe\u25fe\u25fe\u25fe\u25fe\u25fe\u25fe\u25fe\u25fe\n\n\u26a1 Please leave a LIKE and SUBSCRIBE for more content! \u26a1\n\n\u2b50 Tags \u2b50\n- Tech With Tim\n- Python\n- Python Speed Course\n- Python as Fast As Possible\n- Python Tutorial\n- Python Fundementals\n\n\u2b50 Hashtags \u2b50\n#Python #PythonSpeedCourse",
        "thumbnails": {
          "default": {
            "url": "https://i.ytimg.com/vi/VchuKL44s6E/default.jpg",
            "width": 120,
            "height": 90
          },
          "medium": {
            "url": "https://i.ytimg.com/vi/VchuKL44s6E/mqdefault.jpg",
            "width": 320,
            "height": 180
          },
          "high": {
            "url": "https://i.ytimg.com/vi/VchuKL44s6E/hqdefault.jpg",
            "width": 480,
            "height": 360
          },
          "standard": {
            "url": "https://i.ytimg.com/vi/VchuKL44s6E/sddefault.jpg",
            "width": 640,
            "height": 480
          },
          "maxres": {
            "url": "https://i.ytimg.com/vi/VchuKL44s6E/maxresdefault.jpg",
            "width": 1280,
            "height": 720
          }
        },
        "channelTitle": "Donald Thompson",
        "playlistId": "PLIjhfluhNd98zSpKsf69arDUm1Dqbe0bn",
        "position": 95,
        "resourceId": {
          "kind": "youtube#video",
          "videoId": "VchuKL44s6E"
        },
        "videoOwnerChannelTitle": "Tech With Tim",
        "videoOwnerChannelId": "UC4JX40jDee_tINbkjycV4Sg"
      },
      "contentDetails": {
        "videoId": "VchuKL44s6E",
        "videoPublishedAt": "2020-10-04T15:00:06Z"
      }
    },
    {
      "kind": "youtube#playlistItem",
      "etag": "9oK18OpoJbm55aDq8jJwcqUVulM",
      "id": "UExJamhmbHVoTmQ5OHpTcEtzZjY5YXJEVW0xRHFiZTBibi5EQUE1NTFDRjcwMDg0NEMz",
      "snippet": {
        "publishedAt": "2021-08-15T07:11:08Z",
        "channelId": "UCqsUJL5xIWuidR7sIrPLhAw",
        "title": "12 Beginner Python Projects - Coding Course",
        "description": "Improve your Python skills by following along with 12 different Python project tutorials.\n\n\ud83c\udfa5 Course developed by Kylie Ying. Check out her YouTube channel: https://www.youtube.com/ycubed \n\n\u2b50\ufe0f Course Contents \u2b50\ufe0f\n\u2328\ufe0f (1:40) 1. Madlibs \n\u2328\ufe0f (6:54) 2. Guess the Number (computer) \n\u2328\ufe0f (13:17) 3. Guess the Number (user)\n\u2328\ufe0f (21:14) 4. Rock Paper Scissors\n\u2328\ufe0f (24:25) 5. Hangman\n\u2328\ufe0f (35:53) 6. Tic-Tac-Toe\n\u2328\ufe0f (59:59) 7. Tic-Tac-Toe AI\n\u2328\ufe0f (1:15:53) 8. Binary Search \n\u2328\ufe0f (1:27:16) 9. Minesweeper \n\u2328\ufe0f (1:51:55) 10. Sudoku Solver \n\u2328\ufe0f (2:05:34) 11. Photo Manipulation in Python \n\u2328\ufe0f (2:31:49) 12. Markov Chain Text Composer \n\n\u2b50\ufe0f Code \u2b50\ufe0f\n\ud83d\udcbb Madlibs / Rock Paper Scissors / Binary Search: https://github.com/kying18/beginner-projects\n\ud83d\udcbb Guess the Number: https://github.com/kying18/guess-the-number \n\ud83d\udcbb Hangman: https://github.com/kying18/hangman \n\ud83d\udcbb Tic-Tac-Toe + AI: https://github.com/kying18/tic-tac-toe \n\ud83d\udcbb Minesweeper: https://github.com/kying18/minesweeper\n\ud83d\udcbb Sudoku: https://github.com/kying18/sudoku \n\ud83d\udcbb Photo Editing in Python: https://github.com/kying18/pyphotoshop\n\ud83d\udcbb Markov Chain Composer: https://github.com/kying18/graph-composer\n\n\u2b50\ufe0f More ways to connect with Kylie Ying \u2b50\ufe0f\nTwitch KylieYing: https://www.twitch.tv/kylieying \nTwitter @kylieyying: https://twitter.com/kylieyying \nInstagram @kylieyying: https://www.instagram.com/kylieyying/ \nWebsite: https://www.kylieying.com\n\n\u2b50\ufe0f Music Credits \u2b50\ufe0f\nAlan Walker - Fade [NCS Release]: https://www.youtube.com/watch?v=bM7SZ5SBzyY\nAlan Walker - Force [NCS Release]: https://www.youtube.com/watch?v=xshEZzpS4CQ\n\n--\n\nLearn to code for free and get a developer job: https://www.freecodecamp.org\n\nRead hundreds of articles on programming: https://freecodecamp.org/news\n\nAnd subscribe for new videos on technology every day: https://youtube.com/subscription_center?add_user=freecodecamp",
        "thumbnails": {
          "default": {
            "url": "https://i.ytimg.com/vi/8ext9G7xspg/default.jpg",
            "width": 120,
            "height": 90
          },
          "medium": {
            "url": "https://i.ytimg.com/vi/8ext9G7xspg/mqdefault.jpg",
            "width": 320,
            "height": 180
          },
          "high": {
            "url": "https://i.ytimg.com/vi/8ext9G7xspg/hqdefault.jpg",
            "width": 480,
            "height": 360
          },
          "standard": {
            "url": "https://i.ytimg.com/vi/8ext9G7xspg/sddefault.jpg",
            "width": 640,
            "height": 480
          },
          "maxres": {
            "url": "https://i.ytimg.com/vi/8ext9G7xspg/maxresdefault.jpg",
            "width": 1280,
            "height": 720
          }
        },
        "channelTitle": "Donald Thompson",
        "playlistId": "PLIjhfluhNd98zSpKsf69arDUm1Dqbe0bn",
        "position": 96,
        "resourceId": {
          "kind": "youtube#video",
          "videoId": "8ext9G7xspg"
        },
        "videoOwnerChannelTitle": "freeCodeCamp.org",
        "videoOwnerChannelId": "UC8butISFwT-Wl7EV0hUK0BQ"
      },
      "contentDetails": {
        "videoId": "8ext9G7xspg",
        "videoPublishedAt": "2020-12-09T16:03:12Z"
      }
    },
    {
      "kind": "youtube#playlistItem",
      "etag": "M-7qCerSzP-s4xFG09Anrk8LmM8",
      "id": "UExJamhmbHVoTmQ5OHpTcEtzZjY5YXJEVW0xRHFiZTBibi41Mzk2QTAxMTkzNDk4MDhF",
      "snippet": {
        "publishedAt": "2021-08-15T07:10:55Z",
        "channelId": "UCqsUJL5xIWuidR7sIrPLhAw",
        "title": "Pygame Tutorial - Creating Space Invaders",
        "description": "In this pygame tutorial we will be working through creating a full space shooter/invader game! I will be teaching the pygame module and some basic game design principles as we walk through this long python 3 pygame tutorial.\n\n\ud83c\udf99If you want to show your support please subscribe to @Time Out With Tim, where I'll be posting weekly podcasts! https://www.youtube.com/channel/UCSATlCAUi7R0Ik-wsZb2gOA\n\n\u2699 How to Install Pygame (Windows): https://www.youtube.com/watch?v=AdUZArA-kZw\n\u2699 How to Install Pygame (Mac): https://www.youtube.com/watch?v=E-WhAS6qzsU&t=1s\n\n\ud83d\udcbe Game Assets & Code Download: https://techwithtim.net/wp-content/uploads/2020/04/Space-Shooter-Tutorial.zip\n\ud83d\udcbe Game Assets Only Download: https://techwithtim.net/wp-content/uploads/2020/04/assets.zip\n\n\u25fe\u25fe\u25fe\u25fe\u25fe\n\ud83d\udcbb Enroll in The Fundamentals of Programming w/ Python \nhttps://tech-with-tim.teachable.com/p/the-fundamentals-of-programming-with-python\n\n\ud83d\udcf8 Instagram: https://www.instagram.com/tech_with_tim\n\ud83c\udf0e Website https://techwithtim.net\n\ud83d\udcf1 Twitter: https://twitter.com/TechWithTimm\n\u2b50 Discord: https://discord.gg/pr2k55t\n\ud83d\udcdd LinkedIn: https://www.linkedin.com/in/tim-ruscica-82631b179/\n\ud83d\udcc2 GitHub: https://github.com/techwithtim\n\ud83d\udd0a Podcast: https://anchor.fm/tech-with-tim\n\n\ud83d\udcb5 One-Time Donations: https://www.paypal.com/donate/?token=m_JfrPK7DsK4PLk0CxNnv4VPutjqSldorAmgQIQnMozUwwQw93vdul-yhU06IwAuig15uG&country.x=CA&locale.x=\n\ud83d\udcb0 Patreon: https://www.patreon.com/techwithtim\n\u25fe\u25fe\u25fe\u25fe\u25fe\u25fe\n\n\u26a1 Please leave a LIKE and SUBSCRIBE for more content! \u26a1\n\n\u2b50 Tags \u2b50\n- Tech With Tim\n- Python Tutorials\n- Pygame Tutorial\n- Pyagame Space Shooter\n- Python Pygame Tutorial\n- Pyagame Tutorial Python\n\n\u2b50 Hashtags \u2b50\n#python #pygame",
        "thumbnails": {
          "default": {
            "url": "https://i.ytimg.com/vi/Q-__8Xw9KTM/default.jpg",
            "width": 120,
            "height": 90
          },
          "medium": {
            "url": "https://i.ytimg.com/vi/Q-__8Xw9KTM/mqdefault.jpg",
            "width": 320,
            "height": 180
          },
          "high": {
            "url": "https://i.ytimg.com/vi/Q-__8Xw9KTM/hqdefault.jpg",
            "width": 480,
            "height": 360
          },
          "standard": {
            "url": "https://i.ytimg.com/vi/Q-__8Xw9KTM/sddefault.jpg",
            "width": 640,
            "height": 480
          },
          "maxres": {
            "url": "https://i.ytimg.com/vi/Q-__8Xw9KTM/maxresdefault.jpg",
            "width": 1280,
            "height": 720
          }
        },
        "channelTitle": "Donald Thompson",
        "playlistId": "PLIjhfluhNd98zSpKsf69arDUm1Dqbe0bn",
        "position": 97,
        "resourceId": {
          "kind": "youtube#video",
          "videoId": "Q-__8Xw9KTM"
        },
        "videoOwnerChannelTitle": "Tech With Tim",
        "videoOwnerChannelId": "UC4JX40jDee_tINbkjycV4Sg"
      },
      "contentDetails": {
        "videoId": "Q-__8Xw9KTM",
        "videoPublishedAt": "2020-04-15T13:00:15Z"
      }
    },
    {
      "kind": "youtube#playlistItem",
      "etag": "U7o9IKzm2jjikJEAZHuUFxvxnIY",
      "id": "UExJamhmbHVoTmQ5OHpTcEtzZjY5YXJEVW0xRHFiZTBibi4zMDg5MkQ5MEVDMEM1NTg2",
      "snippet": {
        "publishedAt": "2021-08-15T07:10:39Z",
        "channelId": "UCqsUJL5xIWuidR7sIrPLhAw",
        "title": "Make Paint In Python - Full Tutorial",
        "description": "Welcome back to another video! In this video, I'll be going over how to create a paint application similar to Microsoft Paint. I will be using python and pygame to create this application.\n\n\ud83d\udcbb AlgoExpert is the coding interview prep platform that I used to ace my Microsoft and Shopify interviews. Check it out and get a discount on the platform using the code \"techwithtim\" https://algoexpert.io/techwithtim\n\n\ud83d\udcc4 Resources \ud83d\udcc4\nFix Pip (Windows): https://www.youtube.com/watch?v=AdUZArA-kZw\nFix Pip (Mac): https://www.youtube.com/watch?v=E-WhAS6qzsU\nPygame Walkthrough: https://www.youtube.com/watch?v=jO6qQDNa2UY\nPython Object Oriented Programming: https://www.youtube.com/watch?v=JeznW_7DlB0&t=2371s\nCode In This Video: https://github.com/techwithtim/PythonPaintProgram\n\n\u2b50\ufe0f Timestamps \u2b50\ufe0f\n00:00:00 | Introduction and Demo\n00:02:16 | Installing Pygame\n00:03:24 | Directory Setup\n00:05:15 | Project Settings File\n00:12:56 | Pygame Setup & Event Loop\n00:19:12 | Grid/Pixel Setup\n00:34:55 | Drawing Basics\n00:42:51 | Creating Buttons\n01:00:18 | Different Drawing Colors\n01:03:15 | Clearing The Canvas\n01:04:48 | Changing Settings\n\n\u25fc\ufe0f\u25fc\ufe0f\u25fc\ufe0f\u25fc\ufe0f\u25fc\ufe0f\u25fc\ufe0f\u25fc\ufe0f\u25fc\ufe0f\u25fc\ufe0f\u25fc\ufe0f\u25fc\ufe0f\u25fc\ufe0f\u25fc\ufe0f\u25fc\ufe0f\n\ud83d\udcb0 Courses & Merch \ud83d\udcb0 \n\ud83d\udcbb The Fundamentals of Programming w/ Python: https://tech-with-tim.teachable.com/p/the-fundamentals-of-programming-with-python \n\ud83d\udc55 Merchandise: https://teespring.com/stores/tech-with-tim-merch-shop \n\n\ud83d\udd17 Social Medias \ud83d\udd17 \n\ud83d\udcf8 Instagram: https://www.instagram.com/tech_with_tim \n\ud83d\udcf1 Twitter: https://twitter.com/TechWithTimm \n\u2b50 Discord: https://discord.gg/twt\n\ud83d\udcdd LinkedIn: https://www.linkedin.com/in/tim-ruscica-82631b179/ \n\ud83c\udf0e Website: https://techwithtim.net \n\ud83d\udcc2 GitHub: https://github.com/techwithtim \n\ud83d\udd0a Podcast: https://anchor.fm/tech-with-tim \n\n\ud83c\udfac My YouTube Gear \ud83c\udfac \n\ud83c\udfa5 Main Camera (EOS Canon 90D): https://amzn.to/3cY23y9 \n\ud83c\udfa5 Secondary Camera (Panasonic Lumix G7): https://amzn.to/3fl2iEV \n\ud83d\udcf9 Main Lens (EFS 24mm f/2.8): https://amzn.to/2Yuol5r \n\ud83d\udd79 Tripod: https://amzn.to/3hpSprv \n\ud83c\udfa4 Main Microphone (Rode NT1): https://amzn.to/2HrZxXc\n\ud83c\udfa4 Secondary Microphone (Synco Wireless Lapel System): https://amzn.to/3e07Swl \n\ud83c\udfa4 Third Microphone (Rode NTG4+): https://amzn.to/3oi0v8Z\n\u2600\ufe0f Lights: https://amzn.to/2ApeiXr \n\u2328 Keyboard (Daskeyboard 4Q): https://amzn.to/2YpN5vm \n\ud83d\uddb1 Mouse (Logitech MX Master): https://amzn.to/2HsmRDN\n\ud83d\udcf8 Webcam (Logitech 1080p Pro): https://amzn.to/2B2IXcQ \n\ud83d\udce2 Speaker (Beats Pill): https://amzn.to/2XYc5ef \n\ud83c\udfa7 Headphones (Bose Quiet Comfort 35): https://amzn.to/2MWbl3e \n\ud83c\udf1e Lamp (BenQ E-reading Lamp): https://amzn.to/3e0UCr8 \n\ud83c\udf1e Secondary Lamp (BenQ Screenbar Plus): https://amzn.to/30Dtafi \n\ud83d\udcbb Monitor (BenQ EX2780Q): https://amzn.to/2HsmUPZ\n\ud83d\udcbb Monitor (LG Ultrawide 34WN750): https://amzn.to/3dSD7tS\n\ud83c\udf99 Mic Boom Arm (Rode PSA 1): https://amzn.to/30EZw9m \n\ud83c\udf9a Audio Interface (Focusrite Scarlet 4i4): https://amzn.to/2TjXsih\n\n\ud83d\udcb8 Donations \ud83d\udcb8 \n\ud83d\udcb5 One-Time Donations: https://www.paypal.com/donate?hosted_button_id=CU9FV329ADNT8\n\ud83d\udcb0 Patreon: https://www.patreon.com/techwithtim\n\u25fc\ufe0f\u25fc\ufe0f\u25fc\ufe0f\u25fc\ufe0f\u25fc\ufe0f\u25fc\ufe0f\u25fc\ufe0f\u25fc\ufe0f\u25fc\ufe0f\u25fc\ufe0f\u25fc\ufe0f\u25fc\ufe0f\u25fc\ufe0f\u25fc\ufe0f\n\n\u2b50\ufe0f Tags \u2b50\ufe0f\n- Tech With Tim\n- Python\n- Pygame\n- Python Tutorial\n- Paint\n- Drawing\n\n\u2b50\ufe0f Hashtags \u2b50\ufe0f\n#TechWithTim #Python",
        "thumbnails": {
          "default": {
            "url": "https://i.ytimg.com/vi/N20eXcfyQ_4/default.jpg",
            "width": 120,
            "height": 90
          },
          "medium": {
            "url": "https://i.ytimg.com/vi/N20eXcfyQ_4/mqdefault.jpg",
            "width": 320,
            "height": 180
          },
          "high": {
            "url": "https://i.ytimg.com/vi/N20eXcfyQ_4/hqdefault.jpg",
            "width": 480,
            "height": 360
          },
          "standard": {
            "url": "https://i.ytimg.com/vi/N20eXcfyQ_4/sddefault.jpg",
            "width": 640,
            "height": 480
          },
          "maxres": {
            "url": "https://i.ytimg.com/vi/N20eXcfyQ_4/maxresdefault.jpg",
            "width": 1280,
            "height": 720
          }
        },
        "channelTitle": "Donald Thompson",
        "playlistId": "PLIjhfluhNd98zSpKsf69arDUm1Dqbe0bn",
        "position": 98,
        "resourceId": {
          "kind": "youtube#video",
          "videoId": "N20eXcfyQ_4"
        },
        "videoOwnerChannelTitle": "Tech With Tim",
        "videoOwnerChannelId": "UC4JX40jDee_tINbkjycV4Sg"
      },
      "contentDetails": {
        "videoId": "N20eXcfyQ_4",
        "videoPublishedAt": "2021-07-15T15:00:09Z"
      }
    },
    {
      "kind": "youtube#playlistItem",
      "etag": "FHY82oN-Rm6unLLS0HQolanil-4",
      "id": "UExJamhmbHVoTmQ5OHpTcEtzZjY5YXJEVW0xRHFiZTBibi45ODRDNTg0QjA4NkFBNkQy",
      "snippet": {
        "publishedAt": "2021-08-15T07:10:27Z",
        "channelId": "UCqsUJL5xIWuidR7sIrPLhAw",
        "title": "12 Hour Coding Livestream - Creating an Online Game with Python",
        "description": "Watch me code live for 12 hours with no breaks during this 12 HOUR CODING LIVESTREAM. I am going to be creating an online multiplayer game with python, networking, sockets and pygame. Hopefully by the end of the stream I will have the game fully functioning and you guys can join the server and play with me!\n\nPlaylist: https://www.youtube.com/watch?v=iLHAKXQBOoA&list=PLzMcBGfZo4-nTARLniGMmigJT7P17wDDX\n\nThanks to the sponsors of this stream:\n\nLinode! get a $20 credit towards your first server using the code \"TWT19\" or by clicking: https://linode.com/techwithtim\n\nKite! Download the best AI automcolplete for python programming for free: https://kite.com/download/?utm_medium=referral&utm_source=youtube&utm_campaign=techwithtim&utm_content=live-stream-multiplayer-pictionary\n\nMusic: https://soundcloud.com/dormroom-ambiance\n\nGitHub Repo: https://github.com/techwithtim/Pictonary-Livestream/\n\n\u25fe\u25fe\u25fe\u25fe\u25fe\n\ud83d\udcbb Enroll in The Fundamentals of Programming w/ Python \nhttps://tech-with-tim.teachable.com/p...\n\n\ud83d\udcf8 Instagram: https://www.instagram.com/tech_with_tim\n\ud83c\udf0e Website https://techwithtim.net\n\ud83d\udcf1 Twitter: https://twitter.com/TechWithTimm\n\u2b50 Discord: https://discord.gg/pr2k55t\n\ud83d\udcdd LinkedIn: https://www.linkedin.com/in/tim-rusci...\n\ud83d\udcc2 GitHub: https://github.com/techwithtim\n\ud83d\udd0a Podcast: https://anchor.fm/tech-with-tim\n\n\ud83d\udcb5 One-Time Donations: https://www.paypal.com/donate/?token=...\n\ud83d\udcb0 Patreon: https://www.patreon.com/techwithtim\n\u25fe\u25fe\u25fe\u25fe\u25fe\u25fe\n\n\u26a1 Please leave a LIKE and SUBSCRIBE for more content! \u26a1\n\n\nTags:\n- Tech With Tim\n- Python Tutorials\n- Coding Livestream\n- Live Coding\n- Programming Livestream\n- Python Livestream\n- Online Game Python\n\n#Python #CodingLivestream #LiveCoding",
        "thumbnails": {
          "default": {
            "url": "https://i.ytimg.com/vi/wDIQ17T3sRk/default.jpg",
            "width": 120,
            "height": 90
          },
          "medium": {
            "url": "https://i.ytimg.com/vi/wDIQ17T3sRk/mqdefault.jpg",
            "width": 320,
            "height": 180
          },
          "high": {
            "url": "https://i.ytimg.com/vi/wDIQ17T3sRk/hqdefault.jpg",
            "width": 480,
            "height": 360
          }
        },
        "channelTitle": "Donald Thompson",
        "playlistId": "PLIjhfluhNd98zSpKsf69arDUm1Dqbe0bn",
        "position": 99,
        "resourceId": {
          "kind": "youtube#video",
          "videoId": "wDIQ17T3sRk"
        },
        "videoOwnerChannelTitle": "Tech With Tim",
        "videoOwnerChannelId": "UC4JX40jDee_tINbkjycV4Sg"
      },
      "contentDetails": {
        "videoId": "wDIQ17T3sRk",
        "videoPublishedAt": "2019-10-18T05:31:30Z"
      }
    },
    {
      "kind": "youtube#playlistItem",
      "etag": "_7yxF5-bh4VVh_9okfkYtaOc7To",
      "id": "UExJamhmbHVoTmQ5OHpTcEtzZjY5YXJEVW0xRHFiZTBibi5EMEEwRUY5M0RDRTU3NDJC",
      "snippet": {
        "publishedAt": "2021-08-15T07:10:14Z",
        "channelId": "UCqsUJL5xIWuidR7sIrPLhAw",
        "title": "Python Socket Programming Tutorial",
        "description": "This socket programming tutorial will show you how to connect multiple clients to a server using python 3 sockets. It covers how to send messages from clients to server and from server to clients. I will also show you how to host your socket server locally or globally across the internet so anyone can connect. This uses the python 3 socket and threading module. \n\nCode Download: https://techwithtim.net/tutorials/socket-programming/\n\n\u25fe\u25fe\u25fe\u25fe\u25fe\n\ud83d\udcbb Enroll in The Fundamentals of Programming w/ Python \nhttps://tech-with-tim.teachable.com/p/the-fundamentals-of-programming-with-python\n\n\ud83d\udcf8 Instagram: https://www.instagram.com/tech_with_tim\n\ud83c\udf0e Website https://techwithtim.net\n\ud83d\udcf1 Twitter: https://twitter.com/TechWithTimm\n\u2b50 Discord: https://discord.gg/pr2k55t\n\ud83d\udcdd LinkedIn: https://www.linkedin.com/in/tim-ruscica-82631b179/\n\ud83d\udcc2 GitHub: https://github.com/techwithtim\n\ud83d\udd0a Podcast: https://anchor.fm/tech-with-tim\n\n\ud83d\udcb5 One-Time Donations: https://www.paypal.com/donate/?token=m_JfrPK7DsK4PLk0CxNnv4VPutjqSldorAmgQIQnMozUwwQw93vdul-yhU06IwAuig15uG&country.x=CA&locale.x=\n\ud83d\udcb0 Patreon: https://www.patreon.com/techwithtim\n\u25fe\u25fe\u25fe\u25fe\u25fe\u25fe\n\n\u26a1 Please leave a LIKE and SUBSCRIBE for more content! \u26a1\n\n\u2b50 Tags \u2b50\n- Tech With Tim\n- Python Tutorials\n- Python Socket Programming\n- Socket Programming Python\n- Python Sockets Multiple Clients\n- Socket Tutorial Python\n- Python 3 Sockets\n\n\u2b50 Hashtags \u2b50\n#python #sockets",
        "thumbnails": {
          "default": {
            "url": "https://i.ytimg.com/vi/3QiPPX-KeSc/default.jpg",
            "width": 120,
            "height": 90
          },
          "medium": {
            "url": "https://i.ytimg.com/vi/3QiPPX-KeSc/mqdefault.jpg",
            "width": 320,
            "height": 180
          },
          "high": {
            "url": "https://i.ytimg.com/vi/3QiPPX-KeSc/hqdefault.jpg",
            "width": 480,
            "height": 360
          },
          "standard": {
            "url": "https://i.ytimg.com/vi/3QiPPX-KeSc/sddefault.jpg",
            "width": 640,
            "height": 480
          },
          "maxres": {
            "url": "https://i.ytimg.com/vi/3QiPPX-KeSc/maxresdefault.jpg",
            "width": 1280,
            "height": 720
          }
        },
        "channelTitle": "Donald Thompson",
        "playlistId": "PLIjhfluhNd98zSpKsf69arDUm1Dqbe0bn",
        "position": 100,
        "resourceId": {
          "kind": "youtube#video",
          "videoId": "3QiPPX-KeSc"
        },
        "videoOwnerChannelTitle": "Tech With Tim",
        "videoOwnerChannelId": "UC4JX40jDee_tINbkjycV4Sg"
      },
      "contentDetails": {
        "videoId": "3QiPPX-KeSc",
        "videoPublishedAt": "2020-04-05T13:00:02Z"
      }
    },
    {
      "kind": "youtube#playlistItem",
      "etag": "v8lbn5seK-wgq34_gTftOJALIkM",
      "id": "UExJamhmbHVoTmQ5OHpTcEtzZjY5YXJEVW0xRHFiZTBibi40NzZCMERDMjVEN0RFRThB",
      "snippet": {
        "publishedAt": "2021-08-15T07:10:07Z",
        "channelId": "UCqsUJL5xIWuidR7sIrPLhAw",
        "title": "Django For Beginners - Full Tutorial",
        "description": "Welcome to this Django complete course. In this video, I'll be covering all the important aspects of Django that as a beginner you need to know. We'll cover setting up a simple Django application, creating a database, allowing users to sign up, sign in, and sign out, and even showing user specific pages. \n\n\ud83d\udcbb AlgoExpert is the coding interview prep platform that I used to ace my Microsoft and Shopify interviews. Check it out and get a discount on the platform using the code \"techwithtim\" https://algoexpert.io/techwithtim \n\n\ud83d\udcc4 Resources \ud83d\udcc4\nSource Code & Text Based Tutorials: https://techwithtim.net/tutorials/django/\nBootstrap Website: https://getbootstrap.com/docs/4.3/getting-started/introduction/ \nBootstrap Docs: https://getbootstrap.com/docs/4.0/components/\n\n\u2b50\ufe0f Timestamps \u2b50\ufe0f\n00:00:00 | Introduction\n00:01:47 | Part 1 - Setup, Installation and Page Navigation\n00:22:00 | Part 2 - SQLite3 DataBase Tutorial\n00:44:32 | Part 3 - Admin Dashboard\n00:53:35 | Part 4 - Templates & Custom HTML\n01:21:11 | Part 5 - Simple Forms\n01:42:51 | Part 6 - Custom Forms\n01:57:08 | Part 7 - How to Add a Sidebar\n02:06:47 | Part 8 - How to Add Bootstrap\n02:21:19 | Part 9 - User Registration & Sign Up Page\n02:46:21 | Part 10 - Login, Logout and User Authentication\n02:59:49 | Part 11 - User Specific Pages/Access\n\n\u25fc\ufe0f\u25fc\ufe0f\u25fc\ufe0f\u25fc\ufe0f\u25fc\ufe0f\u25fc\ufe0f\u25fc\ufe0f\u25fc\ufe0f\u25fc\ufe0f\u25fc\ufe0f\u25fc\ufe0f\u25fc\ufe0f\u25fc\ufe0f\u25fc\ufe0f\n\ud83d\udcb0 Courses & Merch \ud83d\udcb0 \n\ud83d\udcbb The Fundamentals of Programming w/ Python: https://tech-with-tim.teachable.com/p/the-fundamentals-of-programming-with-python \n\ud83d\udc55 Merchandise: https://teespring.com/stores/tech-with-tim-merch-shop \n\n\ud83d\udd17 Social Medias \ud83d\udd17 \n\ud83d\udcf8 Instagram: https://www.instagram.com/tech_with_tim \n\ud83d\udcf1 Twitter: https://twitter.com/TechWithTimm \n\u2b50 Discord: https://discord.gg/twt\n\ud83d\udcdd LinkedIn: https://www.linkedin.com/in/tim-ruscica-82631b179/ \n\ud83c\udf0e Website: https://techwithtim.net \n\ud83d\udcc2 GitHub: https://github.com/techwithtim \n\ud83d\udd0a Podcast: https://anchor.fm/tech-with-tim \n\n\ud83c\udfac My YouTube Gear \ud83c\udfac \n\ud83c\udfa5 Main Camera (EOS Canon 90D): https://amzn.to/3cY23y9 \n\ud83c\udfa5 Secondary Camera (Panasonic Lumix G7): https://amzn.to/3fl2iEV \n\ud83d\udcf9 Main Lens (EFS 24mm f/2.8): https://amzn.to/2Yuol5r \n\ud83d\udd79 Tripod: https://amzn.to/3hpSprv \n\ud83c\udfa4 Main Microphone (Rode NT1): https://amzn.to/2HrZxXc\n\ud83c\udfa4 Secondary Microphone (Synco Wireless Lapel System): https://amzn.to/3e07Swl \n\ud83c\udfa4 Third Microphone (Rode NTG4+): https://amzn.to/3oi0v8Z\n\u2600\ufe0f Lights: https://amzn.to/2ApeiXr \n\u2328 Keyboard (Daskeyboard 4Q): https://amzn.to/2YpN5vm \n\ud83d\uddb1 Mouse (Logitech MX Master): https://amzn.to/2HsmRDN\n\ud83d\udcf8 Webcam (Logitech 1080p Pro): https://amzn.to/2B2IXcQ \n\ud83d\udce2 Speaker (Beats Pill): https://amzn.to/2XYc5ef \n\ud83c\udfa7 Headphones (Bose Quiet Comfort 35): https://amzn.to/2MWbl3e \n\ud83c\udf1e Lamp (BenQ E-reading Lamp): https://amzn.to/3e0UCr8 \n\ud83c\udf1e Secondary Lamp (BenQ Screenbar Plus): https://amzn.to/30Dtafi \n\ud83d\udcbb Monitor (BenQ EX2780Q): https://amzn.to/2HsmUPZ\n\ud83d\udcbb Monitor (LG Ultrawide 34WN750): https://amzn.to/3dSD7tS\n\ud83c\udf99 Mic Boom Arm (Rode PSA 1): https://amzn.to/30EZw9m \n\ud83c\udf9a Audio Interface (Focusrite Scarlet 4i4): https://amzn.to/2TjXsih\n\n\ud83d\udcb8 Donations \ud83d\udcb8 \n\ud83d\udcb5 One-Time Donations: https://www.paypal.com/donate?hosted_button_id=CU9FV329ADNT8\n\ud83d\udcb0 Patreon: https://www.patreon.com/techwithtim\n\u25fc\ufe0f\u25fc\ufe0f\u25fc\ufe0f\u25fc\ufe0f\u25fc\ufe0f\u25fc\ufe0f\u25fc\ufe0f\u25fc\ufe0f\u25fc\ufe0f\u25fc\ufe0f\u25fc\ufe0f\u25fc\ufe0f\u25fc\ufe0f\u25fc\ufe0f\n\n\u2b50\ufe0f Tags \u2b50\ufe0f\n- Tech With Tim\n- Python django web development\n- Django web development tutorial\n- Django tutorial\n- Python Tutorials\n- Creating a simple Django application\n- Django database\n\n\u2b50\ufe0f Hashtags \u2b50\ufe0f\n#Django #Python",
        "thumbnails": {
          "default": {
            "url": "https://i.ytimg.com/vi/sm1mokevMWk/default.jpg",
            "width": 120,
            "height": 90
          },
          "medium": {
            "url": "https://i.ytimg.com/vi/sm1mokevMWk/mqdefault.jpg",
            "width": 320,
            "height": 180
          },
          "high": {
            "url": "https://i.ytimg.com/vi/sm1mokevMWk/hqdefault.jpg",
            "width": 480,
            "height": 360
          },
          "standard": {
            "url": "https://i.ytimg.com/vi/sm1mokevMWk/sddefault.jpg",
            "width": 640,
            "height": 480
          },
          "maxres": {
            "url": "https://i.ytimg.com/vi/sm1mokevMWk/maxresdefault.jpg",
            "width": 1280,
            "height": 720
          }
        },
        "channelTitle": "Donald Thompson",
        "playlistId": "PLIjhfluhNd98zSpKsf69arDUm1Dqbe0bn",
        "position": 101,
        "resourceId": {
          "kind": "youtube#video",
          "videoId": "sm1mokevMWk"
        },
        "videoOwnerChannelTitle": "Tech With Tim",
        "videoOwnerChannelId": "UC4JX40jDee_tINbkjycV4Sg"
      },
      "contentDetails": {
        "videoId": "sm1mokevMWk",
        "videoPublishedAt": "2021-03-21T15:00:16Z"
      }
    },
    {
      "kind": "youtube#playlistItem",
      "etag": "-cX79LkWO35AvuYSo8GBMGyit1g",
      "id": "UExJamhmbHVoTmQ5OHpTcEtzZjY5YXJEVW0xRHFiZTBibi5GNjNDRDREMDQxOThCMDQ2",
      "snippet": {
        "publishedAt": "2021-08-15T07:09:57Z",
        "channelId": "UCqsUJL5xIWuidR7sIrPLhAw",
        "title": "Python Django Web Framework - Full Course for Beginners",
        "description": "Learn the Python Django framework with this free full course. Django is an extremely popular and fully featured server-side web framework, written in Python. Django allows you to quickly create web apps.\n\n\ud83d\udcbbCode: https://github.com/codingforentrepreneurs/Try-Django\n\n\u2b50\ufe0fCourse Contents \u2b50\ufe0f\n\u2328\ufe0f (0:00:00) 1 - Welcome\n\u2328\ufe0f (0:01:14) 2 - Installing to Get Started\n\u2328\ufe0f (0:05:02) 3 - Setup your Virtual Environment for Django\n\u2328\ufe0f (0:14:39) 4 - Create a Blank Django Project\n\u2328\ufe0f (0:18:54) 5 - Setup Your Code Text Editor\n\u2328\ufe0f (0:22:27) 6 - Settings\n\u2328\ufe0f (0:29:58) 7 - Built-In Components\n\u2328\ufe0f (0:33:57) 8 - Your First App Component\n\u2328\ufe0f (0:42:34) 9 - Create Product Objects in the Python Shell\n\u2328\ufe0f (0:46:18) 10 - New Model Fields\n\u2328\ufe0f (0:52:52) 11 - Change a Model\n\u2328\ufe0f (0:59:27) 12 - Default Homepage to Custom Homepage\n\u2328\ufe0f (1:04:48) 13 - URL Routing and Requests\n\u2328\ufe0f (1:10:23) 14 - Django Templates\n\u2328\ufe0f (1:16:50) 15 - Django Templating Engine Basics\n\u2328\ufe0f (1:24:00) 16 - Include Template Tag\n\u2328\ufe0f (1:26:49) 17 - Rendering Context in a Template\n\u2328\ufe0f (1:33:21) 18 - For Loop in a Template\n\u2328\ufe0f (1:37:01) 19 - Using Conditions in a Template\n\u2328\ufe0f (1:42:17) 20 - Template Tags and Filters\n\u2328\ufe0f (1:48:59) 21 - Render Data from the Database with a Model\n\u2328\ufe0f (1:59:55) 22 - How Django Templates Load with Apps\n\u2328\ufe0f (2:06:50) 23 - Django Model Forms\n\u2328\ufe0f (2:14:16) 24 - Raw HTML Form\n\u2328\ufe0f (2:25:33) 25 - Pure Django Form\n\u2328\ufe0f (2:35:30) 26 - Form Widgets\n\u2328\ufe0f (2:41:29) 27 - Form Validation Methods\n\u2328\ufe0f (2:48:59) 28 - Initial Values for Forms\n\u2328\ufe0f (2:51:42) 29 - Dynamic URL Routing\n\u2328\ufe0f (2:54:26) 30 - Handle DoesNotExist\n\u2328\ufe0f (2:56:24) 31 - Delete and Confirm\n\u2328\ufe0f (2:58:24) 32 - View of a List of Database Objects\n\u2328\ufe0f (3:00:00) 33 - Dynamic Linking of URLs\n\u2328\ufe0f (3:01:17) 34 - Django URLs Reverse\n\u2328\ufe0f (3:03:10) 35 - In App URLs and Namespacing\n\u2328\ufe0f (3:07:35) 36 - Class Based Views - ListView\n\u2328\ufe0f (3:10:45) 37 - Class Based Views - DetailView\n\u2328\ufe0f (3:15:38) 38 - Class Based Views - CreateView and UpdateView\n\u2328\ufe0f (3:21:23) 39 - Class Based Views - DeleteView\n\u2328\ufe0f (3:24:02) 40 - Function Based View to Class Based View\n\u2328\ufe0f (3:27:15) 41 - Raw Detail Class Based View\n\u2328\ufe0f (3:30:31) 42 - Raw List Class Based View\n\u2328\ufe0f (3:33:32) 43 - Raw Create Class Based View\n\u2328\ufe0f (3:26:03) 44 - Form Validation on a Post Method\n\u2328\ufe0f (3:37:58) 45 - Raw Update Class Based View\n\u2328\ufe0f (3:41:13) 46 - Raw Delete Class Based View\n\u2328\ufe0f (3:42:17) 47 - Custom Mixin for Class Based Views\n\nCourse from Coding for Entrepreneurs. Check out their YouTube channel: https://www.youtube.com/channel/UCWEHue8kksIaktO8KTTN_zg\n\nAlso, check out the Coding For Entrepreneurs website for more great content: https://www.codingforentrepreneurs.com\n\n--\n\nLearn to code for free and get a developer job: https://www.freecodecamp.org\n\nRead hundreds of articles on programming: https://medium.freecodecamp.org\n\nAnd subscribe for new videos on technology every day: https://youtube.com/subscription_center?add_user=freecodecamp",
        "thumbnails": {
          "default": {
            "url": "https://i.ytimg.com/vi/F5mRW0jo-U4/default.jpg",
            "width": 120,
            "height": 90
          },
          "medium": {
            "url": "https://i.ytimg.com/vi/F5mRW0jo-U4/mqdefault.jpg",
            "width": 320,
            "height": 180
          },
          "high": {
            "url": "https://i.ytimg.com/vi/F5mRW0jo-U4/hqdefault.jpg",
            "width": 480,
            "height": 360
          },
          "standard": {
            "url": "https://i.ytimg.com/vi/F5mRW0jo-U4/sddefault.jpg",
            "width": 640,
            "height": 480
          },
          "maxres": {
            "url": "https://i.ytimg.com/vi/F5mRW0jo-U4/maxresdefault.jpg",
            "width": 1280,
            "height": 720
          }
        },
        "channelTitle": "Donald Thompson",
        "playlistId": "PLIjhfluhNd98zSpKsf69arDUm1Dqbe0bn",
        "position": 102,
        "resourceId": {
          "kind": "youtube#video",
          "videoId": "F5mRW0jo-U4"
        },
        "videoOwnerChannelTitle": "freeCodeCamp.org",
        "videoOwnerChannelId": "UC8butISFwT-Wl7EV0hUK0BQ"
      },
      "contentDetails": {
        "videoId": "F5mRW0jo-U4",
        "videoPublishedAt": "2019-01-02T17:22:07Z"
      }
    },
    {
      "kind": "youtube#playlistItem",
      "etag": "SKccprs2tJVEk1QKPAxGoCEvX_Q",
      "id": "UExJamhmbHVoTmQ5OHpTcEtzZjY5YXJEVW0xRHFiZTBibi45NDk1REZENzhEMzU5MDQz",
      "snippet": {
        "publishedAt": "2021-08-15T07:09:37Z",
        "channelId": "UCqsUJL5xIWuidR7sIrPLhAw",
        "title": "Python Object Oriented Programming (OOP) - For Beginners",
        "description": "In this beginner object oriented programming tutorial I will be covering everything you need to know about classes, objects and OOP in python. This tutorial is designed for beginner python programmers and will give you a strong foundation in object oriented principles.\n\n\u25fe\u25fe\u25fe\u25fe\u25fe\n\ud83d\udcbb Enroll in The Fundamentals of Programming w/ Python \nhttps://tech-with-tim.teachable.com/p/the-fundamentals-of-programming-with-python\n\n\ud83d\udcf8 Instagram: https://www.instagram.com/tech_with_tim\n\ud83c\udf0e Website https://techwithtim.net\n\ud83d\udcf1 Twitter: https://twitter.com/TechWithTimm\n\u2b50 Discord: https://discord.gg/pr2k55t\n\ud83d\udcdd LinkedIn: https://www.linkedin.com/in/tim-ruscica-82631b179/\n\ud83d\udcc2 GitHub: https://github.com/techwithtim\n\ud83d\udd0a Podcast: https://anchor.fm/tech-with-tim\n\n\ud83d\udcb5 One-Time Donations: https://www.paypal.com/donate/?token=m_JfrPK7DsK4PLk0CxNnv4VPutjqSldorAmgQIQnMozUwwQw93vdul-yhU06IwAuig15uG&country.x=CA&locale.x=\n\ud83d\udcb0 Patreon: https://www.patreon.com/techwithtim\n\u25fe\u25fe\u25fe\u25fe\u25fe\u25fe\n\n\u26a1 Please leave a LIKE and SUBSCRIBE for more content! \u26a1\n\n\u2b50 Tags \u2b50\n- Tech With Tim\n- Python Tutorials\n- Object Oriented Programming Python\n- Python OOP\n- Python Objects and Classes\n- Classes Python\n- Objects and Classes Python\n\n\u2b50 Hashtags \u2b50\n#python #OOP",
        "thumbnails": {
          "default": {
            "url": "https://i.ytimg.com/vi/JeznW_7DlB0/default.jpg",
            "width": 120,
            "height": 90
          },
          "medium": {
            "url": "https://i.ytimg.com/vi/JeznW_7DlB0/mqdefault.jpg",
            "width": 320,
            "height": 180
          },
          "high": {
            "url": "https://i.ytimg.com/vi/JeznW_7DlB0/hqdefault.jpg",
            "width": 480,
            "height": 360
          },
          "standard": {
            "url": "https://i.ytimg.com/vi/JeznW_7DlB0/sddefault.jpg",
            "width": 640,
            "height": 480
          },
          "maxres": {
            "url": "https://i.ytimg.com/vi/JeznW_7DlB0/maxresdefault.jpg",
            "width": 1280,
            "height": 720
          }
        },
        "channelTitle": "Donald Thompson",
        "playlistId": "PLIjhfluhNd98zSpKsf69arDUm1Dqbe0bn",
        "position": 103,
        "resourceId": {
          "kind": "youtube#video",
          "videoId": "JeznW_7DlB0"
        },
        "videoOwnerChannelTitle": "Tech With Tim",
        "videoOwnerChannelId": "UC4JX40jDee_tINbkjycV4Sg"
      },
      "contentDetails": {
        "videoId": "JeznW_7DlB0",
        "videoPublishedAt": "2020-03-29T17:02:09Z"
      }
    },
    {
      "kind": "youtube#playlistItem",
      "etag": "TQ9ettxPxTBzLum61tTNTbRnDTg",
      "id": "UExJamhmbHVoTmQ5OHpTcEtzZjY5YXJEVW0xRHFiZTBibi5DQUNERDQ2NkIzRUQxNTY1",
      "snippet": {
        "publishedAt": "2021-08-15T07:09:24Z",
        "channelId": "UCqsUJL5xIWuidR7sIrPLhAw",
        "title": "Automate Excel With Python - Python Excel Tutorial (OpenPyXL)",
        "description": "The first 1,000 people to click this link will get a free career coaching session courtesy of Career Karma: https://rebrand.ly/tech-with-tim-51321\n\nWelcome to another video! In this video, I will cover how we can use python to automate Excel. I'll be going over everything from creating workbooks to accessing individual cells and stylizing cells. There is a ton of things that you can do with Excel but I'll just be covering the core/base things in OpenPyXl.\n\n\ud83d\udcc4 Resources \ud83d\udcc4\nOpenPyXL Docs: https://openpyxl.readthedocs.io/en/stable/\nCode Written in This Tutorial: https://github.com/techwithtim/ExcelPythonTutorial\nFix Pip (Windows): https://www.youtube.com/watch?v=AdUZArA-kZw\nFix Pip (Mac/Linux): https://www.youtube.com/watch?v=E-WhAS6qzsU&t=4s\n\n\u2b50\ufe0f Timestamps \u2b50\ufe0f\n00:00 | Introduction\n02:14 | Installing openpyxl\n03:19 | Testing Installation\n04:25 | Loading an Existing Workbook\n06:46 | Accessing Worksheets\n07:37 | Accessing Cell Values\n08:58 | Saving Workbooks\n09:52 | Creating, Listing and Changing Sheets\n11:50 | Creating a New Workbook\n12:39 | Adding/Appending Rows\n14:26 | Accessing Multiple Cells\n20:46 | Merging Cells\n22:27 | Inserting and Deleting Rows\n23:35 | Inserting and Deleting Columns\n24:48 | Copying and Moving Cells\n26:06 | Practical Example, Formulas & Cell Styling\n\n\u25fc\ufe0f\u25fc\ufe0f\u25fc\ufe0f\u25fc\ufe0f\u25fc\ufe0f\u25fc\ufe0f\u25fc\ufe0f\u25fc\ufe0f\u25fc\ufe0f\u25fc\ufe0f\u25fc\ufe0f\u25fc\ufe0f\u25fc\ufe0f\u25fc\ufe0f\n\ud83d\udcb0 Courses & Merch \ud83d\udcb0 \n\ud83d\udcbb The Fundamentals of Programming w/ Python: https://tech-with-tim.teachable.com/p/the-fundamentals-of-programming-with-python \n\ud83d\udc55 Merchandise: https://teespring.com/stores/tech-with-tim-merch-shop \n\n\ud83d\udd17 Social Medias \ud83d\udd17 \n\ud83d\udcf8 Instagram: https://www.instagram.com/tech_with_tim \n\ud83d\udcf1 Twitter: https://twitter.com/TechWithTimm \n\u2b50 Discord: https://discord.gg/twt\n\ud83d\udcdd LinkedIn: https://www.linkedin.com/in/tim-ruscica-82631b179/ \n\ud83c\udf0e Website: https://techwithtim.net \n\ud83d\udcc2 GitHub: https://github.com/techwithtim \n\ud83d\udd0a Podcast: https://anchor.fm/tech-with-tim \n\n\ud83c\udfac My YouTube Gear \ud83c\udfac \n\ud83c\udfa5 Main Camera (EOS Canon 90D): https://amzn.to/3cY23y9 \n\ud83c\udfa5 Secondary Camera (Panasonic Lumix G7): https://amzn.to/3fl2iEV \n\ud83d\udcf9 Main Lens (EFS 24mm f/2.8): https://amzn.to/2Yuol5r \n\ud83d\udd79 Tripod: https://amzn.to/3hpSprv \n\ud83c\udfa4 Main Microphone (Rode NT1): https://amzn.to/2HrZxXc\n\ud83c\udfa4 Secondary Microphone (Synco Wireless Lapel System): https://amzn.to/3e07Swl \n\ud83c\udfa4 Third Microphone (Rode NTG4+): https://amzn.to/3oi0v8Z\n\u2600\ufe0f Lights: https://amzn.to/2ApeiXr \n\u2328 Keyboard (Daskeyboard 4Q): https://amzn.to/2YpN5vm \n\ud83d\uddb1 Mouse (Logitech MX Master): https://amzn.to/2HsmRDN\n\ud83d\udcf8 Webcam (Logitech 1080p Pro): https://amzn.to/2B2IXcQ \n\ud83d\udce2 Speaker (Beats Pill): https://amzn.to/2XYc5ef \n\ud83c\udfa7 Headphones (Bose Quiet Comfort 35): https://amzn.to/2MWbl3e \n\ud83c\udf1e Lamp (BenQ E-reading Lamp): https://amzn.to/3e0UCr8 \n\ud83c\udf1e Secondary Lamp (BenQ Screenbar Plus): https://amzn.to/30Dtafi \n\ud83d\udcbb Monitor (BenQ EX2780Q): https://amzn.to/2HsmUPZ\n\ud83d\udcbb Monitor (LG Ultrawide 34WN750): https://amzn.to/3dSD7tS\n\ud83c\udf99 Mic Boom Arm (Rode PSA 1): https://amzn.to/30EZw9m \n\ud83c\udf9a Audio Interface (Focusrite Scarlet 4i4): https://amzn.to/2TjXsih\n\n\ud83d\udcb8 Donations \ud83d\udcb8 \n\ud83d\udcb5 One-Time Donations: https://www.paypal.com/donate?hosted_button_id=CU9FV329ADNT8\n\ud83d\udcb0 Patreon: https://www.patreon.com/techwithtim\n\u25fc\ufe0f\u25fc\ufe0f\u25fc\ufe0f\u25fc\ufe0f\u25fc\ufe0f\u25fc\ufe0f\u25fc\ufe0f\u25fc\ufe0f\u25fc\ufe0f\u25fc\ufe0f\u25fc\ufe0f\u25fc\ufe0f\u25fc\ufe0f\u25fc\ufe0f\n\n\u2b50\ufe0f Tags \u2b50\ufe0f\n- Tech With Tim\n- Python\n- Excel\n- Python Tutorial\n- Python and Excel\n- Automating Excel\n\n\u2b50\ufe0f Hashtags \u2b50\ufe0f\n#TechWithTim #PythonExcelTutorial",
        "thumbnails": {
          "default": {
            "url": "https://i.ytimg.com/vi/7YS6YDQKFh0/default.jpg",
            "width": 120,
            "height": 90
          },
          "medium": {
            "url": "https://i.ytimg.com/vi/7YS6YDQKFh0/mqdefault.jpg",
            "width": 320,
            "height": 180
          },
          "high": {
            "url": "https://i.ytimg.com/vi/7YS6YDQKFh0/hqdefault.jpg",
            "width": 480,
            "height": 360
          },
          "standard": {
            "url": "https://i.ytimg.com/vi/7YS6YDQKFh0/sddefault.jpg",
            "width": 640,
            "height": 480
          },
          "maxres": {
            "url": "https://i.ytimg.com/vi/7YS6YDQKFh0/maxresdefault.jpg",
            "width": 1280,
            "height": 720
          }
        },
        "channelTitle": "Donald Thompson",
        "playlistId": "PLIjhfluhNd98zSpKsf69arDUm1Dqbe0bn",
        "position": 104,
        "resourceId": {
          "kind": "youtube#video",
          "videoId": "7YS6YDQKFh0"
        },
        "videoOwnerChannelTitle": "Tech With Tim",
        "videoOwnerChannelId": "UC4JX40jDee_tINbkjycV4Sg"
      },
      "contentDetails": {
        "videoId": "7YS6YDQKFh0",
        "videoPublishedAt": "2021-05-13T15:00:09Z"
      }
    },
    {
      "kind": "youtube#playlistItem",
      "etag": "CIdOL-WDsvYY2SPuA1o1mGgKGKM",
      "id": "UExJamhmbHVoTmQ5OHpTcEtzZjY5YXJEVW0xRHFiZTBibi4yODlGNEE0NkRGMEEzMEQy",
      "snippet": {
        "publishedAt": "2021-08-15T07:09:11Z",
        "channelId": "UCqsUJL5xIWuidR7sIrPLhAw",
        "title": "Python Is Weird...",
        "description": "\ud83d\udcbb Answer my techie test question for a chance to win your dream work from home setup worth up to \u00a35,000 courtesy of Fasthosts at this link! https://www.fasthosts.co.uk/techwithtim\n\nWelcome back to another video! In this video, I will be showing off some weird python code. I'll just be showing short snippets of this strange code. A fun way to watch this video is to use it like a test for yourself to guess what the outcome of the code is before I run it.\n\n\ud83d\udcc4 Resources \ud83d\udcc4\nFind more weird python code here: https://github.com/satwikkansal/wtfpython#-first-things-first-\n\n\u2b50\ufe0f Timestamps \u2b50\ufe0f\n00:00 | Overview\n00:51 | this Module\n01:23 | antigravity Module\n01:48 | Walrus Operator ( := )\n05:39 | String Intern\n10:02 | Fasthosts Giveaway!\n11:25 | Chained Operations\n14:39 | Dictionary Key Hashing\n17:48 | all() Function\n20:03 | not\n22:33 | Can You Guess This?\n\n\u25fc\ufe0f\u25fc\ufe0f\u25fc\ufe0f\u25fc\ufe0f\u25fc\ufe0f\u25fc\ufe0f\u25fc\ufe0f\u25fc\ufe0f\u25fc\ufe0f\u25fc\ufe0f\u25fc\ufe0f\u25fc\ufe0f\u25fc\ufe0f\u25fc\ufe0f\n\ud83d\udcb0 Courses & Merch \ud83d\udcb0 \n\ud83d\udcbb The Fundamentals of Programming w/ Python: https://tech-with-tim.teachable.com/p/the-fundamentals-of-programming-with-python \n\ud83d\udc55 Merchandise: https://teespring.com/stores/tech-with-tim-merch-shop \n\n\ud83d\udd17 Social Medias \ud83d\udd17 \n\ud83d\udcf8 Instagram: https://www.instagram.com/tech_with_tim \n\ud83d\udcf1 Twitter: https://twitter.com/TechWithTimm \n\u2b50 Discord: https://discord.gg/twt\n\ud83d\udcdd LinkedIn: https://www.linkedin.com/in/tim-ruscica-82631b179/ \n\ud83c\udf0e Website: https://techwithtim.net \n\ud83d\udcc2 GitHub: https://github.com/techwithtim \n\ud83d\udd0a Podcast: https://anchor.fm/tech-with-tim \n\n\ud83c\udfac My YouTube Gear \ud83c\udfac \n\ud83c\udfa5 Main Camera (EOS Canon 90D): https://amzn.to/3cY23y9 \n\ud83c\udfa5 Secondary Camera (Panasonic Lumix G7): https://amzn.to/3fl2iEV \n\ud83d\udcf9 Main Lens (EFS 24mm f/2.8): https://amzn.to/2Yuol5r \n\ud83d\udd79 Tripod: https://amzn.to/3hpSprv \n\ud83c\udfa4 Main Microphone (Rode NT1): https://amzn.to/2HrZxXc\n\ud83c\udfa4 Secondary Microphone (Synco Wireless Lapel System): https://amzn.to/3e07Swl \n\ud83c\udfa4 Third Microphone (Rode NTG4+): https://amzn.to/3oi0v8Z\n\u2600\ufe0f Lights: https://amzn.to/2ApeiXr \n\u2328 Keyboard (Daskeyboard 4Q): https://amzn.to/2YpN5vm \n\ud83d\uddb1 Mouse (Logitech MX Master): https://amzn.to/2HsmRDN\n\ud83d\udcf8 Webcam (Logitech 1080p Pro): https://amzn.to/2B2IXcQ \n\ud83d\udce2 Speaker (Beats Pill): https://amzn.to/2XYc5ef \n\ud83c\udfa7 Headphones (Bose Quiet Comfort 35): https://amzn.to/2MWbl3e \n\ud83c\udf1e Lamp (BenQ E-reading Lamp): https://amzn.to/3e0UCr8 \n\ud83c\udf1e Secondary Lamp (BenQ Screenbar Plus): https://amzn.to/30Dtafi \n\ud83d\udcbb Monitor (BenQ EX2780Q): https://amzn.to/2HsmUPZ\n\ud83d\udcbb Monitor (LG Ultrawide 34WN750): https://amzn.to/3dSD7tS\n\ud83c\udf99 Mic Boom Arm (Rode PSA 1): https://amzn.to/30EZw9m \n\ud83c\udf9a Audio Interface (Focusrite Scarlet 4i4): https://amzn.to/2TjXsih\n\n\ud83d\udcb8 Donations \ud83d\udcb8 \n\ud83d\udcb5 One-Time Donations: https://www.paypal.com/donate?hosted_button_id=CU9FV329ADNT8\n\ud83d\udcb0 Patreon: https://www.patreon.com/techwithtim\n\u25fc\ufe0f\u25fc\ufe0f\u25fc\ufe0f\u25fc\ufe0f\u25fc\ufe0f\u25fc\ufe0f\u25fc\ufe0f\u25fc\ufe0f\u25fc\ufe0f\u25fc\ufe0f\u25fc\ufe0f\u25fc\ufe0f\u25fc\ufe0f\u25fc\ufe0f\n\n\u2b50\ufe0f Tags \u2b50\ufe0f\n- Tech With Tim\n- Python\n- Weird\n- Code\n- Fasthosts\n- Giveaway\n\n\u2b50\ufe0f Hashtags \u2b50\ufe0f\n#TechWithTim #Giveaway",
        "thumbnails": {
          "default": {
            "url": "https://i.ytimg.com/vi/hz7ipeH5Dug/default.jpg",
            "width": 120,
            "height": 90
          },
          "medium": {
            "url": "https://i.ytimg.com/vi/hz7ipeH5Dug/mqdefault.jpg",
            "width": 320,
            "height": 180
          },
          "high": {
            "url": "https://i.ytimg.com/vi/hz7ipeH5Dug/hqdefault.jpg",
            "width": 480,
            "height": 360
          },
          "standard": {
            "url": "https://i.ytimg.com/vi/hz7ipeH5Dug/sddefault.jpg",
            "width": 640,
            "height": 480
          },
          "maxres": {
            "url": "https://i.ytimg.com/vi/hz7ipeH5Dug/maxresdefault.jpg",
            "width": 1280,
            "height": 720
          }
        },
        "channelTitle": "Donald Thompson",
        "playlistId": "PLIjhfluhNd98zSpKsf69arDUm1Dqbe0bn",
        "position": 105,
        "resourceId": {
          "kind": "youtube#video",
          "videoId": "hz7ipeH5Dug"
        },
        "videoOwnerChannelTitle": "Tech With Tim",
        "videoOwnerChannelId": "UC4JX40jDee_tINbkjycV4Sg"
      },
      "contentDetails": {
        "videoId": "hz7ipeH5Dug",
        "videoPublishedAt": "2021-08-11T15:06:53Z"
      }
    },
    {
      "kind": "youtube#playlistItem",
      "etag": "HC35vjn26KefMzKyb-Vvz7R479o",
      "id": "UExJamhmbHVoTmQ5OHpTcEtzZjY5YXJEVW0xRHFiZTBibi4wMTcyMDhGQUE4NTIzM0Y5",
      "snippet": {
        "publishedAt": "2021-08-15T07:09:11Z",
        "channelId": "UCqsUJL5xIWuidR7sIrPLhAw",
        "title": "10 Python Shortcuts You Need To Know",
        "description": "\ud83d\udcbb Want to jumpstart your career in tech? Click the link below to match with the best programs for you and join your first coaching session. The first 1,000 people to click the link can join their free career coaching session with a Career Karma coach today: https://ck.chat/tech-with-tim\n\nWelcome back to another video! In this video, I will be showing 10 useful python shortcuts! These won't be advanced shortcuts, just some python language features to save some time and lines of code. If you use python a fair amount, then this will definitely be worth your time.\n\n\u2b50\ufe0f Timestamps \u2b50\ufe0f\n00:00 | Overview\n01:38 | F Strings\n03:35 | Unpacking\n06:07 | Multiple Assignment\n07:35 | Comprehensions\n10:55 | Object Multiplication\n11:53 | Ternary Conditions\n13:17 | Zip Function\n15:22 | *args & **kwargs\n18:53 | For & While Else\n21:25 | Sort By Key\n24:09 | BONUS\n\n\u25fc\ufe0f\u25fc\ufe0f\u25fc\ufe0f\u25fc\ufe0f\u25fc\ufe0f\u25fc\ufe0f\u25fc\ufe0f\u25fc\ufe0f\u25fc\ufe0f\u25fc\ufe0f\u25fc\ufe0f\u25fc\ufe0f\u25fc\ufe0f\u25fc\ufe0f\n\ud83d\udcb0 Courses & Merch \ud83d\udcb0 \n\ud83d\udcbb The Fundamentals of Programming w/ Python: https://tech-with-tim.teachable.com/p/the-fundamentals-of-programming-with-python \n\ud83d\udc55 Merchandise: https://teespring.com/stores/tech-with-tim-merch-shop \n\n\ud83d\udd17 Social Medias \ud83d\udd17 \n\ud83d\udcf8 Instagram: https://www.instagram.com/tech_with_tim \n\ud83d\udcf1 Twitter: https://twitter.com/TechWithTimm \n\u2b50 Discord: https://discord.gg/twt\n\ud83d\udcdd LinkedIn: https://www.linkedin.com/in/tim-ruscica-82631b179/ \n\ud83c\udf0e Website: https://techwithtim.net \n\ud83d\udcc2 GitHub: https://github.com/techwithtim \n\ud83d\udd0a Podcast: https://anchor.fm/tech-with-tim \n\n\ud83c\udfac My YouTube Gear \ud83c\udfac \n\ud83c\udfa5 Main Camera (EOS Canon 90D): https://amzn.to/3cY23y9 \n\ud83c\udfa5 Secondary Camera (Panasonic Lumix G7): https://amzn.to/3fl2iEV \n\ud83d\udcf9 Main Lens (EFS 24mm f/2.8): https://amzn.to/2Yuol5r \n\ud83d\udd79 Tripod: https://amzn.to/3hpSprv \n\ud83c\udfa4 Main Microphone (Rode NT1): https://amzn.to/2HrZxXc\n\ud83c\udfa4 Secondary Microphone (Synco Wireless Lapel System): https://amzn.to/3e07Swl \n\ud83c\udfa4 Third Microphone (Rode NTG4+): https://amzn.to/3oi0v8Z\n\u2600\ufe0f Lights: https://amzn.to/2ApeiXr \n\u2328 Keyboard (Daskeyboard 4Q): https://amzn.to/2YpN5vm \n\ud83d\uddb1 Mouse (Logitech MX Master): https://amzn.to/2HsmRDN\n\ud83d\udcf8 Webcam (Logitech 1080p Pro): https://amzn.to/2B2IXcQ \n\ud83d\udce2 Speaker (Beats Pill): https://amzn.to/2XYc5ef \n\ud83c\udfa7 Headphones (Bose Quiet Comfort 35): https://amzn.to/2MWbl3e \n\ud83c\udf1e Lamp (BenQ E-reading Lamp): https://amzn.to/3e0UCr8 \n\ud83c\udf1e Secondary Lamp (BenQ Screenbar Plus): https://amzn.to/30Dtafi \n\ud83d\udcbb Monitor (BenQ EX2780Q): https://amzn.to/2HsmUPZ\n\ud83d\udcbb Monitor (LG Ultrawide 34WN750): https://amzn.to/3dSD7tS\n\ud83c\udf99 Mic Boom Arm (Rode PSA 1): https://amzn.to/30EZw9m \n\ud83c\udf9a Audio Interface (Focusrite Scarlet 4i4): https://amzn.to/2TjXsih\n\n\ud83d\udcb8 Donations \ud83d\udcb8 \n\ud83d\udcb5 One-Time Donations: https://www.paypal.com/donate?hosted_button_id=CU9FV329ADNT8\n\ud83d\udcb0 Patreon: https://www.patreon.com/techwithtim\n\u25fc\ufe0f\u25fc\ufe0f\u25fc\ufe0f\u25fc\ufe0f\u25fc\ufe0f\u25fc\ufe0f\u25fc\ufe0f\u25fc\ufe0f\u25fc\ufe0f\u25fc\ufe0f\u25fc\ufe0f\u25fc\ufe0f\u25fc\ufe0f\u25fc\ufe0f\n\n\u2b50\ufe0f Tags \u2b50\ufe0f\n-Tech With Tim\n- Shortcuts\n- Unpacking\n- F Strings\n- Comprehensions\n- Ternary Conditions\n\n\u2b50\ufe0f Hashtags \u2b50\ufe0f\n#TechWithTim #PythonShortcuts",
        "thumbnails": {
          "default": {
            "url": "https://i.ytimg.com/vi/CssrFJGH_dU/default.jpg",
            "width": 120,
            "height": 90
          },
          "medium": {
            "url": "https://i.ytimg.com/vi/CssrFJGH_dU/mqdefault.jpg",
            "width": 320,
            "height": 180
          },
          "high": {
            "url": "https://i.ytimg.com/vi/CssrFJGH_dU/hqdefault.jpg",
            "width": 480,
            "height": 360
          },
          "standard": {
            "url": "https://i.ytimg.com/vi/CssrFJGH_dU/sddefault.jpg",
            "width": 640,
            "height": 480
          },
          "maxres": {
            "url": "https://i.ytimg.com/vi/CssrFJGH_dU/maxresdefault.jpg",
            "width": 1280,
            "height": 720
          }
        },
        "channelTitle": "Donald Thompson",
        "playlistId": "PLIjhfluhNd98zSpKsf69arDUm1Dqbe0bn",
        "position": 106,
        "resourceId": {
          "kind": "youtube#video",
          "videoId": "CssrFJGH_dU"
        },
        "videoOwnerChannelTitle": "Tech With Tim",
        "videoOwnerChannelId": "UC4JX40jDee_tINbkjycV4Sg"
      },
      "contentDetails": {
        "videoId": "CssrFJGH_dU",
        "videoPublishedAt": "2021-07-30T15:00:04Z"
      }
    },
    {
      "kind": "youtube#playlistItem",
      "etag": "XhfnI8HZJNchXy_QsnDgZcT5F3U",
      "id": "UExJamhmbHVoTmQ5OHpTcEtzZjY5YXJEVW0xRHFiZTBibi41MjE1MkI0OTQ2QzJGNzNG",
      "snippet": {
        "publishedAt": "2021-08-15T07:09:11Z",
        "channelId": "UCqsUJL5xIWuidR7sIrPLhAw",
        "title": "5 Ideas to Help you Think Like a Programmer in Python!",
        "description": "How to think like a programmer in python. The are several strands to learning python. You have to learn the syntax of python and the basic structure of python and the important methods and functions in python. But the most important aspect of learning python or any programming language is to think like a programmer. In this video I talk about why learning to think like a programmer in python is essential to your python journey. I also give some very useful resource to help you do this. The websites are:-\n\nhttp://www.projecteuler.net\nhttp://www.pythonchallenge.com\nhttp://www.hackerrank.com\nhttp://www.practice python.org\n\nMusic by http://www.bensound.com",
        "thumbnails": {
          "default": {
            "url": "https://i.ytimg.com/vi/tL7HM4M4Fnk/default.jpg",
            "width": 120,
            "height": 90
          },
          "medium": {
            "url": "https://i.ytimg.com/vi/tL7HM4M4Fnk/mqdefault.jpg",
            "width": 320,
            "height": 180
          },
          "high": {
            "url": "https://i.ytimg.com/vi/tL7HM4M4Fnk/hqdefault.jpg",
            "width": 480,
            "height": 360
          },
          "standard": {
            "url": "https://i.ytimg.com/vi/tL7HM4M4Fnk/sddefault.jpg",
            "width": 640,
            "height": 480
          },
          "maxres": {
            "url": "https://i.ytimg.com/vi/tL7HM4M4Fnk/maxresdefault.jpg",
            "width": 1280,
            "height": 720
          }
        },
        "channelTitle": "Donald Thompson",
        "playlistId": "PLIjhfluhNd98zSpKsf69arDUm1Dqbe0bn",
        "position": 107,
        "resourceId": {
          "kind": "youtube#video",
          "videoId": "tL7HM4M4Fnk"
        },
        "videoOwnerChannelTitle": "Python Programmer",
        "videoOwnerChannelId": "UC68KSmHePPePCjW4v57VPQg"
      },
      "contentDetails": {
        "videoId": "tL7HM4M4Fnk",
        "videoPublishedAt": "2018-07-26T13:20:53Z"
      }
    },
    {
      "kind": "youtube#playlistItem",
      "etag": "7pCZvoT7VLSFSHAqK_noL-dRxEs",
      "id": "UExJamhmbHVoTmQ5OHpTcEtzZjY5YXJEVW0xRHFiZTBibi4wOTA3OTZBNzVEMTUzOTMy",
      "snippet": {
        "publishedAt": "2021-08-15T07:09:11Z",
        "channelId": "UCqsUJL5xIWuidR7sIrPLhAw",
        "title": "15 Python Projects in Under 15 Minutes (Code Included)",
        "description": "View 15 awesome python projects I've worked to create over the past 3 years. Most of these projects are written using the module pygame and have graphical components to them. Hopefully this can give you some good python project ideas that you yourself can work on.\n\nPlaylist: https://www.youtube.com/watch?v=iLHAKXQBOoA&list=PLzMcBGfZo4-nTARLniGMmigJT7P17wDDX\n\nNote: This is just a small subset of all of the python projects I've created. The one showcased are much more entertaining to look at have some graphical component to them.\n\nPROJECT LINKS:\nHangman: https://github.com/techwithtim/Hangman\nDrawing Program: https://github.com/techwithtim/Python-Drawing-Program\nTurtle Race: https://github.com/techwithtim/Turtle-Race\nAccount Storage: https://github.com/techwithtim/Account-Storage\nA Star Path Finding: https://github.com/techwithtim/A-Path-Finding-Visualization\nGolf Game: https://github.com/techwithtim/Golf-Game\nBlack Jack: https://github.com/techwithtim/Black-Jack\nSnake Game: https://github.com/techwithtim/Snake-Game\nTetris: https://github.com/techwithtim/Tetris-Game\nSudoku: https://github.com/techwithtim/Sudoku-GUI-Solver\nDiscord Bot: Not Available\nOnline Chess Game: https://github.com/techwithtim/Online-Chess-Game\nKivy Login: https://github.com/techwithtim/Kivy-GUI-Example\nTower Defense Game: https://github.com/techwithtim/Tower-Defense-Game\nFace Recognition (Only On Images):  https://github.com/techwithtim/Face-Recognition\n\n\u25fe\u25fe\u25fe\u25fe\u25fe\n\ud83d\udcbb Enroll in The Fundamentals of Programming w/ Python \nhttps://tech-with-tim.teachable.com/p...\n\n\ud83d\udcf8 Instagram: https://www.instagram.com/tech_with_tim\n\ud83c\udf0e Website https://techwithtim.net\n\ud83d\udcf1 Twitter: https://twitter.com/TechWithTimm\n\u2b50 Discord: https://discord.gg/pr2k55t\n\ud83d\udcdd LinkedIn: https://www.linkedin.com/in/tim-rusci...\n\ud83d\udcc2 GitHub: https://github.com/techwithtim\n\ud83d\udd0a Podcast: https://anchor.fm/tech-with-tim\n\n\ud83d\udcb5 One-Time Donations: https://www.paypal.com/donate/?token=...\n\ud83d\udcb0 Patreon: https://www.patreon.com/techwithtim\n\u25fe\u25fe\u25fe\u25fe\u25fe\u25fe\n\n\u26a1 Please leave a LIKE and SUBSCRIBE for more content! \u26a1 \n\nTags:\n- Tech With Tim\n- Python Tutorials\n- Python Project Ideas\n- Python Projects\n- Python Project Example\n- Example Python Projects\n\n#python #pygame #pythonprojects",
        "thumbnails": {
          "default": {
            "url": "https://i.ytimg.com/vi/OXi4T58PwdM/default.jpg",
            "width": 120,
            "height": 90
          },
          "medium": {
            "url": "https://i.ytimg.com/vi/OXi4T58PwdM/mqdefault.jpg",
            "width": 320,
            "height": 180
          },
          "high": {
            "url": "https://i.ytimg.com/vi/OXi4T58PwdM/hqdefault.jpg",
            "width": 480,
            "height": 360
          },
          "standard": {
            "url": "https://i.ytimg.com/vi/OXi4T58PwdM/sddefault.jpg",
            "width": 640,
            "height": 480
          },
          "maxres": {
            "url": "https://i.ytimg.com/vi/OXi4T58PwdM/maxresdefault.jpg",
            "width": 1280,
            "height": 720
          }
        },
        "channelTitle": "Donald Thompson",
        "playlistId": "PLIjhfluhNd98zSpKsf69arDUm1Dqbe0bn",
        "position": 108,
        "resourceId": {
          "kind": "youtube#video",
          "videoId": "OXi4T58PwdM"
        },
        "videoOwnerChannelTitle": "Tech With Tim",
        "videoOwnerChannelId": "UC4JX40jDee_tINbkjycV4Sg"
      },
      "contentDetails": {
        "videoId": "OXi4T58PwdM",
        "videoPublishedAt": "2019-06-27T16:43:48Z"
      }
    },
    {
      "kind": "youtube#playlistItem",
      "etag": "8VMTMe_eyc98WErnZtSZMII6Vd8",
      "id": "UExJamhmbHVoTmQ5OHpTcEtzZjY5YXJEVW0xRHFiZTBibi41MzJCQjBCNDIyRkJDN0VD",
      "snippet": {
        "publishedAt": "2021-08-15T07:09:11Z",
        "channelId": "UCqsUJL5xIWuidR7sIrPLhAw",
        "title": "Python Website Full Tutorial - Flask, Authentication, Databases & More",
        "description": "In this video, I'm going to be showing you how to make a website with Python, covering Flask, authentication, databases, and more. The goal of this video is to give you what you need to make a finished product that you can tweak, and turn into anything you like. We're going to also go over how you create a new user's account, how you store those in a database, how to log into those user accounts, how to log out of them, and how you associate that information with a specific user. \n\n\ud83d\udd25 Sign up for a FREE TypingDNA Developer Account! https://www.typingdna.com/clients/signup.\nTry the TypingDNA Demo: https://www.typingdna.com/#demo\n\n\ud83d\udcdd Code for this tutorial: https://github.com/techwithtim/Flask-Web-App-Tutorial\n\n\ud83d\udcfa Fix Pip on Windows: https://www.youtube.com/watch?v=AdUZArA-kZw&t=10s\n\ud83d\udcfa Fix Pip on Mac: https://www.youtube.com/watch?v=E-WhAS6qzsU\n\n\u2b50\ufe0f Timestamps \u2b50\ufe0f\n00:00:00 | Video Overview \n00:01:50 | Project Demo\n00:04:35 | Directory Structure\n00:06:40 | Flask Setup & Installation\n00:08:55 | Creating a Flask App\n00:14:01 | Creating Routes/Views\n00:21:50 | Jinja Templating Language & HTML Templates\n00:47:22 | Sign Up Page HTML \n00:52:14 | Login Page HTML\n00:54:31 | HTTP Requests (POST, GET, etc.)\n00:57:05 | Handling POST Requests\n01:03:14 | Message Flashing\n01:12:42 | Flask SQLAlchemy Setup\n01:15:46 | Database Models\n01:23:42 | Foreign Key Relationships\n01:29:10 | Database Creation\n01:34:14 | Creating New User Accounts\n01:43:16 | Logging In Users \n01:49:17 | Flask Login Module\n01:56:03 | Checking if User is Logged In\n01:58:54 | Notes HTML\n02:02:41 | Adding User Notes\n02:05:48 | Deleting User Notes\n\n\u25fc\ufe0f\u25fc\ufe0f\u25fc\ufe0f\u25fc\ufe0f\u25fc\ufe0f\u25fc\ufe0f\u25fc\ufe0f\u25fc\ufe0f\u25fc\ufe0f\u25fc\ufe0f\u25fc\ufe0f\u25fc\ufe0f\u25fc\ufe0f\u25fc\ufe0f\n\ud83d\udcb0 Courses & Merch \ud83d\udcb0 \n\ud83d\udcbb The Fundamentals of Programming w/ Python: https://tech-with-tim.teachable.com/p/the-fundamentals-of-programming-with-python \n\ud83d\udc55 Merchandise: https://teespring.com/stores/tech-with-tim-merch-shop \n\n\ud83d\udd17 Social Medias \ud83d\udd17 \n\ud83d\udcf8 Instagram: https://www.instagram.com/tech_with_tim \n\ud83d\udcf1 Twitter: https://twitter.com/TechWithTimm \n\u2b50 Discord: https://discord.gg/twt\n\ud83d\udcdd LinkedIn: https://www.linkedin.com/in/tim-ruscica-82631b179/ \n\ud83c\udf0e Website: https://techwithtim.net \n\ud83d\udcc2 GitHub: https://github.com/techwithtim \n\ud83d\udd0a Podcast: https://anchor.fm/tech-with-tim \n\n\ud83c\udfac My YouTube Gear \ud83c\udfac \n\ud83c\udfa5 Main Camera (EOS Canon 90D): https://amzn.to/3cY23y9 \n\ud83c\udfa5 Secondary Camera (Panasonic Lumix G7): https://amzn.to/3fl2iEV \n\ud83d\udcf9 Main Lens (EFS 24mm f/2.8): https://amzn.to/2Yuol5r \n\ud83d\udd79 Tripod: https://amzn.to/3hpSprv \n\ud83c\udfa4 Main Microphone (Rode NT1): https://amzn.to/2HrZxXc\n\ud83c\udfa4 Secondary Microphone (Synco Wireless Lapel System): https://amzn.to/3e07Swl \n\ud83c\udfa4 Third Microphone (Rode NTG4+): https://amzn.to/3oi0v8Z\n\u2600\ufe0f Lights: https://amzn.to/2ApeiXr \n\u2328 Keyboard (Daskeyboard 4Q): https://amzn.to/2YpN5vm \n\ud83d\uddb1 Mouse (Logitech MX Master): https://amzn.to/2HsmRDN\n\ud83d\udcf8 Webcam (Logitech 1080p Pro): https://amzn.to/2B2IXcQ \n\ud83d\udce2 Speaker (Beats Pill): https://amzn.to/2XYc5ef \n\ud83c\udfa7 Headphones (Bose Quiet Comfort 35): https://amzn.to/2MWbl3e \n\ud83c\udf1e Lamp (BenQ E-reading Lamp): https://amzn.to/3e0UCr8 \n\ud83c\udf1e Secondary Lamp (BenQ Screenbar Plus): https://amzn.to/30Dtafi \n\ud83d\udcbb Monitor (BenQ EX2780Q): https://amzn.to/2HsmUPZ\n\ud83d\udcbb Monitor (LG Ultrawide 34WN750): https://amzn.to/3dSD7tS\n\ud83c\udf99 Mic Boom Arm (Rode PSA 1): https://amzn.to/30EZw9m \n\ud83c\udf9a Audio Interface (Focusrite Scarlet 4i4): https://amzn.to/2TjXsih\n\n\ud83d\udcb8 Donations \ud83d\udcb8 \n\ud83d\udcb5 One-Time Donations: https://www.paypal.com/donate?hosted_button_id=CU9FV329ADNT8\n\ud83d\udcb0 Patreon: https://www.patreon.com/techwithtim\n\u25fc\ufe0f\u25fc\ufe0f\u25fc\ufe0f\u25fc\ufe0f\u25fc\ufe0f\u25fc\ufe0f\u25fc\ufe0f\u25fc\ufe0f\u25fc\ufe0f\u25fc\ufe0f\u25fc\ufe0f\u25fc\ufe0f\u25fc\ufe0f\u25fc\ufe0f\n\n\u2b50\ufe0f Tags \u2b50\ufe0f\n- Build a website\n- Python tutorial\n- Flask\n- Learn Python\n- How to use Python\n- HTTP requests \n- HTML Python\n- User accounts Python\n\n\u2b50\ufe0f Hashtags \u2b50\ufe0f\n#PythonWebsite #TechWithTim",
        "thumbnails": {
          "default": {
            "url": "https://i.ytimg.com/vi/dam0GPOAvVI/default.jpg",
            "width": 120,
            "height": 90
          },
          "medium": {
            "url": "https://i.ytimg.com/vi/dam0GPOAvVI/mqdefault.jpg",
            "width": 320,
            "height": 180
          },
          "high": {
            "url": "https://i.ytimg.com/vi/dam0GPOAvVI/hqdefault.jpg",
            "width": 480,
            "height": 360
          },
          "standard": {
            "url": "https://i.ytimg.com/vi/dam0GPOAvVI/sddefault.jpg",
            "width": 640,
            "height": 480
          },
          "maxres": {
            "url": "https://i.ytimg.com/vi/dam0GPOAvVI/maxresdefault.jpg",
            "width": 1280,
            "height": 720
          }
        },
        "channelTitle": "Donald Thompson",
        "playlistId": "PLIjhfluhNd98zSpKsf69arDUm1Dqbe0bn",
        "position": 109,
        "resourceId": {
          "kind": "youtube#video",
          "videoId": "dam0GPOAvVI"
        },
        "videoOwnerChannelTitle": "Tech With Tim",
        "videoOwnerChannelId": "UC4JX40jDee_tINbkjycV4Sg"
      },
      "contentDetails": {
        "videoId": "dam0GPOAvVI",
        "videoPublishedAt": "2021-02-01T16:00:23Z"
      }
    },
    {
      "kind": "youtube#playlistItem",
      "etag": "5IQfNFmkyIP3aMkFKOdlpnDj9K8",
      "id": "UExJamhmbHVoTmQ5OHpTcEtzZjY5YXJEVW0xRHFiZTBibi41NkI0NEY2RDEwNTU3Q0M2",
      "snippet": {
        "publishedAt": "2021-08-15T07:09:05Z",
        "channelId": "UCqsUJL5xIWuidR7sIrPLhAw",
        "title": "Pygame in 90 Minutes - For Beginners",
        "description": "In this Pygame for beginners video, we'll be making a game in about 90 minutes. I'm going to cover a lot of stuff about Pygame in this video, including sound effects, images, moving objects, collision, most of the fundamental things you need to make a basic game. We'll be making a simple 2 player game to showcase how everything works in Pygame in python.\n\n\ud83d\udcbb AlgoExpert is the coding interview prep platform that I used to ace my Microsoft and Shopify interviews. Check it out and get a discount on the platform using the code \"techwithtim\" https://algoexpert.io/techwithtim \n\n\u2b50\ufe0f Timestamps \u2b50\ufe0f\n0:00 | Intro to Pygame\n2:39 | Installing Pygame\n4:09 | Working with Pygame\n\n\ud83d\udcfa How to Install Pygame on Windows: https://www.youtube.com/watch?v=AdUZArA-kZw\n\ud83d\udcfa How to Install Pygame on Mac: https://www.youtube.com/watch?v=E-WhAS6qzsU&t=2s\n\n\ud83d\udcdd GitHub (Code Download): https://github.com/techwithtim/PygameForBeginners\n\n\u25fc\ufe0f\u25fc\ufe0f\u25fc\ufe0f\u25fc\ufe0f\u25fc\ufe0f\u25fc\ufe0f\u25fc\ufe0f\u25fc\ufe0f\u25fc\ufe0f\u25fc\ufe0f\u25fc\ufe0f\u25fc\ufe0f\u25fc\ufe0f\u25fc\ufe0f\n\ud83d\udcb0 Courses & Merch \ud83d\udcb0 \n\ud83d\udcbb The Fundamentals of Programming w/ Python: https://tech-with-tim.teachable.com/p/the-fundamentals-of-programming-with-python \n\ud83d\udc55 Merchandise: https://teespring.com/stores/tech-with-tim-merch-shop \n\n\ud83d\udd17 Social Medias \ud83d\udd17 \n\ud83d\udcf8 Instagram: https://www.instagram.com/tech_with_tim \n\ud83d\udcf1 Twitter: https://twitter.com/TechWithTimm \n\u2b50 Discord: https://discord.gg/twt\n\ud83d\udcdd LinkedIn: https://www.linkedin.com/in/tim-ruscica-82631b179/ \n\ud83c\udf0e Website: https://techwithtim.net \n\ud83d\udcc2 GitHub: https://github.com/techwithtim \n\ud83d\udd0a Podcast: https://anchor.fm/tech-with-tim \n\n\ud83c\udfac My YouTube Gear \ud83c\udfac \n\ud83c\udfa5 Main Camera (EOS Canon 90D): https://amzn.to/3cY23y9 \n\ud83c\udfa5 Secondary Camera (Panasonic Lumix G7): https://amzn.to/3fl2iEV \n\ud83d\udcf9 Main Lens (EFS 24mm f/2.8): https://amzn.to/2Yuol5r \n\ud83d\udd79 Tripod: https://amzn.to/3hpSprv \n\ud83c\udfa4 Main Microphone (Rode NT1): https://amzn.to/2HrZxXc\n\ud83c\udfa4 Secondary Microphone (Synco Wireless Lapel System): https://amzn.to/3e07Swl \n\ud83c\udfa4 Third Microphone (Rode NTG4+): https://amzn.to/3oi0v8Z\n\u2600\ufe0f Lights: https://amzn.to/2ApeiXr \n\u2328 Keyboard (Daskeyboard 4Q): https://amzn.to/2YpN5vm \n\ud83d\uddb1 Mouse (Logitech MX Master): https://amzn.to/2HsmRDN\n\ud83d\udcf8 Webcam (Logitech 1080p Pro): https://amzn.to/2B2IXcQ \n\ud83d\udce2 Speaker (Beats Pill): https://amzn.to/2XYc5ef \n\ud83c\udfa7 Headphones (Bose Quiet Comfort 35): https://amzn.to/2MWbl3e \n\ud83c\udf1e Lamp (BenQ E-reading Lamp): https://amzn.to/3e0UCr8 \n\ud83c\udf1e Secondary Lamp (BenQ Screenbar Plus): https://amzn.to/30Dtafi \n\ud83d\udcbb Monitor (BenQ EX2780Q): https://amzn.to/2HsmUPZ\n\ud83d\udcbb Monitor (LG Ultrawide 34WN750): https://amzn.to/3dSD7tS\n\ud83c\udf99 Mic Boom Arm (Rode PSA 1): https://amzn.to/30EZw9m \n\ud83c\udf9a Audio Interface (Focusrite Scarlet 4i4): https://amzn.to/2TjXsih\n\n\ud83d\udcb8 Donations \ud83d\udcb8 \n\ud83d\udcb5 One-Time Donations: https://www.paypal.com/donate?hosted_button_id=CU9FV329ADNT8\n\ud83d\udcb0 Patreon: https://www.patreon.com/techwithtim\n\u25fc\ufe0f\u25fc\ufe0f\u25fc\ufe0f\u25fc\ufe0f\u25fc\ufe0f\u25fc\ufe0f\u25fc\ufe0f\u25fc\ufe0f\u25fc\ufe0f\u25fc\ufe0f\u25fc\ufe0f\u25fc\ufe0f\u25fc\ufe0f\u25fc\ufe0f\n\n\u2b50\ufe0f Hashtags \u2b50\ufe0f\n#Pygame #Python #PythonPygame",
        "thumbnails": {
          "default": {
            "url": "https://i.ytimg.com/vi/jO6qQDNa2UY/default.jpg",
            "width": 120,
            "height": 90
          },
          "medium": {
            "url": "https://i.ytimg.com/vi/jO6qQDNa2UY/mqdefault.jpg",
            "width": 320,
            "height": 180
          },
          "high": {
            "url": "https://i.ytimg.com/vi/jO6qQDNa2UY/hqdefault.jpg",
            "width": 480,
            "height": 360
          },
          "standard": {
            "url": "https://i.ytimg.com/vi/jO6qQDNa2UY/sddefault.jpg",
            "width": 640,
            "height": 480
          },
          "maxres": {
            "url": "https://i.ytimg.com/vi/jO6qQDNa2UY/maxresdefault.jpg",
            "width": 1280,
            "height": 720
          }
        },
        "channelTitle": "Donald Thompson",
        "playlistId": "PLIjhfluhNd98zSpKsf69arDUm1Dqbe0bn",
        "position": 110,
        "resourceId": {
          "kind": "youtube#video",
          "videoId": "jO6qQDNa2UY"
        },
        "videoOwnerChannelTitle": "Tech With Tim",
        "videoOwnerChannelId": "UC4JX40jDee_tINbkjycV4Sg"
      },
      "contentDetails": {
        "videoId": "jO6qQDNa2UY",
        "videoPublishedAt": "2021-01-08T16:00:10Z"
      }
    },
    {
      "kind": "youtube#playlistItem",
      "etag": "SvWUa_FnO_RwXb56WMxd-nTJCRY",
      "id": "UExJamhmbHVoTmQ5OHpTcEtzZjY5YXJEVW0xRHFiZTBibi5BRDg1NUY1OTY2QzgzOEM0",
      "snippet": {
        "publishedAt": "2021-12-10T06:26:39Z",
        "channelId": "UCqsUJL5xIWuidR7sIrPLhAw",
        "title": "Beginners Guide To Web Scraping with Python - All You Need To Know",
        "description": "The internet is full of data. Lots and lots of data. Data I can haz. But manually going to a website and copying and pasting the data into a spreadsheet or database is tedious and a time consuming. Enter web scraping! This guide will show you how to get started in scraping web data to your hearts content in 8 minutes!\n_____________________________ \n\n\ud83d\udcf2\ud83d\udd17\ud83d\udd17\ud83d\udcf2 IMPORTANT LINKS \ud83d\udcf2\ud83d\udd17\ud83d\udd17\ud83d\udcf2 \n_____________________________ \n\n\u2022 \ud83d\udcbbPROJECT PAGE\ud83d\udcbb - https://github.com/gigafide/basic_python_scraping/\n\u2022 Python 3 - https://www.python.org/downloads/\n\u2022 BeautifulSoup - https://www.crummy.com/software/BeautifulSoup/bs4/doc/\n\u2022 Scraper Testing Website - http://quotes.toscrape.com/\n\u2022 Thonny - https://thonny.org/\n\n_____________________________ \n\n\ud83d\udce2\ud83d\udce2\ud83d\udce2\ud83d\udce2 Follow \ud83d\udce2\ud83d\udce2\ud83d\udce2\ud83d\udce2 \n____________________________ \n\nhttps://redd.it/5o3tp8 \nhttps://www.instagram.com/tinkernut_ftw\nhttps://www.twitter.com/tinkernut \nhttps://www.facebook.com/tinkernut",
        "thumbnails": {
          "default": {
            "url": "https://i.ytimg.com/vi/QhD015WUMxE/default.jpg",
            "width": 120,
            "height": 90
          },
          "medium": {
            "url": "https://i.ytimg.com/vi/QhD015WUMxE/mqdefault.jpg",
            "width": 320,
            "height": 180
          },
          "high": {
            "url": "https://i.ytimg.com/vi/QhD015WUMxE/hqdefault.jpg",
            "width": 480,
            "height": 360
          },
          "standard": {
            "url": "https://i.ytimg.com/vi/QhD015WUMxE/sddefault.jpg",
            "width": 640,
            "height": 480
          },
          "maxres": {
            "url": "https://i.ytimg.com/vi/QhD015WUMxE/maxresdefault.jpg",
            "width": 1280,
            "height": 720
          }
        },
        "channelTitle": "Donald Thompson",
        "playlistId": "PLIjhfluhNd98zSpKsf69arDUm1Dqbe0bn",
        "position": 111,
        "resourceId": {
          "kind": "youtube#video",
          "videoId": "QhD015WUMxE"
        },
        "videoOwnerChannelTitle": "Tinkernut",
        "videoOwnerChannelId": "UCZDA1kA3y3EIg25BpcHSpwQ"
      },
      "contentDetails": {
        "videoId": "QhD015WUMxE",
        "videoPublishedAt": "2021-11-27T13:00:24Z"
      }
    }
  ]
}